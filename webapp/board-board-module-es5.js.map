{"version":3,"sources":["webpack:///src/app/root-store/board/selectors/task.selectors.ts","webpack:///src/app/pages/board/board-routing.module.ts","webpack:///src/app/root-store/board/selectors/board.selectors.ts","webpack:///src/app/pages/board/components/column/column.component.ts","webpack:///src/app/pages/board/components/column/column.component.html","webpack:///src/app/pages/board/board.component.ts","webpack:///src/app/pages/board/board.component.html","webpack:///src/app/components/subscibed-users/subscibed-users.component.ts","webpack:///src/app/components/subscibed-users/subscibed-users.component.html","webpack:///src/app/core/utils/permissions/permissions.ts","webpack:///src/app/root-store/permissions/selectors/permissions.selectors.ts","webpack:///src/app/pages/board/board.module.ts","webpack:///src/app/pages/board/components/column/services/column.service.ts","webpack:///src/app/pages/board/components/board-header/services/board-header.service.ts","webpack:///src/app/core/services/user.service.ts","webpack:///src/app/pages/board/components/board-header/board-header.component.ts","webpack:///src/app/pages/board/components/board-header/board-header.component.html","webpack:///src/app/components/task-editor-dialog/task-editor-dialog.component.ts","webpack:///src/app/components/task-editor-dialog/task-editor-dialog.component.html","webpack:///src/app/pages/board/components/add-board-dialog/add-board-dialog.component.ts","webpack:///src/app/pages/board/components/add-board-dialog/add-board-dialog.component.html","webpack:///src/app/pages/board/components/column/componens/task/task.component.ts","webpack:///src/app/pages/board/components/column/componens/task/task.component.html"],"names":["selectBoards","state","board","getTaskComments","columnId","taskId","columns","find","column","_id","tasks","task","comments","getTaskLogs","logs","getTaskUsers","users","getTaskField","fieldName","routes","path","component","BoardRoutingModule","forChild","getBoardState","boardState","getBoardColumns","getBoard","ColumnComponent","store","fb","columnService","columnTitleControl","control","newTaskTitleControl","_column","isOpenEditior$","getIsOpenEditor","isOpenCreator$","getIsOpenCreator","event","item","element","nativeElement","parentElement","getAttribute","sourceCoumnId","previousContainer","destinationCoumnId","container","previousIndex","currentIndex","payload","source","droppableId","index","destination","boardId","dispatch","setIsOpenEditor","patchValue","title","value","closeEditor","trim","setIsOpenCreator","closeCreator","deleteColumn","drop","BoardComponent","activateRoute","isOpenCreate","snapshot","params","id","boardState$","select","boardColumns$","columnTitle","templateColumnId","Date","getTime","toString","SubscibedUsersComponent","destroy","actions","MODIFY","DELETE","ASSIGN","CREATE","roles","ADMIN","DEVELOPER","VIEWER","mappings","Map","set","hasPermission","action","role","upperAction","toUpperCase","has","get","includes","isAllow","auth","actionType","userId","data","user","admin","developer","some","viewer","selectState","isAllowDelete","isAllowCreate","isAllowModify","isAllowAssign","isAllowByAction","BoardModule","ColumnService","isOpenEditor","isOpenCreator","next","asObservable","BoardHeaderService","UserService","http","name","apiUrl","BoardHeaderComponent","boardHeaderService","dialog","boardTitleControl","boardTitle","board$","pipe","subscribe","allowDelete$","allowModify$","allowAssign$","complete","dialogRef","open","afterClosed","result","TaskEditorDialogComponent","taskName","marks","taskNameControl","taskCommentControl","statusControl","isOpenEditor$","isOpenMarks$","marksNames","statuses","currantUser","comments$","tasks$","users$","slice","reduce","push","status","closeMarks","mark","setIsOpenMarks","isCheckedMark","checkMark","filter","comment","email","commentId","Boolean","length","onChangeStatus","addOnTask","openMarks","createComment","AddBoardDialogComponent","userService","addBoardForm","group","required","filteredOptions$","controls","valueChanges","val","getUsers","response","option","close","onSelect","done","TaskComponent","stopPropagation","openDialog","deleteTask"],"mappings":"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","file":"board-board-module-es5.js","sourcesContent":["import { createSelector } from '@ngrx/store';\nimport { AppState } from '@root-store/state';\n\nimport { BoardState } from '@root-store/board/state';\nimport { Comment } from '@app/models/comment';\nimport { User } from '@app/models/user';\n\nconst selectBoards = (state: AppState) => state.board;\n\nexport const getTaskComments = (columnId: string, taskId: string) => {\n  return createSelector(\n    selectBoards,\n    ({ board }: BoardState): Comment[] => {\n      const { tasks } = board.columns.find((column) => {\n        if (column._id === columnId) {\n          return column\n        }\n      });\n\n      const { comments } = tasks.find((task) => {\n        if (task._id === taskId) {\n          return task;\n        }\n      });\n\n      return comments;\n    }\n  )\n};\n\nexport const getTaskLogs = (columnId: string, taskId: string) => {\n  return createSelector(\n    selectBoards,\n    ({ board }: BoardState): string[] => {\n      const { tasks } = board.columns.find((column) => {\n        if (column._id === columnId) {\n          return column\n        }\n      });\n\n      const { logs } = tasks.find((task) => {\n        if (task._id === taskId) {\n          return task;\n        }\n      });\n\n      return logs;\n    }\n  )\n};\n\nexport const getTaskUsers = (columnId: string, taskId: string) => {\n  return createSelector(\n    selectBoards,\n    ({ board }: BoardState): User[] => {\n      const { tasks } = board.columns.find((column) => {\n        if (column._id === columnId) {\n          return column\n        }\n      });\n\n      const { users } = tasks.find((task) => {\n        if (task._id === taskId) {\n          return task;\n        }\n      });\n\n      return users;\n    }\n  )\n};\n\n\nexport const getTaskField = (columnId: string, taskId: string, fieldName: string) => {\n  return createSelector(\n    selectBoards,\n    ({ board }: BoardState): any => {\n      const { tasks } = board.columns.find((column) => {\n        if (column._id === columnId) {\n          return column\n        }\n      });\n\n      const task = tasks.find((task) => {\n        if (task._id === taskId) {\n          return task;\n        }\n      });\n\n      return task[fieldName];\n    }\n  )\n};\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BoardComponent } from '@app/pages/board/board.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BoardComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BoardRoutingModule {\n}\n","import { createSelector } from '@ngrx/store';\nimport { AppState } from '@root-store/state';\n\nimport { Board } from '@app/models/board';\nimport { BoardState } from '@root-store/board/state';\nimport { Column } from '@app/models/column';\nimport { Comment } from '@app/models/comment';\n\nconst selectBoards = (state: AppState) => state.board;\n\nexport const getBoardState = createSelector(\n  selectBoards,\n  (boardState: BoardState): BoardState => {\n    return boardState;\n  }\n);\n\nexport const getBoardColumns = createSelector(\n  selectBoards,\n  ({ board }: BoardState): Column[] => {\n    return board?.columns || [];\n  }\n);\n\nexport const getBoard = createSelector(\n  selectBoards,\n  ({ board }: BoardState): Board => {\n    return board;\n  }\n);\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { FormBuilder, FormControl } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { CdkDragDrop } from '@angular/cdk/drag-drop';\n\nimport { ColumnService } from '@app/pages/board/components/column/services/column.service';\n\nimport * as BoardActions from '@root-store/board/actions/board.actions';\n\nimport { AppState } from '@root-store/state';\nimport { Column } from '@app/models/column';\nimport { Task } from '@app/models/task';\n\n@Component({\n  selector: 'app-column',\n  templateUrl: './column.component.html',\n  styleUrls: ['./column.component.scss'],\n  providers:  [ ColumnService ]\n})\nexport class ColumnComponent implements OnInit {\n  @Input()\n  set columnData(column: Column) {\n    this._column = {...column, tasks: [...column.tasks]};\n  }\n\n  @Input() boardId;\n\n  isOpenEditior$: Observable<boolean>;\n  isOpenCreator$: Observable<boolean>;\n\n  columnTitleControl: FormControl = this.fb.control('');\n  newTaskTitleControl: FormControl = this.fb.control('');\n\n  private _column;\n\n  get column(): Column {\n    return this._column;\n  }\n\n  constructor(\n    private store: Store<AppState>,\n    private fb: FormBuilder,\n    private columnService: ColumnService\n  ) { }\n\n  ngOnInit(): void {\n    this.isOpenEditior$ = this.columnService.getIsOpenEditor();\n    this.isOpenCreator$ = this.columnService.getIsOpenCreator();\n  }\n\n  public drop(event: CdkDragDrop<Task[]>): void {\n    const taskId = event.item.element.nativeElement.parentElement.getAttribute('aria-task-id');\n    const sourceCoumnId = event.previousContainer.element.nativeElement.getAttribute('column-id');\n    const destinationCoumnId = event.container.element.nativeElement.getAttribute('column-id');\n\n    if (event.previousIndex === event.currentIndex && sourceCoumnId === destinationCoumnId) {\n      return;\n    }\n\n    const payload = {\n      source: {\n        droppableId: sourceCoumnId,\n        index: event.previousIndex\n      },\n      destination: {\n        droppableId: destinationCoumnId,\n        index: event.currentIndex\n      },\n      boardId: this.boardId,\n      taskId\n    };\n\n    this.store.dispatch(BoardActions.dragAndDrop({payload}));\n  }\n\n  public openEditor(): void {\n    this.columnService.setIsOpenEditor(true);\n    this.columnTitleControl.patchValue(this.column.title);\n  }\n\n  public onEditTitle(): void {\n    if (this.columnTitleControl.value === this.column.title) {\n      this.closeEditor();\n      return;\n    }\n\n    if (!(this.columnTitleControl.value.trim && this.columnTitleControl.value.trim())) {\n      this.columnTitleControl.patchValue(this.column.title);\n      this.closeEditor();\n      return;\n    }\n\n    const payload = {\n      title: this.columnTitleControl.value,\n      columnId: this.column._id\n    };\n\n    this.store.dispatch(BoardActions.updateColumnTitle({ payload }));\n\n    this.closeEditor();\n  }\n\n  public keyEsc(): void {\n    this.columnTitleControl.patchValue(this.column.title);\n    this.closeEditor();\n  }\n\n  public openCreator(): void {\n    this.columnService.setIsOpenCreator(true);\n  }\n\n  public cancelCreate(): void {\n    this.newTaskTitleControl.patchValue('');\n    this.closeCreator();\n  }\n\n  public sendCreateTask(): void {\n    if (!this.newTaskTitleControl.value?.trim()) {\n      this.newTaskTitleControl.patchValue('');\n      this.closeCreator();\n      return;\n    }\n\n    const payload = {\n      columnId: this.column._id,\n      task: this.newTaskTitleControl.value,\n      boardId: this.boardId\n    };\n\n    this.newTaskTitleControl.patchValue('');\n    this.closeCreator();\n\n    this.store.dispatch(BoardActions.createTask({ payload }));\n  }\n\n  public deleteColumn(): void {\n    this.store.dispatch(BoardActions.deleteColumn({ payload: this.column._id }));\n  }\n\n  private closeEditor(): void {\n    this.columnService.setIsOpenEditor(false);\n  }\n\n  private closeCreator(): void {\n    this.columnService.setIsOpenCreator(false);\n  }\n\n  public trackById(index: number, element): number {\n    return element._id;\n  }\n}\n","<div class=\"column-wrap\">\n  <div class=\"column\">\n    <div class=\"column-header\">\n      <div class=\"column-header__title-wrap\">\n        <h5 class=\"column-header__title\" *ngIf=\"!(isOpenEditior$ | async)\" (click)=\"openEditor()\">{{column?.title}}</h5>\n\n        <app-editor\n          *ngIf=\"(isOpenEditior$ | async)\"\n          [formContromName]=\"columnTitleControl\"\n          (blurAction)=\"onEditTitle()\"\n          (enterAction)=\"onEditTitle()\"\n          (escAction)=\"keyEsc()\"\n        ></app-editor>\n\n        <app-delete-button (click)=\"deleteColumn()\" [classes]=\"'gray'\"></app-delete-button>\n\n      </div>\n    </div>\n\n    <div class=\"column-body\">\n      <div\n        cdkDropList\n        [cdkDropListData]=\"column.tasks\"\n        (cdkDropListDropped)=\"drop($event)\"\n        [attr.column-id]=\"column._id\"\n        class=\"tasks-wrap\"\n      >\n        <ng-container *ngFor=\"let task of column?.tasks; trackBy: trackById;\">\n          <app-task [attr.aria-task-id]=\"task._id\" [task]=\"task\" [columnId]=\"column._id\" [boardId]=\"boardId\"></app-task>\n        </ng-container>\n      </div>\n\n    </div>\n    <div class=\"column-footer\">\n      <div (click)=\"openCreator()\" *ngIf=\"!(isOpenCreator$ | async)\">Добавить ещё одну карточку</div>\n\n      <div class=\"column-footer-inner\" *ngIf=\"(isOpenCreator$ | async)\">\n        <app-editor\n          [formContromName]=\"newTaskTitleControl\"\n          (enterAction)=\"sendCreateTask()\"\n          (escAction)=\"cancelCreate()\"\n        ></app-editor>\n        <div class=\"column-footer-inner__btns\">\n          <button mat-raised-button color=\"primary\" (click)=\"sendCreateTask()\">Создать</button>\n          <app-delete-button (click)=\"cancelCreate()\" [classes]=\"'grey'\"></app-delete-button>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\n\nimport { AppState } from '@root-store/state';\nimport { BoardState } from '@root-store/board/state';\nimport { Column } from '@app/models/column';\nimport * as BoardActions from '@root-store/board/actions/board.actions';\nimport * as BoardSelectors from '@root-store/board/selectors/board.selectors';\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.scss']\n})\nexport class BoardComponent implements OnInit {\n  columnTitleControl: FormControl = this.fb.control('');\n\n  boardState$: Observable<BoardState>;\n  boardColumns$: Observable<Column[]>;\n\n  isOpenCreate = false;\n  boardId: string;\n\n  constructor(\n    private activateRoute: ActivatedRoute,\n    private store: Store<AppState>,\n    private fb: FormBuilder,\n  ) { }\n\n  ngOnInit(): void {\n    this.boardId = this.activateRoute.snapshot.params.id;\n\n    this.store.dispatch(BoardActions.loadBoard({payload: this.boardId}))\n\n    this.boardState$ = this.store.select(BoardSelectors.getBoardState);\n    this.boardColumns$ = this.store.select(BoardSelectors.getBoardColumns);\n  }\n\n  public trackById(index: number, element: Column): string {\n    return element._id;\n  }\n\n  public openCreator(): void {\n    this.isOpenCreate = true;\n  }\n\n  public closeCreator(): void {\n    this.columnTitleControl.patchValue('');\n    this.isOpenCreate = false;\n  }\n\n  public onCreateColumn(): void {\n    if (!this.columnTitleControl.value?.trim()) {\n      this.columnTitleControl.patchValue('');\n      this.closeCreator();\n      return;\n    }\n\n    const payload = {\n      boardId: this.boardId,\n      columnTitle: this.columnTitleControl.value,\n      templateColumnId: new Date().getTime().toString()\n    };\n\n    this.store.dispatch(BoardActions.createColumn({ payload }));\n\n    this.closeCreator();\n  }\n}\n","<div class=\"board-wrap\" cdkDropListGroup>\n  <app-board-header [boardId]=\"boardId\" *ngIf=\"!(boardState$ | async)?.isFetching\"></app-board-header>\n\n  <div class=\"board__columns\">\n\n    <ng-container *ngFor=\"let column of (boardColumns$ | async); trackBy: trackById;\">\n      <app-column\n        [columnData]=\"column\"\n        [boardId]=\"boardId\"\n      ></app-column>\n    </ng-container>\n\n\n    <div class=\"column-add-wrap\">\n      <div class=\"column-add\">\n        <div class=\"column-add__header\" (click)=\"openCreator()\" *ngIf=\"!isOpenCreate\">\n          Добавьте еще одну колонку\n        </div>\n        <div class=\"column-add__create\" *ngIf=\"isOpenCreate\">\n          <app-editor\n            [formContromName]=\"columnTitleControl\"\n            (blurAction)=\"onCreateColumn()\"\n            (escAction)=\"closeCreator()\"\n          ></app-editor>\n          <button mat-raised-button color=\"primary\">Создать</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n\n<app-loader *ngIf=\"(boardState$ | async)?.isFetching\"></app-loader>\n","import { Component, OnInit } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n@Component({\n  selector: 'app-subscibed-users',\n  templateUrl: './subscibed-users.component.html',\n  styleUrls: ['./subscibed-users.component.scss']\n})\nexport class SubscibedUsersComponent implements OnInit {\n  destroy: ReplaySubject<any> = new ReplaySubject<any>(1);\n\n  users: string[] = [];\n\n  constructor(\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  public trackById(index: number, element): number {\n    return element._id;\n  }\n}\n","<ul class=\"users-list list-unstyled\">\n  <li class=\"users-list__user\" *ngFor=\"let user of users; trackBy: trackById;\">{{user}}</li>\n</ul>\n","import { Board } from '@app/models/board';\nimport { Auth } from '@root-store/auth/state';\n\nexport const actions = {\n  MODIFY: 'MODIFY',\n  DELETE: 'DELETE',\n  ASSIGN: 'ASSIGN',\n  CREATE: 'CREATE'\n};\n\nexport const roles = {\n  ADMIN: 'ADMIN',\n  DEVELOPER: 'DEVELOPER',\n  VIEWER: 'VIEWER'\n};\n\nconst mappings = new Map();\n\nmappings.set(actions.DELETE, [roles.ADMIN]);\nmappings.set(actions.ASSIGN, [roles.ADMIN]);\nmappings.set(actions.CREATE, [roles.ADMIN, roles.DEVELOPER]);\nmappings.set(actions.MODIFY, [roles.ADMIN, roles.DEVELOPER]);\n\n\nconst hasPermission = (action: string, role: string): boolean => {\n  const upperAction = action.toUpperCase();\n\n  if (mappings.has(upperAction)) {\n    return mappings.get(upperAction).includes(role);\n  }\n\n  return false;\n};\n\nexport const isAllow = (auth: Auth, board: Board, actionType: string): boolean => {\n  const userId = auth.data?.user._id;\n\n  if (userId === board?.admin._id) {\n    return hasPermission(actionType, roles.ADMIN);\n  }\n\n  if (board?.developer.some((user) => user._id === userId)) {\n    return hasPermission(actionType, roles.DEVELOPER);\n  }\n\n  if (board?.viewer.some((user) => user._id === userId)) {\n    return hasPermission(actionType, roles.VIEWER);\n  }\n\n  return false;\n};\n","import { createSelector } from '@ngrx/store';\n\nimport { AppState } from '@root-store/state';\nimport { actions, isAllow } from '@app/core/utils/permissions/permissions';\n\nconst selectState = (state: AppState) => {\n  return state;\n};\n\nexport const isAllowDelete = createSelector(\n  selectState,\n  ({auth, board: {board}}: AppState): boolean => isAllow(auth, board, actions.DELETE)\n);\n\nexport const isAllowCreate = createSelector(\n  selectState,\n  ({auth, board: {board}}: AppState): boolean => isAllow(auth, board, actions.CREATE)\n);\n\nexport const isAllowModify = createSelector(\n  selectState,\n  ({auth, board: {board}}: AppState): boolean => isAllow(auth, board, actions.MODIFY)\n);\n\nexport const isAllowAssign = createSelector(\n  selectState,\n  ({auth, board: {board}}: AppState): boolean => isAllow(auth, board, actions.ASSIGN)\n);\n\nexport const isAllowByAction = (action: string) => createSelector(\n  selectState,\n  ({auth, board: { board }}: AppState): boolean => isAllow(auth, board, action)\n);\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BoardRoutingModule } from './board-routing.module';\nimport { SharedModule } from '@app/shared/shared.module';\n\nimport { EditorModule } from '@app/modules/editor/editor.module';\nimport { BoardComponent } from './board.component';\nimport { BoardHeaderComponent } from './components/board-header/board-header.component';\nimport { ColumnComponent } from './components/column/column.component';\nimport { SubscibedUsersComponent } from '@app/components/subscibed-users/subscibed-users.component';\nimport { TaskComponent } from './components/column/componens/task/task.component';\nimport { TaskEditorDialogComponent } from '@app/components/task-editor-dialog/task-editor-dialog.component';\nimport { AddBoardDialogComponent } from './components/add-board-dialog/add-board-dialog.component';\n\n\n@NgModule({\n  declarations: [\n    BoardComponent,\n    BoardHeaderComponent,\n    ColumnComponent,\n    SubscibedUsersComponent,\n    TaskComponent,\n    TaskEditorDialogComponent,\n    AddBoardDialogComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    EditorModule,\n    BoardRoutingModule,\n  ]\n})\nexport class BoardModule { }\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class ColumnService {\n  isOpenEditor = new BehaviorSubject<boolean>(false);\n\n  isOpenCreator = new BehaviorSubject<boolean>(false);\n\n  constructor() { }\n\n  public setIsOpenEditor(value: boolean) {\n    this.isOpenEditor.next(value);\n  }\n\n  public getIsOpenEditor(): Observable<boolean> {\n    return this.isOpenEditor.asObservable();\n  }\n\n  public setIsOpenCreator(value: boolean) {\n    this.isOpenCreator.next(value);\n  }\n\n  public getIsOpenCreator(): Observable<boolean> {\n    return this.isOpenCreator.asObservable();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class BoardHeaderService {\n  isOpenEditor = new BehaviorSubject<boolean>(false);\n\n  constructor(\n\n  ) { }\n\n  public setIsOpenEditor(value: boolean) {\n    this.isOpenEditor.next(value);\n  }\n\n  public getIsOpenEditor(): Observable<boolean> {\n    return this.isOpenEditor.asObservable();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@env/environment';\nimport { Response } from '@app/models/response';\nimport { User } from '@app/models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getUsers(name: string): Observable<Response<{users: User[]}>> {\n    return this.http.get<any>(`${environment.apiUrl}/users?name=${name}`)\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormControl } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '@root-store/state';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { AddBoardDialogComponent } from '@app/pages/board/components/add-board-dialog/add-board-dialog.component';\nimport { BoardHeaderService } from '@app/pages/board/components/board-header/services/board-header.service';\nimport { Board } from '@app/models/board';\nimport * as BoardSelectors from '@root-store/board/selectors/board.selectors';\nimport * as BoardActions from '@root-store/board/actions/board.actions';\nimport { isAllowAssign, isAllowDelete, isAllowModify } from '@root-store/permissions/selectors/permissions.selectors';\n\n@Component({\n  selector: 'app-board-header',\n  templateUrl: './board-header.component.html',\n  styleUrls: ['./board-header.component.scss'],\n  providers: [BoardHeaderService]\n})\nexport class BoardHeaderComponent implements OnInit, OnDestroy {\n  @Input() boardId: string;\n\n  destroy: ReplaySubject<any> = new ReplaySubject<any>(1);\n\n  board$;\n\n  isOpenEditior$;\n\n  boardTitleControl: FormControl = this.fb.control('');\n\n  boardTitle = '';\n\n  allowDelete$: Observable<boolean>;\n  allowModify$: Observable<boolean>;\n  allowAssign$: Observable<boolean>;\n\n  constructor(\n    private store: Store<AppState>,\n    private fb: FormBuilder,\n    private boardHeaderService: BoardHeaderService,\n    private activateRoute: ActivatedRoute,\n    private dialog: MatDialog,\n  ) { }\n\n  ngOnInit(): void {\n    this.board$ = this.store.select(BoardSelectors.getBoard);\n\n    this.isOpenEditior$ = this.boardHeaderService.getIsOpenEditor();\n\n    this.board$\n      .pipe(takeUntil(this.destroy))\n      .subscribe((board: Board) => {\n        if (board && board.title) {\n          this.boardTitle = board.title;\n        }\n      });\n\n    this.allowDelete$ = this.store.select(isAllowDelete);\n    this.allowModify$ = this.store.select(isAllowModify);\n    this.allowAssign$ = this.store.select(isAllowAssign);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy.next(null);\n    this.destroy.complete();\n  }\n\n  public addOnBoard(): void {\n    const dialogRef = this.dialog.open(AddBoardDialogComponent);\n\n    dialogRef.afterClosed()\n      .pipe(takeUntil(this.destroy))\n      .subscribe(result => {\n        const payload = { ...result, boardId: this.boardId };\n\n        this.store.dispatch(BoardActions.addUserOnBoard({payload}));\n      })\n  }\n\n  public openEditor(): void {\n    this.boardHeaderService.setIsOpenEditor(true);\n    this.boardTitleControl.patchValue(this.boardTitle);\n  }\n\n  public onEditTitle(): void {\n    if (this.boardTitleControl.value === this.boardTitle) {\n      this.closeEditor();\n      return;\n    }\n\n    if (!(this.boardTitleControl.value.trim && this.boardTitleControl.value.trim())) {\n      this.boardTitleControl.patchValue(this.boardTitle);\n      this.closeEditor();\n      return;\n    }\n\n    const payload = {\n      title: this.boardTitleControl.value,\n      boardId: this.activateRoute.snapshot.params.id\n    };\n\n    this.store.dispatch(BoardActions.updateBoardTitle({ payload }));\n\n    this.closeEditor();\n  }\n\n  public keyEsc(): void {\n    this.boardTitleControl.patchValue(this.boardTitle);\n    this.closeEditor();\n  }\n\n  public deleteBoard(): void {\n    const boardId = this.activateRoute.snapshot.params.id;\n\n    this.store.dispatch(BoardActions.deleteBoard({payload: boardId}));\n  }\n\n  private closeEditor(): void {\n    this.boardHeaderService.setIsOpenEditor(false);\n  }\n}\n","<div class=\"board-header\">\n  <div\n    class=\"board-header__title\"\n    [appAllowClick]=\"allowModify$ | async\"\n    (allowClick)=\"openEditor()\"\n    *ngIf=\"!(isOpenEditior$ | async)\"\n  >\n    {{(board$ | async)?.title}}\n  </div>\n\n  <app-editor\n    *ngIf=\"(isOpenEditior$ | async) && (allowModify$ | async)\"\n    [formContromName]=\"boardTitleControl\"\n    (blurAction)=\"onEditTitle()\"\n    (enterAction)=\"onEditTitle()\"\n    (escAction)=\"keyEsc()\"\n  ></app-editor>\n\n  <button *ngIf=\"allowAssign$ | async\" (click)=\"addOnBoard()\" mat-stroked-button color=\"primary\">Добавить на доску</button>\n\n  <app-subscibed-users></app-subscibed-users>\n\n  <div class=\"flex-spacer\"></div>\n  <app-delete-button *ngIf=\"allowDelete$ | async\" (click)=\"deleteBoard()\" [classes]=\"'white'\"></app-delete-button>\n</div>\n","import { Component, Inject, OnInit, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\nimport { FormBuilder, FormControl } from '@angular/forms';\nimport { map, take } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Task } from '@app/models/task';\nimport { User } from '@app/models/user';\nimport { AppState } from '@root-store/state';\nimport { Comment } from '@app/models/comment';\n\nimport * as BoardActions from '@root-store/board/actions/board.actions';\nimport * as AuthSelectors from '@root-store/auth/selectors/auth.selectors';\nimport { BoardState } from '@root-store/board/state';\nimport * as BoardSelectors from '@root-store/board/selectors/board.selectors';\nimport * as TaskSelectors from '@root-store/board/selectors/task.selectors';\n\n@Component({\n  selector: 'app-task-editor-dialog',\n  templateUrl: './task-editor-dialog.component.html',\n  styleUrls: ['./task-editor-dialog.component.scss']\n})\nexport class TaskEditorDialogComponent implements OnInit, OnDestroy {\n  destroy: ReplaySubject<any> = new ReplaySubject<any>(1);\n\n  users: User[];\n\n  task: Task = this.data.task;\n  taskName = this.task.task;\n  marks: string[] = [...this.task.marks] || [];\n\n  currantUser: User;\n\n  taskNameControl: FormControl = this.fb.control('');\n  taskCommentControl: FormControl = this.fb.control('');\n  statusControl: FormControl = this.fb.control('');\n\n  isOpenEditor$ = new BehaviorSubject<boolean>(false);\n  isOpenMarks$ = new BehaviorSubject<boolean>(false);\n  boardState$: Observable<BoardState>;\n  comments$: Observable<Comment[]>;\n  tasks$: Observable<string[]>;\n  users$: Observable<User[]>;\n\n  marksNames = ['blue', 'green', 'orange', 'purple', 'red', 'yellow'];\n  statuses = ['ready for develop', 'develop', 'on hold', 'review', 'test', 'done'];\n\n  constructor(\n    private fb: FormBuilder,\n    private store: Store<AppState>,\n    @Inject(MAT_DIALOG_DATA) public data: { task: Task, columnId: string, boardId: string },\n  ) {}\n\n  ngOnInit(): void {\n    this.store.select(AuthSelectors.getCurrentUser)\n      .pipe(take(1))\n      .subscribe((user) => {\n        this.currantUser = user;\n      });\n\n    this.comments$ = this.store.select(TaskSelectors.getTaskComments(this.data.columnId, this.task._id));\n    this.tasks$ = this.store.select(TaskSelectors.getTaskLogs(this.data.columnId, this.task._id));\n    this.users$ = this.store.select(TaskSelectors.getTaskField(this.data.columnId, this.task._id, 'users'))\n      .pipe(map((users: User[]) => users.slice(0, 3).reduce((result, user) => {\n        result.push(user.name[0]);\n        return result;\n      }, [])));\n\n    this.boardState$ = this.store.select(BoardSelectors.getBoardState);\n\n    this.statusControl.patchValue(this.task.status || '');\n  }\n\n  ngOnDestroy(): void {\n    this.closeEditor();\n    this.closeMarks();\n    this.destroy.next(null);\n    this.destroy.complete();\n  }\n\n  public trackById(index: number, element): number {\n    return element._id;\n  }\n\n  public trackByName(index: number, element: string): string {\n    return element;\n  }\n\n  public openEditor(): void {\n    this.setIsOpenEditor(true);\n    this.taskNameControl.patchValue(this.taskName);\n  }\n\n  public closeEditor(): void {\n    this.setIsOpenEditor(false);\n  }\n\n  public onEditTitle(): void {\n    if (this.taskNameControl.value === this.taskName) {\n      this.closeEditor();\n      return;\n    }\n\n    if (!this.taskNameControl.value?.trim()) {\n      this.taskNameControl.patchValue(this.taskName);\n      this.closeEditor();\n      return;\n    }\n\n    this.taskName = this.taskNameControl.value;\n\n    const payload = {\n      task: this.taskNameControl.value,\n      taskId: this.task._id,\n      boardId: this.data.boardId\n    };\n\n    this.store.dispatch(BoardActions.updateTaskTitle({payload}));\n\n    this.closeEditor();\n  }\n\n  public keyEsc(): void {\n    this.taskNameControl.patchValue(this.taskName);\n    this.closeEditor();\n  }\n\n  public onChangeStatus(): void {\n    const payload = {\n      taskId: this.task._id,\n      status: this.statusControl.value,\n      boardId: this.data.boardId\n    };\n\n    this.store.dispatch(BoardActions.changeTaskStatus({payload}))\n  }\n\n  public isCheckedMark(value: string): boolean {\n    return this.marks.some((mark) => mark === value);\n  }\n\n  public openMarks(): void {\n    this.setIsOpenMarks(true);\n  }\n\n  public closeMarks(): void {\n    this.setIsOpenMarks(false);\n  }\n\n  public selectMark(value: string): void {\n    const isCheckedMark = this.marks.some((checkMark) => checkMark === value);\n\n    if (isCheckedMark) {\n      this.marks = this.marks.filter((checkMark) => checkMark !== value);\n    }\n\n    if (!isCheckedMark) {\n      this.marks.push(value);\n    }\n\n    const payload = {\n      mark: value,\n      taskId: this.task._id,\n      columnId: this.data.columnId,\n      boardId: this.data.boardId\n    };\n\n    this.store.dispatch(BoardActions.updateTaskMarks({payload}));\n  }\n\n\n  public createComment(): void {\n    const comment = {\n      comment: this.taskCommentControl.value,\n      name: this.currantUser.name,\n      email: this.currantUser.email,\n    };\n\n    const payload = {\n      comment,\n      taskId: this.task._id,\n      boardId: this.data.boardId\n    };\n\n    this.store.dispatch(BoardActions.createTaskComment({payload}));\n  }\n\n  public deleteComment(commentId: string): void {\n    this.comments$ = this.store.select(TaskSelectors.getTaskComments(this.data.columnId, this.task._id)).pipe(\n      map((comments: Comment[]) => comments.filter((comment) => comment._id !== commentId))\n    );\n\n    const payload = {\n      commentId,\n      taskId: this.task._id,\n      boardId: this.data.boardId\n    };\n\n    this.store.dispatch(BoardActions.deleteTaskComment({payload}));\n  }\n\n  public isEmptyComment(): boolean {\n    const comment = this.taskCommentControl.value;\n\n    return Boolean(comment && comment.trim && comment.trim().length);\n  }\n\n  public addOnTask(): void {\n    const payload = {userId: this.currantUser._id, taskId: this.task._id, boardId: this.data.boardId};\n\n    this.store.dispatch(BoardActions.addUserOnTask({payload}));\n  }\n\n  private setIsOpenEditor(value: boolean): void {\n    this.isOpenEditor$.next(value);\n  }\n\n  private setIsOpenMarks(value: boolean): void {\n    this.isOpenMarks$.next(value);\n  }\n}\n","<div class=\"task-editor-modal\">\n  <div class=\"task-editor-modal__row task-editor-modal__title-wrap task-editor-modal__row--space-between\">\n    <div>\n      <mat-icon>note</mat-icon>\n      <div\n        class=\"task-editor-modal__title\"\n        (click)=\"openEditor()\"\n        *ngIf=\"!(isOpenEditor$ | async)\"\n      >\n        {{taskName}}\n      </div>\n      <app-editor\n        *ngIf=\"(isOpenEditor$ | async)\"\n        [formContromName]=\"taskNameControl\"\n        (blurAction)=\"onEditTitle()\"\n        (enterAction)=\"onEditTitle()\"\n        (escAction)=\"keyEsc()\"\n\n      ></app-editor>\n    </div>\n\n    <div>\n      <mat-form-field class=\"task-editor-modal__status\" appearance=\"outline\">\n        <mat-label>Status</mat-label>\n        <mat-select [formControl]=\"statusControl\" (selectionChange)=\"onChangeStatus()\">\n          <mat-option *ngFor=\"let status of statuses\" [value]=\"status\">\n            {{status}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </div>\n\n  <div class=\"task-editor-modal__row task-editor-modal__row--inline\">\n\n    <ul class=\"users-list list-unstyled\">\n      <li class=\"users-list__user\" *ngFor=\"let user of users$ | async; trackBy: trackById;\">{{user}}</li>\n    </ul>\n\n    <div class=\"task-editor-modal__subscribe-wrap\">\n      <button mat-raised-button color=\"primary\" (click)=\"addOnTask()\">Подписаться</button>\n    </div>\n\n    <div class=\"task-editor-modal__marks-wrap\">\n      <ul class=\"task-editor-modal__marks list-unstyled\">\n        <li\n          *ngFor=\"let mark of marks; trackBy: trackByName;\"\n          class=\"task-editor-modal__mark\"\n          [ngClass]=\"'task-editor-modal__mark--' + mark\"\n        ></li>\n        <li class=\"task-editor-modal__mark task-editor-modal__mark--main\" (click)=\"openMarks()\">\n          <mat-icon>add</mat-icon>\n        </li>\n\n        <div class=\"marks-modal-wrap\" *ngIf=\"isOpenMarks$ | async\">\n          <div class=\"marks-modal-overlay\" (click)=\"closeMarks()\"></div>\n          <div class=\"marks-modal\">\n            <div class=\"marks-modal__header\">\n              Метки\n              <app-delete-button (click)=\"closeMarks()\" classes=\"grey\"></app-delete-button>\n            </div>\n            <div class=\"marks-modal__list\">\n              <div\n                *ngFor=\"let mark of marksNames; trackBy: trackByName;\"\n                class=\"marks-modal__item\"\n                [ngClass]=\"'marks-modal__item--' + mark\"\n                (click)=\"selectMark(mark)\"\n              >\n                <mat-icon *ngIf=\"isCheckedMark(mark)\">check</mat-icon>\n              </div>\n\n            </div>\n          </div>\n        </div>\n      </ul>\n    </div>\n  </div>\n\n  <div class=\"task-editor-modal__row task-editor-modal__comment\">\n    <mat-icon>comment</mat-icon>\n    <app-editor\n      [placeholder]=\"'Напишите комментарий...'\"\n      [formContromName]=\"taskCommentControl\"\n    ></app-editor>\n\n    <div class=\"task-editor-modal__comment__btn\">\n      <button\n        mat-raised-button\n        color=\"primary\"\n        [disabled]=\"!isEmptyComment()\"\n        (click)=\"createComment()\"\n      >Сохранить</button>\n    </div>\n  </div>\n\n  <div class=\"task-editor-modal__row\">\n    <div class=\"task-editor-modal__logs logs\">\n      <mat-accordion>\n        <mat-expansion-panel class=\"task-editor-modal__commetns\" hideToggle>\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              Comments\n            </mat-panel-title>\n            <mat-panel-description>\n              <mat-icon>comment</mat-icon>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n\n          <ul *ngIf=\"(comments$ | async).length\" class=\"comments list-unstyled\">\n            <li class=\"comments__item\" *ngFor=\"let comment of comments$ | async; trackBy: trackById;\">\n              <div class=\"comments__commentator\">{{comment.name}}</div>\n              <div class=\"comments__comment\">{{comment.comment}}</div>\n              <div class=\"comments__delete\" (click)=\"deleteComment(comment._id)\">Удалить</div>\n            </li>\n          </ul>\n\n          <div *ngIf=\"!(comments$ | async).length\">Нет комментариев</div>\n        </mat-expansion-panel>\n\n        <mat-expansion-panel hideToggle>\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              Task logs\n            </mat-panel-title>\n            <mat-panel-description>\n              <mat-icon>article</mat-icon>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n\n          <ul *ngIf=\"(tasks$ | async).length\" class=\"logs__list\">\n            <li class=\"logs__item\" *ngFor=\"let log of tasks$ | async\">\n              <div>{{log.date | date : 'short'}}</div>\n              <div>{{log.action}}</div>\n            </li>\n          </ul>\n\n          <div *ngIf=\"!(tasks$ | async).length\">Нет логов</div>\n\n        </mat-expansion-panel>\n      </mat-accordion>\n    </div>\n  </div>\n</div>\n<app-loader *ngIf=\"(boardState$ | async)?.isFetching\"></app-loader>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { debounceTime, distinctUntilChanged, map, startWith, switchMap } from 'rxjs/operators';\n\nimport { Response } from '@app/models/response';\nimport { User } from '@app/models/user';\nimport { UserService } from '@app/core/services/user.service';\n\n@Component({\n  selector: 'app-add-board-dialog',\n  templateUrl: './add-board-dialog.component.html',\n  styleUrls: ['./add-board-dialog.component.scss']\n})\nexport class AddBoardDialogComponent implements OnInit {\n  addBoardForm: FormGroup;\n  filteredOptions$: Observable<User[]>;\n\n  constructor(\n    public dialogRef: MatDialogRef<AddBoardDialogComponent>,\n    private fb: FormBuilder,\n    private userService: UserService,\n  ) { }\n\n  ngOnInit(): void {\n    this.addBoardForm = this.fb.group({\n      name: this.fb.control('', Validators.required),\n      role: this.fb.control('', Validators.required),\n      userId: this.fb.control('')\n    });\n\n    this.filteredOptions$ = this.addBoardForm.controls.name.valueChanges\n      .pipe(\n        startWith(''),\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap(val => {\n          if (typeof val === 'string') {\n            return this.userService.getUsers(val)\n          }\n\n          return this.userService.getUsers(val.name)\n        }),\n        map((response: Response<{users: User[]}>) => response.data.users)\n      )\n  }\n\n  public displayProperty(value: User): string {\n    if (value) {\n      return value.name;\n    }\n  }\n\n  public onSelect(event: MatAutocompleteSelectedEvent): void {\n    this.addBoardForm.controls.userId.patchValue(event.option.value._id)\n  }\n\n  public close(result?: {userId: string, role: string}): void {\n    this.dialogRef.close(result);\n  }\n\n  public done(): void {\n    const payload = {\n      userId: this.addBoardForm.value.userId,\n      role: this.addBoardForm.value.role\n    };\n\n    this.close(payload);\n  }\n}\n","<form [formGroup]=\"addBoardForm\">\n  <div>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>User name</mat-label>\n      <input matInput formControlName=\"name\" [matAutocomplete]=\"auto\">\n      <mat-autocomplete formControlName=\"userId\" #auto=\"matAutocomplete\" (optionSelected)=\"onSelect($event)\" [displayWith]=\"displayProperty\">\n        <mat-option *ngFor=\"let option of filteredOptions$ | async\" [value]=\"option\">\n          {{option.name}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Choose role</mat-label>\n      <mat-select formControlName=\"role\">\n        <mat-option value=\"developer\">Developer</mat-option>\n        <mat-option value=\"viewer\">Viewer</mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n\n  <div>\n    <button mat-raised-button (click)=\"close()\">Закрыть</button>\n    <button mat-raised-button color=\"accent\" [disabled]=\"addBoardForm.invalid\" (click)=\"done()\">Добавить</button>\n  </div>\n</form>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Task } from '@app/models/task';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { TaskEditorDialogComponent } from '@app/components/task-editor-dialog/task-editor-dialog.component';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '@root-store/state';\n\nimport * as BoardActions from '@root-store/board/actions/board.actions';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.scss'],\n})\nexport class TaskComponent implements OnInit {\n  @Input() task: Task;\n\n  @Input() columnId: string;\n  @Input() boardId: string;\n\n  constructor(\n    public dialog: MatDialog,\n    private store: Store<AppState>\n  ) {}\n\n  ngOnInit(): void {\n\n  }\n\n  public openDialog(): void {\n    this.dialog.open(TaskEditorDialogComponent, {\n      data: {\n        task: this.task,\n        columnId: this.columnId,\n        boardId: this.boardId\n      },\n    });\n  }\n\n  public deleteTask(event): void {\n    event.stopPropagation();\n\n    const payload = {\n      taskId: this.task._id,\n      boardId: this.boardId\n    };\n\n    this.store.dispatch(BoardActions.deleteTask({ payload }));\n  }\n\n  public trackById(index: number, element): number {\n    return element._id;\n  }\n}\n","<div class=\"task\" (click)=\"openDialog()\" cdkDrag>\n\n  <app-delete-button (click)=\"deleteTask($event)\" [classes]=\"'gray'\"></app-delete-button>\n\n  <div class=\"marks-wrap\">\n    <div class=\"mark\" *ngFor=\"let mark of task?.marks; trackBy: trackById;\" [ngClass]=\"'mark--' + mark\"></div>\n  </div>\n\n  <div class=\"task__title\">{{task.task}}</div>\n\n  <div class=\"task__icons-wrap\">\n    <div>\n      <div class=\"task__icons\" *ngIf=\"task?.users?.length\">\n        <mat-icon>remove_red_eye</mat-icon>\n        {{task?.users.length}}\n      </div>\n      <div class=\"task__icons\" *ngIf=\"task?.comments?.length\">\n        <mat-icon>mode_comment</mat-icon>\n        {{task?.comments?.length}}\n      </div>\n    </div>\n    <div *ngIf=\"task?.status\">Status: {{task?.status}}</div>\n  </div>\n\n</div>\n"]}