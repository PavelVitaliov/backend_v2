{"version":3,"sources":["webpack:///src/app/pages/boards/boards.component.ts","webpack:///src/app/pages/boards/boards.component.html","webpack:///src/app/pages/boards/boards.module.ts","webpack:///src/app/pages/boards/boards-routing.module.ts"],"names":["BoardsComponent","fb","store","newBoardTitleControl","control","dispatch","boardsState$","select","boards$","pipe","boardsState","boards","patchValue","value","trim","closeCreator","payload","index","element","_id","BoardsModule","routes","path","component","BoardsRoutingModule","forChild"],"mappings":"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","file":"boards-boards-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { map } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\n\nimport { AppState } from '@root-store/state';\nimport { BoardsState } from '@root-store/boards/state';\nimport { Board } from '@app/models/board';\nimport * as BoardsSelectors from '@root-store/boards/selectors/boards.selectors';\nimport * as BoardsActions from '@root-store/boards/actions/boards.actions';\n\n@Component({\n  selector: 'app-boards',\n  templateUrl: './boards.component.html',\n  styleUrls: ['./boards.component.scss']\n})\nexport class BoardsComponent implements OnInit {\n  newBoardTitleControl = this.fb.control('');\n\n  boardsState$;\n  boards$;\n  boards: Board[];\n\n  constructor(\n    private fb: FormBuilder,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n    this.store.dispatch(BoardsActions.checkBoards());\n    this.boardsState$ = this.store.select(BoardsSelectors.getBoardsState);\n    this.boards$ = this.boardsState$.pipe(map((boardsState: BoardsState) => boardsState.boards));\n  }\n\n  public openCreator(): void {\n    this.store.dispatch(BoardsActions.openBoardCreator());\n  }\n\n  public closeCreator(): void {\n    this.newBoardTitleControl.patchValue('');\n    this.store.dispatch(BoardsActions.closeBoardCreator());\n  }\n\n  public sendCreateBoard(): void {\n    if (!this.newBoardTitleControl.value?.trim()) {\n      this.newBoardTitleControl.patchValue('');\n      this.closeCreator();\n      return;\n    }\n\n    this.store.dispatch(BoardsActions.createBoard({payload: this.newBoardTitleControl.value}));\n    this.closeCreator();\n  }\n\n  public cancelCreate(): void {\n    this.closeCreator();\n  }\n\n  public trackById(index: number, element: Board): string {\n    return element._id;\n  }\n\n}\n","<div class=\"boards-wrap container-wrap\">\n  <h2 *ngIf=\"(boards$ | async)?.admin.length\">Admin`s Boards</h2>\n  <ul class=\"boards-list list-unstyled\">\n    <li\n      class=\"boards-list__item\"\n      *ngFor=\"let board of (boards$ | async)?.admin; trackBy: trackById;\"\n    >\n      <a [routerLink]=\"['/board', board._id]\" class=\"boards-list__link\">\n        <span class=\"boards-list__title\">{{board.title}}</span>\n      </a>\n    </li>\n\n    <li *ngIf=\"!(boardsState$ | async)?.isFetching\" class=\"boards-list__item\">\n      <div class=\"boards-list__btn-wrap\">\n        <div class=\"boards-list__btn\" *ngIf=\"!(boardsState$ | async)?.isOpenBoardCreator\" (click)=\"openCreator()\">Создать доску</div>\n\n        <div class=\"boards-list__creator\" *ngIf=\"(boardsState$ | async)?.isOpenBoardCreator\">\n          <app-editor\n            [formContromName]=\"newBoardTitleControl\"\n            (enterAction)=\"sendCreateBoard()\"\n            (escAction)=\"cancelCreate()\"\n          ></app-editor>\n          <div class=\"boards-list__creator__btns\">\n            <button mat-raised-button color=\"primary\" (click)=\"sendCreateBoard()\">Создать</button>\n            <app-delete-button (click)=\"closeCreator()\" [classes]=\"'white'\"></app-delete-button>\n          </div>\n\n        </div>\n      </div>\n\n    </li>\n\n  </ul>\n\n  <h2 *ngIf=\"(boards$ | async)?.developer.length\">Developer`s Boards</h2>\n  <ul class=\"boards-list list-unstyled\">\n    <li\n      class=\"boards-list__item\"\n      *ngFor=\"let board of (boards$ | async)?.developer; trackBy: trackById;\"\n    >\n      <a [routerLink]=\"['/board', board._id]\" class=\"boards-list__link\">\n        <span class=\"boards-list__title\">{{board.title}}</span>\n      </a>\n    </li>\n  </ul>\n\n\n  <h2 *ngIf=\"(boards$ | async)?.viewer.length\">Viewer`s Boards</h2>\n  <ul class=\"boards-list list-unstyled\">\n    <li\n      class=\"boards-list__item\"\n      *ngFor=\"let board of (boards$ | async)?.viewer; trackBy: trackById;\"\n    >\n      <a [routerLink]=\"['/board', board._id]\" class=\"boards-list__link\">\n        <span class=\"boards-list__title\">{{board.title}}</span>\n      </a>\n    </li>\n  </ul>\n\n  <app-loader *ngIf=\"(boardsState$ | async)?.isFetching\"></app-loader>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BoardsRoutingModule } from './boards-routing.module';\nimport { BoardsComponent } from './boards.component';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { EditorModule } from '@app/modules/editor/editor.module';\n\n@NgModule({\n  declarations: [BoardsComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    EditorModule,\n    BoardsRoutingModule\n  ]\n})\nexport class BoardsModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BoardsComponent } from '@app/pages/boards/boards.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BoardsComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BoardsRoutingModule { }\n"]}