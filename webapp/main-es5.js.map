{"version":3,"sources":["webpack:///src/app/modules/header/header.component.ts","webpack:///src/app/modules/header/header.component.html","webpack:///src/app/root-store/board/board.module.ts","webpack:///src/app/root-store/board/effects/task.effects.ts","webpack:///src/app/shared/components/loader/loader.component.ts","webpack:///src/app/shared/components/loader/loader.component.html","webpack:///src/app/root-store/board/state/index.ts","webpack:///src/app/core/services/boards.service.ts","webpack:///src/app/core/services/auth.service.ts","webpack:///src/app/modules/header/header.module.ts","webpack:///src/app/root-store/auth/effects/auth.effects.ts","webpack:///src/environments/environment.ts","webpack:///src/app/root-store/boards/effects/boards.effects.ts","webpack:///src/app/root-store/boards/selectors/boards.selectors.ts","webpack:///src/app/root-store/permissions/permissions.module.ts","webpack:///src/app/root-store/boards/state/index.ts","webpack:///src/app/shared/directives/allow-click.directive.ts","webpack:///src/app/shared/directives/autofocus.directive.ts","webpack:///src/app/core/services/board.service.ts","webpack:///src/app/root-store/boards/boards.module.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/core/services/comment.service.ts","webpack:///src/app/root-store/boards/reducers/boards.reducer.ts","webpack:///src/app/shared/components/delete-button/delete-button.module.ts","webpack:///src/app/root-store/board/reducers/board.reducer.ts","webpack:///src/app/root-store/auth/auth.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/shared/fontawesome/fontawesome.module.ts","webpack:///src/app/app.module.ts","webpack:///src/app/root-store/state/index.ts","webpack:///src/app/root-store/board/effects/comment.effects.ts","webpack:///src/app/root-store/board/effects/column.effects.ts","webpack:///src/app/shared/directives/email-validate.directive.ts","webpack:///src/app/root-store/auth/actions/auth.actions.ts","webpack:///src/app/core/interceptors/auth.interceptor.ts","webpack:///src/app/shared/material/material.module.ts","webpack:///src/app/root-store/auth/reducers/auth.reducer.ts","webpack:///src/app/root-store/boards/actions/boards.actions.ts","webpack:///src/app/root-store/root-store.module.ts","webpack:///src/app/root-store/board/actions/board.actions.ts","webpack:///src/app/root-store/auth/state/index.ts","webpack:///src/app/root-store/board/effects/board.effects.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/shared/components/delete-button/delete-button.component.ts","webpack:///src/app/shared/components/delete-button/delete-button.component.html","webpack:///src/app/core/services/column.service.ts","webpack:///src/app/core/services/task.service.ts","webpack:///src/app/shared/components/loader/loader.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["HeaderComponent","store","dispatch","logOut","BoardModule","forFeature","TaskEffects","actions$","taskService","createTask$","pipe","payload","columnId","task","boardId","createTask","error","console","deleteTask$","taskId","deleteTask","updateTaskTitle$","updateTaskTitle","updateTaskMarks$","mark","updateTaskMarks","changeTaskStatus$","status","changeTaskStatus","LoaderComponent","initialState","errorMessage","isFetching","success","board","BoardsService","http","get","apiUrl","title","post","AuthService","data","HeaderModule","AuthEffects","router","authService","logIn$","logIn","response","localStorage","setItem","token","signUp$","signUp","logInSuccess$","navigate","checkAuthByToken$","checkLogin","chechAuthByTokenSuccess$","logOut$","removeItem","environment","production","BoardsEffects","boardsService","createBoard$","actionData","createBoard","checkBoards$","checkStoreBoards","boards","loadBoards$","getBoards","log","select","selectBoards","state","getBoardsState","boardsState","PermissionsModule","isOpenBoardCreator","AllowClickDirective","allowClick","appAllowClick","emit","AutofocusDirective","el","condition","_autofocus","nativeElement","focus","BoardService","patch","put","BoardsModule","SharedModule","CommentService","comment","commentId","request","body","boardsReducer","$set","message","admin","$push","reducer","action","DeleteButtonModule","boardReducer","columns","reduce","previousValue","currentValue","_id","push","map","column","tasks","marks","isCheckedMark","some","checkMark","filter","columnSource","find","source","droppableId","columnDestination","destination","tasksSource","tasksDestination","index","AuthModule","AppComponent","FontawesomeModule","library","addIcons","AppModule","provide","useClass","multi","initialAppState","auth","CommentEffects","commentService","createTaskComment$","createTaskComment","deleteTaskComment$","deleteTaskComment","ColumnEffects","columnService","createColumn$","columnTitle","createColumn","deleteColumn$","deleteColumn","updateColumnTitle$","updateColumnTitle","emailValidation","control","reg","isValidEmail","test","value","emailInvalid","isEmptyValidation","trim","required","EmailValidateDirective","useExisting","authActionTypes","Auth","AuthSuccess","AuthFailure","SignUp","SignUpSuccess","SignUpFailure","ChechAuthByToken","ChechAuthByTokenSuccess","ChechAuthByTokenFailure","LogOut","authSuccess","authFailure","signUpSuccess","signUpFailure","chechAuthByToken","chechAuthByTokenSuccess","chechAuthByTokenFailure","AuthInterceptor","next","sessionToken","getItem","authReq","clone","headers","set","handle","err","statusText","MaterialModule","authReducer","isAuthenticated","boardsActionTypes","LoadBoards","LoadBoardsSuccess","LoadBoardsFailure","OpenBoardCreator","CloseBoardCreator","CreateBoard","CreateBoardSuccess","CreateBoardFailure","CheckBoards","CheckBoardsSuccess","loadBoards","loadBoardsSuccess","loadBoardsFailure","openBoardCreator","closeBoardCreator","createBoardSuccess","createBoardFailure","checkBoards","checkBoardsSuccess","logOutClear","type","metaReducers","RootStoreModule","forRoot","runtimeChecks","strictStateImmutability","stateKey","routerState","instrument","boardActionTypes","LoadBoard","LoadBoardSuccess","LoadBoardFailure","UpdateBoardState","UpdateBoardTitle","UpdateBoardTitleSuccess","UpdateBoardTitleFailure","DeleteBoard","DeleteBoardSuccess","DeleteBoardFailure","DragAndDrop","CreateColumn","CreateColumnFailure","DeleteColumn","DeleteColumnSuccess","DeleteColumnFailure","UpdateColumnTitle","UpdateColumnTitleSuccess","UpdateColumnTitleFailure","CreateTask","CreateTaskFailure","DeleteTask","DeleteTaskFailure","UpdateTaskTitle","UpdateTaskTitleFailure","UpdateTaskMarks","UpdateTaskMarksFailure","AddUserOnTask","ChangeTaskStatus","ChangeTaskStatusFailure","CreateTaskComment","CreateTaskCommentFailure","DeleteTaskComment","DeleteTaskCommentFailure","AddUserOnBoard","loadBoard","loadBoardSuccess","loadBoardFailure","updateBoardState","updateBoardTitle","updateBoardTitleSuccess","updateBoardTitleFailure","deleteBoard","deleteBoardSuccess","deleteBoardFailure","dragAndDrop","createColumnFailure","deleteColumnSuccess","deleteColumnFailure","updateColumnTitleSuccess","updateColumnTitleFailure","createTaskFailure","deleteTaskFailure","updateTaskTitleFailure","updateTaskMarksFailure","changeTaskStatusFailure","addUserOnTask","createTaskCommentFailure","deleteTaskCommentFailure","addUserOnBoard","initialAuthState","BoardEffects","as","boardService","loadBoard$","getBoard","updateBoardTitle$","deleteBoard$","dnd$","dnd","addUserOnTask$","userId","addUserOnBoard$","role","routes","path","loadChildren","then","m","PagesModule","AppRoutingModule","enableTracing","DeleteButtonComponent","ColumnService","TaskService","LoaderModule","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport { AppState } from '@root-store/state';\n\nimport * as AuthActions from '@root-store/auth/actions/auth.actions';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  public logOut(): void {\n    this.store.dispatch(AuthActions.logOut());\n  }\n\n}\n","<mat-toolbar class=\"header\" color=\"primary\">\n  <mat-toolbar-row>\n    <mat-icon routerLink=\"/boards\" class=\"header__icon\" aria-hidden=\"false\">home</mat-icon>\n    <span class=\"header-spacer\"></span>\n    <button mat-button [matMenuTriggerFor]=\"headerMenu\"><mat-icon>more_vert</mat-icon></button>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<mat-menu class=\"header-menu\" #headerMenu=\"matMenu\">\n  <a class=\"header-menu__item\" routerLink=\"/boards\">Boards</a>\n  <a class=\"header-menu__item\" routerLink=\"/sign-in\">SignIn</a>\n  <a class=\"header-menu__item\" routerLink=\"/sign-up\">SignUp</a>\n  <a class=\"header-menu__item\" (click)=\"logOut()\">Log out</a>\n\n\n</mat-menu>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { BoardEffects } from './effects/board.effects';\nimport { reducer } from '@root-store/board/reducers/board.reducer';\nimport { ColumnEffects } from './effects/column.effects';\nimport { TaskEffects } from './effects/task.effects';\nimport { CommentEffects } from './effects/comment.effects';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    StoreModule.forFeature('board', reducer),\n    EffectsModule.forFeature([BoardEffects, ColumnEffects, TaskEffects, CommentEffects])\n  ]\n})\nexport class BoardModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap, take, catchError } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { Actions, ofType, Effect } from '@ngrx/effects';\n\nimport { AppState } from '@root-store/state';\n\nimport { TaskService } from '@app/core/services/task.service';\nimport { CustomActionType } from '@app/models/action';\nimport { Board } from '@app/models/board';\nimport { Task } from '@app/models/task';\n\nimport * as BoardActions from '@root-store/board/actions/board.actions';\n\nimport { getBoard } from '@root-store/board/selectors/board.selectors';\n\n@Injectable()\nexport class TaskEffects {\n\n  constructor(\n    private actions$: Actions,\n    private store: Store<AppState>,\n    private taskService: TaskService\n  ) {\n  }\n\n  @Effect()\n  createTask$ = this.actions$.pipe(\n    ofType(BoardActions.createTask),\n    switchMap(({payload}: CustomActionType<{columnId: string, task: string, boardId: string}>) => {\n      const { columnId, task, boardId } = payload;\n\n      return this.taskService.createTask(columnId, task)\n        .pipe(\n          map(() => {\n            return BoardActions.loadBoard({ payload: boardId });\n          }),\n          catchError((error: HttpErrorResponse) => {\n            console.error(error);\n            return of(BoardActions.createTaskFailure({ payload: error }));\n          })\n        )\n    })\n  );\n\n  @Effect()\n  deleteTask$ = this.actions$.pipe(\n    ofType(BoardActions.deleteTask),\n    switchMap(({payload}: CustomActionType<{taskId: string, boardId: string}>) => {\n      const { taskId, boardId } = payload;\n\n      return this.taskService.deleteTask(taskId)\n        .pipe(\n          map(() => {\n            return BoardActions.loadBoard({ payload: boardId });\n          }),\n          catchError((error: HttpErrorResponse) => {\n            console.error(error);\n            return of(BoardActions.deleteTaskFailure({ payload: error }));\n          })\n        )\n    })\n  );\n\n  @Effect()\n  updateTaskTitle$ = this.actions$.pipe(\n    ofType(BoardActions.updateTaskTitle),\n    switchMap(({payload}: CustomActionType<{task: string, taskId: string, boardId: string}>) => {\n      const { task, taskId, boardId } = payload;\n\n      return this.taskService.updateTaskTitle(taskId, task)\n        .pipe(\n          map(() => {\n            return BoardActions.loadBoard({ payload: boardId });\n          }),\n          catchError((error: HttpErrorResponse) => {\n            console.error(error);\n            return of(BoardActions.updateTaskTitleFailure({ payload: error }));\n          })\n        )\n    })\n  );\n\n  @Effect()\n  updateTaskMarks$ = this.actions$.pipe(\n    ofType(BoardActions.updateTaskMarks),\n    switchMap(({payload}) => {\n      const { mark, taskId, boardId } = payload;\n\n      return this.taskService.updateTaskMarks(taskId, mark)\n        .pipe(\n          map(() => {\n            return BoardActions.loadBoard({ payload: boardId });\n          }),\n          catchError((error: HttpErrorResponse) => {\n            console.error(error);\n            return of(BoardActions.updateTaskMarksFailure({ payload: error }));\n          })\n        )\n    })\n  );\n\n  @Effect()\n  changeTaskStatus$ = this.actions$.pipe(\n    ofType(BoardActions.changeTaskStatus),\n    switchMap(({payload}) => {\n      const { taskId, status, boardId } = payload;\n\n      return this.taskService.changeTaskStatus(taskId, status)\n        .pipe(\n          map(() => {\n            return BoardActions.loadBoard({ payload: boardId });\n          }),\n          catchError((error: HttpErrorResponse) => {\n            console.error(error);\n            return of(BoardActions.changeTaskStatusFailure({ payload: error }));\n          })\n        )\n    })\n  );\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"loader-wrap\">\n  <mat-spinner color=\"primary\"></mat-spinner>\n</div>\n","import { Board } from '@app/models/board';\n\nexport interface BoardState {\n  errorMessage: any;\n  isFetching: boolean;\n  success?: boolean;\n  board: Board;\n  type?: string;\n}\n\nexport const initialState: BoardState = {\n  errorMessage: null,\n  isFetching: false,\n  success: false,\n  board: null,\n};\n","import { Injectable } from '@angular/core';\n\nimport { environment } from '@env/environment';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Response } from '@app/models/response';\nimport { Boards } from '@app/models/boards';\nimport { Board } from '@app/models/board';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BoardsService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getBoards(): Observable<Response<Boards> | HttpErrorResponse> {\n    return this.http.get<Response<Boards> | HttpErrorResponse>(`${environment.apiUrl}/boards`);\n  }\n\n  createBoard(title: string): Observable<Response<Board> | HttpErrorResponse> {\n    return this.http.post<Response<Board> | HttpErrorResponse>(`${environment.apiUrl}/boards`, {title});\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@env/environment';\n\nimport { Response } from '@app/models/response';\nimport { AuthDataRequest, AuthResponse, SignUpDataRequest } from '@app/models/auth';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  logIn(data: AuthDataRequest): Observable<Response<AuthResponse> | HttpErrorResponse> {\n    return this.http.post<Response<AuthResponse> | HttpErrorResponse>\n    (`${environment.apiUrl}/auth/signin`, data);\n  }\n\n  signUp(data: SignUpDataRequest): Observable<Response<AuthResponse> | HttpErrorResponse> {\n    return this.http.post<Response<AuthResponse> | HttpErrorResponse>\n    (`${environment.apiUrl}/auth/signup`, data);\n  }\n\n  checkLogin(): Observable<Response<AuthResponse> | HttpErrorResponse> {\n    return this.http.get<Response<AuthResponse> | HttpErrorResponse>(`${environment.apiUrl}/users/current`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header.component';\n\nimport { SharedModule } from '@app/shared/shared.module';\n\n@NgModule({\n  declarations: [HeaderComponent],\n  imports: [\n    CommonModule,\n    SharedModule\n  ],\n  exports: [HeaderComponent]\n})\nexport class HeaderModule { }\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { catchError, map, switchMap, tap } from 'rxjs/operators';\n\nimport { AuthService } from '@app/core/services/auth.service';\nimport { CustomActionType } from '@app/models/action';\nimport { AuthDataRequest, AuthResponse, SignUpDataRequest } from '@app/models/auth';\nimport { Response } from '@app/models/response';\n\nimport * as AuthActions from '@root-store/auth/actions/auth.actions';\nimport * as BoardsActions from '@root-store/boards/actions/boards.actions';\n\n@Injectable()\nexport class AuthEffects {\n\n  constructor(\n    private actions$: Actions,\n    private router: Router,\n    private authService: AuthService\n  ) { }\n\n  @Effect()\n  logIn$ = this.actions$.pipe(\n    ofType(AuthActions.auth),\n    switchMap(({payload}: CustomActionType<AuthDataRequest>) => {\n      return this.authService.logIn(payload)\n        .pipe(\n          map((response: Response<AuthResponse>) => {\n            localStorage.setItem('sessionToken', response.data.token);\n            return AuthActions.authSuccess({payload: response.data});\n          }),\n          catchError((error: HttpErrorResponse) => {\n            return of(AuthActions.authFailure({payload: error}));\n          })\n        );\n    })\n  );\n\n  @Effect()\n  signUp$ = this.actions$.pipe(\n    ofType(AuthActions.signUp),\n    switchMap(({ payload }: CustomActionType<SignUpDataRequest>) => {\n      return this.authService.signUp(payload)\n        .pipe(\n          map((response: Response<AuthResponse>) => {\n            return AuthActions.signUpSuccess({ payload: response.data});\n          }),\n          catchError((error) => {\n            console.error(error);\n            return of(AuthActions.signUpFailure({ payload: error }));\n          })\n        );\n    })\n  );\n\n  @Effect({ dispatch: false })\n  logInSuccess$ = this.actions$.pipe(\n    ofType(AuthActions.authSuccess, AuthActions.signUpSuccess),\n    tap(() => this.router.navigate(['/']))\n  );\n\n  @Effect()\n  checkAuthByToken$ = this.actions$.pipe(\n    ofType(AuthActions.chechAuthByToken),\n    switchMap(() => {\n      return this.authService.checkLogin().pipe(\n        map((response: Response<AuthResponse>) => {\n          return AuthActions.chechAuthByTokenSuccess({ payload: response.data});\n        }),\n        catchError((error) => {\n          console.error(error);\n          return of(AuthActions.chechAuthByTokenFailure({ payload: error }));\n        })\n      );\n    })\n  );\n\n  @Effect()\n  chechAuthByTokenSuccess$ = this.actions$.pipe(\n    ofType(AuthActions.chechAuthByTokenSuccess),\n    map(() => BoardsActions.loadBoards())\n  );\n\n  @Effect({ dispatch: false })\n  logOut$ = this.actions$.pipe(\n    ofType(AuthActions.logOut),\n    tap(() => {\n      localStorage.removeItem('sessionToken');\n      return this.router.navigate(['/sign-in']);\n    })\n  );\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap, take } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { Actions, ofType, Effect } from '@ngrx/effects';\n\nimport { BoardsService } from '@app/core/services/boards.service';\n\nimport { CustomActionType } from '@app/models/action';\nimport { AppState } from '@root-store/state';\nimport { Response } from '@app/models/response';\nimport { Boards } from '@app/models/boards';\n\nimport * as BoardsActions from '@root-store/boards/actions/boards.actions';\n\nimport { getBoards } from '@root-store/boards/selectors/boards.selectors';\nimport { Board } from '@app/models/board';\n\n@Injectable()\nexport class BoardsEffects {\n\n  constructor(\n    private actions$: Actions,\n    private boardsService: BoardsService,\n    private store: Store<AppState>\n  ) { }\n\n  @Effect()\n  createBoard$ = this.actions$.pipe(\n    ofType(BoardsActions.createBoard),\n    switchMap((actionData: CustomActionType<string>) =>\n      this.boardsService.createBoard(actionData.payload).pipe(\n        map(({ data }: Response<Board>) => {\n          return BoardsActions.createBoardSuccess({ payload: data} );\n        })\n      )\n    )\n  );\n\n  @Effect()\n  checkBoards$ = this.actions$.pipe(\n    ofType(BoardsActions.checkBoards),\n    switchMap(() => {\n      return this.checkStoreBoards().pipe(\n        map((boards: Boards | null) => {\n          if (boards) {\n            return BoardsActions.checkBoardsSuccess();\n          } else {\n            return BoardsActions.loadBoards();\n          }\n        })\n      );\n    })\n  );\n\n  @Effect()\n  loadBoards$ = this.actions$.pipe(\n    ofType(BoardsActions.loadBoards),\n    switchMap(() => {\n      return this.boardsService.getBoards().pipe(\n        map(({ data }: Response<Boards>) => {\n          return BoardsActions.loadBoardsSuccess({payload: data});\n        }),\n        catchError((error: HttpErrorResponse) => {\n          console.log(error);\n          return of(BoardsActions.loadBoardsFailure({payload: error}));\n        })\n      );\n    })\n  );\n\n  checkStoreBoards(): Observable<Boards> {\n    return this.store.select(getBoards).pipe(take(1));\n  }\n\n}\n","import { createSelector } from '@ngrx/store';\n\nimport { AppState } from '@root-store/state';\nimport { BoardsState } from '@root-store/boards/state';\nimport { Boards } from '@app/models/boards';\n\nconst selectBoards = (state: AppState) => state.boards;\n\nexport const getBoardsState = createSelector(\n  selectBoards,\n  (boardsState: BoardsState): BoardsState => {\n    return boardsState;\n  }\n);\n\nexport const getBoards = createSelector(\n  selectBoards,\n  ({ boards }: BoardsState): Boards => {\n    return boards;\n  }\n);\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ]\n})\nexport class PermissionsModule { }\n","import { Boards } from '@app/models/boards';\n\nexport interface BoardsState {\n  errorMessage: any;\n  isFetching: boolean;\n  success?: boolean;\n  boards: Boards;\n  isOpenBoardCreator: boolean;\n}\n\nexport const initialState: BoardsState = {\n  errorMessage: null,\n  isFetching: false,\n  success: false,\n  boards: null,\n  isOpenBoardCreator: false\n};\n","import { Directive, Output, EventEmitter, Input, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appAllowClick]'\n})\nexport class AllowClickDirective {\n  @Output() allowClick = new EventEmitter();\n  @Input() appAllowClick: boolean;\n  constructor() { }\n\n  @HostListener('click', ['$event'])\n  clickEvent() {\n    if (this.appAllowClick) {\n      this.allowClick.emit();\n    }\n  }\n\n}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[appAutofocus]'\n})\nexport class AutofocusDirective implements OnInit {\n  @Input('appAutofocus') set appAutofocus(condition: boolean) {\n    this._autofocus = condition !== false;\n  }\n\n  private _autofocus: boolean;\n\n  constructor(private el: ElementRef) {\n  }\n\n  ngOnInit(): void {\n    if (this._autofocus || typeof this._autofocus === 'undefined') {\n      this.el.nativeElement.focus();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@env/environment';\n\nimport { DeleteBoardResponse, Response } from '@app/models/response';\nimport { AddingUser, Board, DNDData } from '@app/models/board';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BoardService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getBoard(boardId: string): Observable<Response<Board> | HttpErrorResponse> {\n    return this.http.get<Response<Board> | HttpErrorResponse>(`${environment.apiUrl}/boards/${boardId}`);\n  }\n\n  addUserOnBoard(data: AddingUser, boardId: string): Observable<Response<Board> | HttpErrorResponse> {\n    return this.http.patch<Response<Board> | HttpErrorResponse>(`${environment.apiUrl}/boards/${boardId}`, data);\n  }\n\n  updateBoardTitle(boardId: string, title: string): Observable<Response<Board> | HttpErrorResponse> {\n    return this.http.put<Response<Board> | HttpErrorResponse>(`${environment.apiUrl}/boards/${boardId}`, { title });\n  }\n\n  deleteBoard(boardId: string): Observable<DeleteBoardResponse | HttpErrorResponse> {\n    return this.http.delete<DeleteBoardResponse | HttpErrorResponse>(`${environment.apiUrl}/boards/${boardId}`);\n  }\n\n  dnd(data: DNDData) {\n    return this.http.patch(`${environment.apiUrl}/tasks`, { ...data });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { BoardsEffects } from './effects/boards.effects';\nimport { reducer } from '@root-store/boards/reducers/boards.reducer';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    StoreModule.forFeature('boards', reducer),\n    EffectsModule.forFeature([BoardsEffects])\n  ]\n})\nexport class BoardsModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { EmailValidateDirective } from '@app/shared/directives/email-validate.directive';\n\nimport { FontawesomeModule } from '@app/shared/fontawesome/fontawesome.module';\nimport { MaterialModule } from '@app/shared/material/material.module';\nimport { LoaderModule } from './components/loader/loader.module';\nimport { DeleteButtonModule } from '@app/shared/components/delete-button/delete-button.module';\nimport { AutofocusDirective } from './directives/autofocus.directive';\nimport { AllowClickDirective } from '@app/shared/directives/allow-click.directive';\n\n@NgModule({\n  declarations: [\n    EmailValidateDirective,\n    AutofocusDirective,\n    AllowClickDirective,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    MaterialModule,\n    FontawesomeModule,\n    LoaderModule,\n    DeleteButtonModule,\n  ],\n  exports: [\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    MaterialModule,\n    FontawesomeModule,\n    LoaderModule,\n    DeleteButtonModule,\n    AutofocusDirective,\n    AllowClickDirective,\n  ]\n})\nexport class SharedModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@env/environment';\n\nimport { Response } from '@app/models/response';\nimport { Comment } from '@app/models/comment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  createTaskComment(taskId: string, comment: Comment): Observable<Response<Comment> | HttpErrorResponse> {\n    return this.http.post<Response<Comment> | HttpErrorResponse>(`${environment.apiUrl}/comments/${taskId}`, { ...comment });\n  }\n\n  deleteTaskComment(taskId: string, commentId: string): Observable<Response<any> | HttpErrorResponse> {\n    return this.http.request<Response<any> | HttpErrorResponse>\n    ('delete', `${environment.apiUrl}/comments/${commentId}`, {body: {taskId}});\n  }\n}\n","import { Action, createReducer, on } from '@ngrx/store';\nimport update from 'immutability-helper';\n\nimport * as BoardsActionTypes from '@root-store/boards/actions/boards.actions';\nimport { initialState, BoardsState } from '@root-store/boards/state';\n\nconst boardsReducer = createReducer(\n  initialState,\n\n  on(BoardsActionTypes.loadBoards, (state) =>\n    update(state, {\n      boards: { $set: null },\n      isFetching: { $set: true },\n      errorMessage: { $set: null }\n    })\n  ),\n\n  on(BoardsActionTypes.loadBoardsSuccess, (state, { payload }) =>\n    update(state, {\n      boards: { $set: payload },\n      isFetching: { $set: false },\n      errorMessage: { $set: null }\n    })\n  ),\n\n  on(BoardsActionTypes.loadBoardsFailure, (state, { payload: { error } }) =>\n    update(state, {\n      isFetching: { $set: false },\n      errorMessage: { $set: error.message }\n    })\n  ),\n\n  on(BoardsActionTypes.openBoardCreator, (state) =>\n    update(state, {\n      isOpenBoardCreator: { $set: true }\n    })\n  ),\n\n  on(BoardsActionTypes.closeBoardCreator, (state) =>\n    update(state, {\n      isOpenBoardCreator: { $set: false }\n    })\n  ),\n\n  on(BoardsActionTypes.createBoard, (state) =>\n    update(state, {\n      isFetching: { $set: true }\n    })\n  ),\n\n  on(BoardsActionTypes.createBoardSuccess, (state, data) =>\n    update(state, {\n      boards: boards => update(boards, {\n        admin: { $push: [data.payload]}\n      }),\n      isFetching: { $set: false }\n    })\n  ),\n\n  on(BoardsActionTypes.createBoardFailure, (state, { payload: { error } }) =>\n    update(state, {\n      isFetching: { $set: false },\n      errorMessage: { $set: error.message },\n    })\n  ),\n);\n\nexport function reducer(state: BoardsState | undefined, action: Action) {\n  return boardsReducer(state, action);\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {MatIconModule} from '@angular/material/icon';\n\nimport { DeleteButtonComponent } from './delete-button.component';\n\n@NgModule({\n  declarations: [DeleteButtonComponent],\n  imports: [\n    CommonModule,\n    MatIconModule\n  ],\n  exports: [DeleteButtonComponent]\n})\nexport class DeleteButtonModule { }\n","import { Action, createReducer, on } from '@ngrx/store';\nimport { moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport update from 'immutability-helper';\n\nimport { BoardState, initialState } from '@root-store/board/state';\nimport * as BoardActions from '@root-store/board/actions/board.actions';\nimport { Board } from '@app/models/board';\nimport { Column } from '@app/models/column';\nimport { Task } from '@app/models/task';\n\nconst boardReducer = createReducer(\n  initialState,\n\n  on(\n    BoardActions.loadBoard,\n    BoardActions.updateBoardTitle,\n    BoardActions.createColumn,\n    BoardActions.deleteColumn,\n    BoardActions.deleteBoard,\n    BoardActions.updateColumnTitle,\n    BoardActions.createTask,\n    BoardActions.deleteTask,\n    BoardActions.updateTaskTitle,\n    BoardActions.updateTaskMarks,\n\n    (state) =>\n      update(state, {\n        errorMessage: { $set: null },\n        isFetching: { $set: true },\n      })\n  ),\n\n  on(\n    BoardActions.createTaskComment,\n    BoardActions.deleteTaskComment,\n    BoardActions.changeTaskStatus,\n\n    (state) =>\n      update(state, {\n        errorMessage: { $set: null },\n        isFetching: { $set: true },\n      })\n  ),\n\n  on(BoardActions.loadBoardSuccess, (state, { payload }) =>\n    update(state, {\n      board: { $set: payload },\n      errorMessage: { $set: null },\n      isFetching: { $set: false }\n    })\n  ),\n\n  on(\n    BoardActions.loadBoardFailure,\n    BoardActions.updateBoardTitleFailure,\n    BoardActions.createColumnFailure,\n    BoardActions.deleteColumnFailure,\n    BoardActions.deleteBoardFailure,\n    BoardActions.updateColumnTitleFailure,\n    BoardActions.createTaskFailure,\n    BoardActions.deleteTaskFailure,\n    BoardActions.updateTaskTitleFailure,\n    BoardActions.updateTaskMarksFailure,\n\n    (state, { payload: { error } }) =>\n      update(state, {\n        errorMessage: { $set: error.message },\n        isFetching: { $set: false }\n      })\n  ),\n\n  on(\n    BoardActions.createTaskCommentFailure,\n    BoardActions.deleteTaskCommentFailure,\n    BoardActions.changeTaskStatusFailure,\n\n    (state, { payload: { error } }) =>\n      update(state, {\n        errorMessage: { $set: error.message },\n        isFetching: { $set: false }\n      })\n  ),\n\n  on(BoardActions.updateBoardTitleSuccess, (state, { payload }) =>\n    update(state, {\n      board: (board: Board) => update(board, {\n        title: { $set: payload }\n      }),\n      isFetching: { $set: false },\n      errorMessage: { $set: null },\n    })\n  ),\n\n\n  on(BoardActions.updateBoardState, (state, { payload }) =>\n    update(state, {\n      board: { $set: payload },\n      errorMessage: { $set: null },\n      isFetching: { $set: false }\n    })\n  ),\n\n  on(BoardActions.deleteBoardSuccess, (state) =>\n    update(state, {\n      errorMessage: { $set: null },\n      isFetching: { $set: false }\n    })\n  ),\n\n  on(BoardActions.deleteColumnSuccess, (state, { payload }) =>\n    update(state, {\n      board: (board: Board) => update(board, {\n        columns: columns => columns.reduce((previousValue, currentValue) => {\n          if (currentValue._id !== payload) {\n            previousValue.push(currentValue)\n          }\n\n          return previousValue;\n        }, [])\n      }),\n      errorMessage: { $set: null },\n      isFetching: { $set: false }\n    })\n  ),\n\n  on(BoardActions.updateColumnTitleSuccess, (state, { payload }) =>\n    update(state, {\n      board: (board: Board) => update(board, {\n        columns: columns => columns.map(column => {\n          if (column._id === payload.columnId) {\n            return { ...column, title: payload.title }\n          }\n\n          return column;\n        })\n      }),\n      errorMessage: { $set: null },\n      isFetching: { $set: false }\n    })\n  ),\n\n  on(BoardActions.updateTaskMarks, (state, { payload }) => {\n    const { columnId, taskId, mark } = payload;\n\n    return update(state, {\n      board: (board: Board) => update(board, {\n        columns: (columns: Column[]) => columns.map(column => {\n          if (columnId === column._id) {\n            return update(column, {\n              tasks: (tasks: Task[]) => tasks.map(task => {\n                if (taskId === task._id) {\n                  return update(task, {\n                    marks: (marks: string[]) => {\n                      const isCheckedMark = marks.some((checkMark) => checkMark === mark);\n\n                      if (isCheckedMark) {\n                        return marks.filter((checkMark) => checkMark !== mark);\n                      }\n\n                      return [...marks, mark];\n                    }\n                  })\n                }\n                return task\n              })\n            })\n          }\n          return column;\n        })\n      }),\n      errorMessage: { $set: null },\n      isFetching: { $set: false }\n    });\n  }),\n\n  on(BoardActions.dragAndDrop, (state, {payload}) =>\n    update(state, {\n      board: (board: Board) => update(board, {\n        columns: (columns: Column[]) => {\n          const columnSource = columns.find((column => column._id === payload.source.droppableId));\n          const columnDestination = columns.find((column => column._id === payload.destination.droppableId));\n          const tasksSource = [...columnSource.tasks];\n          const tasksDestination = [...columnDestination.tasks];\n\n          if (payload.source.droppableId === payload.destination.droppableId) {\n            moveItemInArray<Task>(tasksDestination, payload.source.index, payload.destination.index);\n          } else {\n            transferArrayItem<Task>(tasksSource, tasksDestination, payload.source.index, payload.destination.index);\n          }\n\n          return columns.map((column) => {\n            if (column._id === payload.destination.droppableId) {\n              return update(column, {\n                tasks: { $set: tasksDestination }\n              })\n            }\n\n            if (column._id === payload.source.droppableId) {\n              return update(column, {\n                tasks: { $set: tasksSource }\n              })\n            }\n\n            return column;\n          });\n        }\n      }),\n      errorMessage: { $set: null },\n      isFetching: { $set: true }\n    })\n  )\n);\n\nexport function reducer(state: BoardState | undefined, action: Action) {\n  return boardReducer(state, action);\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { AuthEffects } from './effects/auth.effects';\nimport { reducer as authReducer } from '@root-store/auth/reducers/auth.reducer';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    StoreModule.forFeature('auth', authReducer),\n    EffectsModule.forFeature([AuthEffects])\n  ]\n})\nexport class AuthModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '@root-store/state';\n\nimport * as AuthActions from '@root-store/auth/actions/auth.actions';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n    this.store.dispatch(AuthActions.chechAuthByToken());\n  }\n}\n","<!--<div>123</div>-->\n\n<app-header></app-header>\n\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule, FaIconLibrary } from '@fortawesome/angular-fontawesome';\n\nimport { faSearch, faPlus, faBell, faInfo, faCoffee, faClipboard, faHome } from '@fortawesome/free-solid-svg-icons';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    FontAwesomeModule\n  ],\n  exports: [FontAwesomeModule]\n})\nexport class FontawesomeModule {\n  constructor(private library: FaIconLibrary) {\n    library.addIcons(faClipboard, faSearch, faPlus, faBell, faInfo, faCoffee, faHome);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport { AuthInterceptor } from '@app/core/interceptors/auth.interceptor';\n\nimport { AppComponent } from './app.component';\n\nimport { RootStoreModule } from '@app/root-store/root-store.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { HeaderModule } from '@app/modules/header/header.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RootStoreModule,\n    SharedModule,\n    HeaderModule,\n\n    AppRoutingModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { RouterReducerState } from '@ngrx/router-store';\n\nimport * as auth from '@root-store/auth/state';\nimport * as boardsState from '@root-store/boards/state';\nimport * as boardState  from '@root-store/board/state';\n\nexport interface AppState {\n  readonly router?: RouterReducerState;\n  readonly auth: auth.Auth;\n  readonly boards: boardsState.BoardsState;\n  readonly board: boardState.BoardState;\n}\n\nexport const initialAppState: AppState = {\n  auth: auth.initialAuthState,\n  boards: boardsState.initialState,\n  board: boardState.initialState,\n};\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { map, switchMap, catchError } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { Actions, ofType, Effect } from '@ngrx/effects';\n\nimport { AppState } from '@root-store/state';\nimport { CommentService } from '@app/core/services/comment.service';\nimport { CustomActionType } from '@app/models/action';\nimport { Comment } from '@app/models/comment';\nimport * as BoardActions from '@root-store/board/actions/board.actions';\n\n@Injectable()\nexport class CommentEffects {\n\n  constructor(\n    private actions$: Actions,\n    private store: Store<AppState>,\n    private commentService: CommentService\n  ) {\n  }\n\n  @Effect()\n  createTaskComment$ = this.actions$.pipe(\n    ofType(BoardActions.createTaskComment),\n    switchMap(({payload}: CustomActionType<{comment: Comment, taskId: string, boardId: string}>) => {\n      const { taskId, comment, boardId } = payload;\n\n      return this.commentService.createTaskComment(taskId, comment)\n        .pipe(\n          map(() => {\n            return BoardActions.loadBoard({ payload: boardId });\n          }),\n          catchError((error: HttpErrorResponse) => {\n            console.error(error);\n            return of(BoardActions.createTaskCommentFailure({ payload: error }));\n          })\n        );\n    })\n  );\n\n  @Effect()\n  deleteTaskComment$ = this.actions$.pipe(\n    ofType(BoardActions.deleteTaskComment),\n    switchMap(({payload}: CustomActionType<{commentId: string, taskId: string, boardId: string}>) => {\n      const { taskId, commentId, boardId } = payload;\n\n      return this.commentService.deleteTaskComment(taskId, commentId)\n        .pipe(\n          map(() => {\n            return BoardActions.loadBoard({ payload: boardId });\n          }),\n          catchError((error: HttpErrorResponse) => {\n            console.error(error);\n            return of(BoardActions.deleteTaskCommentFailure({ payload: error }));\n          })\n        );\n    })\n  );\n}\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Actions, ofType, Effect } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { AppState } from '@root-store/state';\nimport { ColumnService } from '@app/core/services/column.service';\nimport { CustomActionType } from '@app/models/action';\nimport * as BoardActions from '@root-store/board/actions/board.actions';\n\n@Injectable()\nexport class ColumnEffects {\n\n  constructor(\n    private actions$: Actions,\n    private store: Store<AppState>,\n    private columnService: ColumnService\n  ) { }\n\n  @Effect()\n  createColumn$ = this.actions$.pipe(\n    ofType(BoardActions.createColumn),\n    switchMap(({ payload }: CustomActionType<{boardId: string, columnTitle: string, templateColumnId: string}>) => {\n      const { boardId, columnTitle } = payload;\n\n      return this.columnService.createColumn(boardId, columnTitle)\n        .pipe(\n          map(() => {\n            return BoardActions.loadBoard({ payload: boardId });\n          }),\n          catchError((error: HttpErrorResponse) => {\n            console.error(error);\n            return of(BoardActions.createColumnFailure({ payload: error }));\n          })\n        )\n    })\n  );\n\n  @Effect()\n  deleteColumn$ = this.actions$.pipe(\n    ofType(BoardActions.deleteColumn),\n    switchMap(({ payload }: CustomActionType<string>) => {\n      return this.columnService.deleteColumn(payload).pipe(\n        map(() => {\n          return BoardActions.deleteColumnSuccess({ payload });\n        }),\n        catchError((error: HttpErrorResponse) => {\n          console.error(error);\n          return of(BoardActions.deleteColumnFailure({ payload: error }));\n        })\n      );\n    })\n  );\n\n  @Effect()\n  updateColumnTitle$ = this.actions$.pipe(\n    ofType(BoardActions.updateColumnTitle),\n    switchMap(({ payload }: CustomActionType<{ title: string, columnId: string }>) => {\n      const { title, columnId } = payload;\n      return this.columnService.updateColumnTitle(columnId, title).pipe(\n        map(() => {\n          return BoardActions.updateColumnTitleSuccess({ payload: { title, columnId } });\n        }),\n        catchError((error: HttpErrorResponse) => {\n          console.error(error);\n          return of(BoardActions.updateColumnTitleFailure({ payload: error }));\n        })\n      );\n    })\n  );\n}\n","import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, AbstractControl, ValidationErrors, ValidatorFn, } from '@angular/forms';\n\nexport function emailValidation(): ValidatorFn {\n  return (control: AbstractControl) => {\n    const reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n\n    const isValidEmail = reg.test(control.value);\n\n    return isValidEmail ? null : { emailInvalid: true };\n  };\n}\n\nexport function isEmptyValidation(): ValidatorFn {\n  return (control: AbstractControl) => {\n    let value;\n    if (control.value && control.value.trim) {\n      value = control.value.trim();\n    }\n    return value ? null : { required: true };\n  };\n}\n\n\n\n@Directive({\n  selector: '[appEmailValidate]',\n  providers: [{provide: NG_VALIDATORS, useExisting: EmailValidateDirective, multi: true}]\n})\nexport class EmailValidateDirective {\n  constructor() { }\n\n  validate(control: AbstractControl): ValidationErrors | null {\n    return emailValidation()(control);\n  }\n}\n","import { createAction, props } from '@ngrx/store';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { AuthDataRequest, AuthResponse, SignUpDataRequest } from '@app/models/auth';\nimport { Payload } from '@app/models/payload';\n\nexport const authActionTypes = {\n  Auth: '[Auth] Login',\n  AuthSuccess: '[Auth] Login Success',\n  AuthFailure: '[Auth] Login Failure',\n\n  SignUp: '[SignUp] Login',\n  SignUpSuccess: '[SignUp] Login Success',\n  SignUpFailure: '[SignUp] Login Failure',\n\n  ChechAuthByToken: '[Auth] ChechAuthByToken',\n  ChechAuthByTokenSuccess: '[Auth] ChechAuthByToken Success',\n  ChechAuthByTokenFailure: '[Auth] ChechAuthByToken Failure',\n\n  LogOut: '[Auth] LogOut',\n};\n\nexport const auth = createAction(\n  authActionTypes.Auth,\n  props<Payload<AuthDataRequest>>()\n);\n\nexport const authSuccess = createAction(\n  authActionTypes.AuthSuccess,\n  props<Payload<AuthResponse>>()\n);\n\nexport const authFailure = createAction(\n  authActionTypes.AuthFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const signUp = createAction(\n  authActionTypes.SignUp,\n  props<Payload<SignUpDataRequest>>()\n);\n\nexport const signUpSuccess = createAction(\n  authActionTypes.SignUpSuccess,\n  props<Payload<AuthResponse>>()\n);\n\nexport const signUpFailure = createAction(\n  authActionTypes.SignUpFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const chechAuthByToken = createAction(\n  authActionTypes.ChechAuthByToken\n);\n\nexport const chechAuthByTokenSuccess = createAction(\n  authActionTypes.ChechAuthByTokenSuccess,\n  props<Payload<AuthResponse>>()\n);\n\nexport const chechAuthByTokenFailure = createAction(\n  authActionTypes.ChechAuthByTokenFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const logOut = createAction(\n  authActionTypes.LogOut,\n);\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(\n    private router: Router\n  ) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    let sessionToken = localStorage.getItem('sessionToken');\n\n    if (!sessionToken) {\n      sessionToken = '';\n      this.router.navigate(['/']);\n    }\n\n    const authReq = request.clone({\n      headers: request.headers.set('authorization', `${sessionToken}`)\n    });\n\n\n    return next.handle(authReq).pipe(\n      tap(\n        () => {},\n        (err: HttpErrorResponse) => {\n          console.error(err);\n          if (err.status === 401) {\n            this.router.navigate(['/sign-in']);\n          }\n\n          if (err.status === 404 && err.statusText === 'Not Found') {\n            this.router.navigate(['/']);\n          }\n        })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatExpansionModule } from '@angular/material/expansion';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatMenuModule,\n    MatProgressSpinnerModule,\n    DragDropModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    MatExpansionModule,\n  ],\n  exports: [\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatMenuModule,\n    MatProgressSpinnerModule,\n    DragDropModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    MatExpansionModule,\n  ]\n})\nexport class MaterialModule { }\n","import { Action, createReducer, on } from '@ngrx/store';\nimport update from 'immutability-helper';\n\nimport { initialAuthState, Auth } from '@root-store/auth/state';\n\nimport * as AuthActions from '@root-store/auth/actions/auth.actions';\n\nconst authReducer = createReducer(\n  initialAuthState,\n\n  on(\n    AuthActions.auth,\n    AuthActions.signUp,\n    AuthActions.chechAuthByToken,\n\n    (state) =>\n      update(state, {\n        isAuthenticated: { $set: false },\n        isFetching: { $set: true },\n        errorMessage: { $set: null },\n      })\n  ),\n\n  on(\n    AuthActions.authSuccess,\n    AuthActions.signUpSuccess,\n    AuthActions.chechAuthByTokenSuccess,\n\n    (state, { payload }) =>\n      update(state, {\n        data: { $set: payload },\n        isAuthenticated: { $set: true },\n        isFetching: { $set: false },\n        errorMessage: { $set: null }\n      })\n  ),\n\n  on(\n    AuthActions.authFailure,\n    AuthActions.signUpFailure,\n    AuthActions.chechAuthByTokenFailure,\n\n    (state, { payload: { error } }) =>\n      update(state, {\n        isAuthenticated: { $set: false },\n        isFetching: { $set: false },\n        errorMessage: { $set: error.message }\n      })\n  ),\n\n  on(AuthActions.logOut, (() => initialAuthState))\n);\n\nexport function reducer(state: Auth, action: Action) {\n  return authReducer(state, action);\n}\n","import { createAction, props } from '@ngrx/store';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { Boards } from '@app/models/boards';\nimport { Board } from '@app/models/board';\nimport { Payload } from '@app/models/payload';\n\nexport const boardsActionTypes = {\n  LoadBoards: '[Boards] Load Boards',\n  LoadBoardsSuccess: '[Boards] Load Boards Success',\n  LoadBoardsFailure: '[Boards] Load Boards Failure',\n\n  OpenBoardCreator: '[Boards] Open Board Creator',\n  CloseBoardCreator: '[Boards] Close Board Creator',\n  CreateBoard: '[Boards] Create Board ',\n  CreateBoardSuccess: '[Boards] Create Board Success',\n  CreateBoardFailure: '[Boards] Create Board Failure',\n\n  CheckBoards: '[Boards] Check Boards',\n  CheckBoardsSuccess: '[Boards] Check Boards Success',\n};\n\nexport const loadBoards = createAction(\n  boardsActionTypes.LoadBoards\n);\n\nexport const loadBoardsSuccess = createAction(\n  boardsActionTypes.LoadBoardsSuccess,\n  props<Payload<Boards>>()\n);\n\nexport const loadBoardsFailure = createAction(\n  boardsActionTypes.LoadBoardsFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const openBoardCreator = createAction(\n  boardsActionTypes.OpenBoardCreator\n);\n\nexport const closeBoardCreator = createAction(\n  boardsActionTypes.CloseBoardCreator\n);\n\nexport const createBoard = createAction(\n  boardsActionTypes.CreateBoard,\n  props<Payload<string>>()\n);\n\nexport const createBoardSuccess = createAction(\n  boardsActionTypes.CreateBoardSuccess,\n  props<Payload<Board>>()\n);\n\nexport const createBoardFailure = createAction(\n  boardsActionTypes.CreateBoardFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const checkBoards = createAction(\n  boardsActionTypes.CheckBoards\n);\n\nexport const checkBoardsSuccess = createAction(\n  boardsActionTypes.CheckBoardsSuccess\n);\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ActionReducer, MetaReducer, StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { routerReducer, RouterState, StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nimport { environment } from '@env/environment';\n\nimport { AppState, initialAppState } from '@root-store/state';\nimport { logOut } from '@root-store/auth/actions/auth.actions';\nimport { AuthModule } from '@root-store/auth/auth.module';\nimport { BoardsModule } from '@root-store/boards/boards.module';\nimport { BoardModule } from '@root-store/board/board.module';\nimport { PermissionsModule } from '@root-store/permissions/permissions.module';\n\nexport function logOutClear(reducer: ActionReducer<AppState>): ActionReducer<AppState> {\n  return (state, action) => {\n    if (logOut().type === action.type) {\n      return reducer({ ...initialAppState, router: state.router}, action)\n    }\n\n    return reducer(state, action);\n  };\n}\n\nexport const metaReducers: MetaReducer<any>[] = [logOutClear];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    AuthModule,\n    BoardsModule,\n    BoardModule,\n    PermissionsModule,\n\n    StoreModule.forRoot({router: routerReducer}, {\n      runtimeChecks: {\n        strictStateImmutability: true,\n      },\n      metaReducers\n    }),\n    EffectsModule.forRoot([]),\n    StoreRouterConnectingModule.forRoot({ stateKey: 'router', routerState: RouterState.Minimal }),\n    !environment.production ? StoreDevtoolsModule.instrument() : []\n  ]\n})\nexport class RootStoreModule { }\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { createAction, props } from '@ngrx/store';\n\nimport { Board, DNDData } from '@app/models/board';\nimport { Payload } from '@app/models/payload';\nimport { Comment } from '@app/models/comment';\n\nexport const boardActionTypes = {\n  LoadBoard: '[Board] Load Board',\n  LoadBoardSuccess: '[Board] Load Board Success',\n  LoadBoardFailure: '[Board] Load Board Failure',\n\n  UpdateBoardState: '[Board] Update Board State',\n\n  UpdateBoardTitle: '[Board] Update Board Title',\n  UpdateBoardTitleSuccess: '[Board] Update Board Title Success',\n  UpdateBoardTitleFailure: '[Board] Update Board Title Failure',\n\n  DeleteBoard: '[Board] Delete Board',\n  DeleteBoardSuccess: '[Board] Delete Board Success',\n  DeleteBoardFailure: '[Board] Delete Board Failure',\n\n  DragAndDrop: '[Board] DragAndDrop',\n\n  CreateColumn: '[Board] Create Column',\n  CreateColumnFailure: '[Board] Create Column Failure',\n\n  DeleteColumn: '[Board] Delete Column',\n  DeleteColumnSuccess: '[Board] Delete Column Success',\n  DeleteColumnFailure: '[Board] Delete Column Failure',\n\n  UpdateColumnTitle: '[Board] Update Column Title',\n  UpdateColumnTitleSuccess: '[Board] Update Column Title Success',\n  UpdateColumnTitleFailure: '[Board] Update Column Title Failure',\n\n  CreateTask: '[Board] Create Task',\n  CreateTaskFailure: '[Board] Create Task Failure',\n\n  DeleteTask: '[Board] Delete Task',\n  DeleteTaskFailure: '[Board] Delete Task Failure',\n\n  UpdateTaskTitle: '[Board] Update Task Title',\n  UpdateTaskTitleFailure: '[Board] Update Task Title Failure',\n\n  UpdateTaskMarks: '[Board] Update Task Marks',\n  UpdateTaskMarksFailure: '[Board] Update Task Marks Failure',\n  AddUserOnTask: '[Board] Add User On Task',\n  ChangeTaskStatus: '[Board] Change Task Status',\n  ChangeTaskStatusFailure: '[Board] Change Task Status Failure',\n\n  CreateTaskComment: '[Board] Create Task Comment',\n  CreateTaskCommentFailure: '[Board] Create Task Comment Failure',\n  DeleteTaskComment: '[Board] Delete Task Comment',\n  DeleteTaskCommentFailure: '[Board] Delete Task Comment Failure',\n\n  AddUserOnBoard: '[Board] Add User On Board',\n};\n\nexport const loadBoard = createAction(\n  boardActionTypes.LoadBoard,\n  props<Payload<string>>()\n);\n\nexport const loadBoardSuccess = createAction(\n  boardActionTypes.LoadBoardSuccess,\n  props<Payload<Board>>()\n);\n\nexport const loadBoardFailure = createAction(\n  boardActionTypes.LoadBoardFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const updateBoardState = createAction(\n  boardActionTypes.UpdateBoardState,\n  props<Payload<Board>>()\n);\n\nexport const updateBoardTitle = createAction(\n  boardActionTypes.UpdateBoardTitle,\n  props<Payload<{ title: string, boardId: string }>>()\n);\n\nexport const updateBoardTitleSuccess = createAction(\n  boardActionTypes.UpdateBoardTitleSuccess,\n  props<Payload<string>>()\n);\n\nexport const updateBoardTitleFailure = createAction(\n  boardActionTypes.UpdateBoardTitleFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const deleteBoard = createAction(\n  boardActionTypes.DeleteBoard,\n  props<Payload<string>>()\n);\n\nexport const deleteBoardSuccess = createAction(\n  boardActionTypes.DeleteBoardSuccess\n);\n\nexport const deleteBoardFailure = createAction(\n  boardActionTypes.DeleteBoardFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const dragAndDrop = createAction(\n  boardActionTypes.DragAndDrop,\n  props<Payload<DNDData>>()\n);\n\nexport const createColumn = createAction(\n  boardActionTypes.CreateColumn,\n  props<Payload<{boardId: string, columnTitle: string, templateColumnId: string}>>()\n);\n\nexport const createColumnFailure = createAction(\n  boardActionTypes.CreateColumnFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const deleteColumn = createAction(\n  boardActionTypes.DeleteColumn,\n  props<Payload<string>>()\n);\n\nexport const deleteColumnSuccess = createAction(\n  boardActionTypes.DeleteColumnSuccess,\n  props<Payload<string>>()\n);\n\nexport const deleteColumnFailure = createAction(\n  boardActionTypes.DeleteColumnFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const updateColumnTitle = createAction(\n  boardActionTypes.UpdateColumnTitle,\n  props<Payload<{ title: string, columnId: string }>>()\n);\n\nexport const updateColumnTitleSuccess = createAction(\n  boardActionTypes.UpdateColumnTitleSuccess,\n  props<Payload<{ title: string, columnId: string }>>()\n);\n\nexport const updateColumnTitleFailure = createAction(\n  boardActionTypes.UpdateColumnTitleFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const createTask = createAction(\n  boardActionTypes.CreateTask,\n  props<Payload<{columnId: string, task: string, boardId: string}>>()\n);\n\nexport const createTaskFailure = createAction(\n  boardActionTypes.CreateTaskFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const deleteTask = createAction(\n  boardActionTypes.DeleteTask,\n  props<Payload<{taskId: string, boardId: string}>>()\n);\n\nexport const deleteTaskFailure = createAction(\n  boardActionTypes.DeleteTaskFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const updateTaskTitle = createAction(\n  boardActionTypes.UpdateTaskTitle,\n  props<Payload<{task: string, taskId: string, boardId: string}>>()\n);\n\nexport const updateTaskTitleFailure = createAction(\n  boardActionTypes.UpdateTaskTitleFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const updateTaskMarks = createAction(\n  boardActionTypes.UpdateTaskMarks,\n  props<Payload<{mark: string, taskId: string, columnId: string, boardId: string}>>()\n);\n\nexport const updateTaskMarksFailure = createAction(\n  boardActionTypes.UpdateTaskMarksFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const changeTaskStatus = createAction(\n  boardActionTypes.ChangeTaskStatus,\n  props<Payload<{taskId: string, status: string, boardId: string}>>()\n);\n\nexport const changeTaskStatusFailure = createAction(\n  boardActionTypes.ChangeTaskStatusFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const addUserOnTask = createAction(\n  boardActionTypes.AddUserOnTask,\n  props<Payload<{userId: string, taskId: string, boardId: string}>>()\n);\n\nexport const createTaskComment = createAction(\n  boardActionTypes.CreateTaskComment,\n  props<Payload<{comment: Comment, taskId: string, boardId: string}>>()\n);\n\nexport const createTaskCommentFailure = createAction(\n  boardActionTypes.CreateTaskCommentFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const deleteTaskComment = createAction(\n  boardActionTypes.DeleteTaskComment,\n  props<Payload<{commentId: string, taskId: string, boardId: string}>>()\n);\n\nexport const deleteTaskCommentFailure = createAction(\n  boardActionTypes.DeleteTaskCommentFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const addUserOnBoard = createAction(\n  boardActionTypes.AddUserOnBoard,\n  props<Payload<{userId: string, role: string, boardId: string}>>()\n);\n\n\n","import { AuthResponse } from '@app/models/auth';\n\nexport interface Auth {\n  isAuthenticated: boolean;\n  errorMessage: any;\n  isFetching: boolean;\n  success?: boolean;\n  data: AuthResponse;\n}\n\nexport const initialAuthState: Auth = {\n  isAuthenticated: false,\n  errorMessage: null,\n  isFetching: false,\n  success: false,\n  data: null,\n};\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { of } from 'rxjs';\nimport { catchError, map, mergeMap, switchMap } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { Actions, ofType, Effect } from '@ngrx/effects';\n\nimport { AppState } from '@root-store/state';\nimport { AuthService } from '@app/core/services/auth.service';\nimport { BoardService } from '@app/core/services/board.service';\nimport { CustomActionType } from '@app/models/action';\nimport { Response } from '@app/models/response';\nimport { Board, DNDData } from '@app/models/board';\nimport * as BoardActions from '@root-store/board/actions/board.actions';\nimport * as BoardsActions from '@root-store/boards/actions/boards.actions';\nimport { TaskService } from '@app/core/services/task.service';\n\n@Injectable()\nexport class BoardEffects {\n\n  constructor(\n    private actions$: Actions,\n    private store: Store<AppState>,\n    private router: Router,\n    private as: AuthService,\n    private boardService: BoardService,\n    private taskService: TaskService,\n  ) {\n  }\n\n  @Effect()\n  loadBoard$ = this.actions$.pipe(\n    ofType(BoardActions.loadBoard),\n    switchMap(({ payload }: CustomActionType<string>) => {\n      return this.boardService.getBoard(payload).pipe(\n        map(({ data }: Response<Board>) => {\n          return BoardActions.loadBoardSuccess({ payload: data });\n        }),\n        catchError((error: HttpErrorResponse) => {\n          console.log(error);\n          return of(BoardActions.loadBoardFailure({payload: error}));\n        })\n      );\n    })\n  );\n\n  @Effect()\n  updateBoardTitle$ = this.actions$.pipe(\n    ofType(BoardActions.updateBoardTitle),\n    switchMap(({ payload }: CustomActionType<{ title: string, boardId: string }>) => {\n      const { title, boardId } = payload;\n\n      return this.boardService.updateBoardTitle(boardId, title).pipe(\n        mergeMap(() => [\n          BoardActions.updateBoardTitleSuccess({ payload: title }),\n          BoardsActions.loadBoards()\n        ]),\n        catchError((error: HttpErrorResponse) => {\n          console.log(error);\n          return of(BoardActions.loadBoardFailure({ payload: error }));\n        })\n      );\n    })\n  );\n\n  @Effect()\n  deleteBoard$ = this.actions$.pipe(\n    ofType(BoardActions.deleteBoard),\n    switchMap(({ payload }: CustomActionType<string>) => {\n      return this.boardService.deleteBoard(payload).pipe(\n        map(() => {\n          this.router.navigate(['/']);\n          return BoardsActions.loadBoards();\n        }),\n        catchError((error: HttpErrorResponse) => {\n          console.error(error);\n          return of(BoardActions.deleteBoardFailure({ payload: error }));\n        })\n      );\n    })\n  );\n\n  @Effect()\n  dnd$ = this.actions$.pipe(\n    ofType(BoardActions.dragAndDrop),\n    switchMap(({ payload }: CustomActionType<DNDData>) => {\n      return this.taskService.dnd(payload).pipe(\n        map(({data}: Response<Board>) => {\n          return BoardActions.updateBoardState({ payload: data });\n        }),\n        catchError((error: HttpErrorResponse) => {\n          console.log(error);\n          return of(BoardActions.loadBoard({payload: payload.boardId}));\n        })\n      );\n    })\n  );\n\n  @Effect()\n  addUserOnTask$ = this.actions$.pipe(\n    ofType(BoardActions.addUserOnTask),\n    switchMap(({ payload }: CustomActionType<{userId: string, taskId: string, boardId: string}>) => {\n      const {userId, taskId, boardId} = payload;\n\n      return this.taskService.addUserOnTask({ userId }, taskId)\n        .pipe(\n          map(() => {\n            return BoardActions.loadBoard({ payload: boardId });\n          }),\n          catchError((error: HttpErrorResponse) => {\n            console.log(error);\n            return of(BoardActions.loadBoardFailure({payload: error}));\n          })\n        );\n    })\n  );\n\n  @Effect()\n  addUserOnBoard$ = this.actions$.pipe(\n    ofType(BoardActions.addUserOnBoard),\n    switchMap(({ payload }: CustomActionType<{userId: string, role: string, boardId: string}>) => {\n      const {userId, role, boardId} = payload;\n\n      return this.boardService.addUserOnBoard({ userId, role }, boardId)\n        .pipe(\n          map(({data}: Response<Board>) => {\n            return BoardActions.updateBoardState({ payload: data });\n          }),\n          catchError((error: HttpErrorResponse) => {\n            console.log(error);\n            return of(BoardActions.loadBoardFailure({payload: error}));\n          })\n        );\n    })\n  );\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () => import('./pages/pages.module').then(m => m.PagesModule),\n  },\n];\n\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forRoot(routes, { enableTracing: false })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-delete-button',\n  templateUrl: './delete-button.component.html',\n  styleUrls: ['./delete-button.component.scss']\n})\nexport class DeleteButtonComponent implements OnInit {\n  @Input() classes: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"delete-button-wrap\">\n  <mat-icon\n    class=\"delete-button\"\n    [ngClass]=\"'delete-button--' + classes\"\n  >\n    close\n  </mat-icon>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@env/environment';\n\nimport { Response } from '@app/models/response';\nimport { Column } from '@app/models/column';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ColumnService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  createColumn(boardId: string, title: string): Observable<Response<Column> | HttpErrorResponse> {\n    return this.http.post<Response<Column> | HttpErrorResponse>(`${environment.apiUrl}/columns/${boardId}`, {title});\n  }\n\n  deleteColumn(columnId: string): Observable<Response<any> | HttpErrorResponse> {\n    return this.http.delete<Response<any> | HttpErrorResponse>(`${environment.apiUrl}/columns/${columnId}`);\n  }\n\n  updateColumnTitle(columnId: string, title: string): Observable<Response<Column> | HttpErrorResponse> {\n    return this.http.put<Response<Column> | HttpErrorResponse>(`${environment.apiUrl}/columns/${columnId}`, { title });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@env/environment';\n\nimport { Response } from '@app/models/response';\nimport {\n  AddingUser,\n  Board,\n  DNDData\n} from '@app/models/board';\nimport { Task } from '@app/models/task';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  createTask(columnId: string, task: string): Observable<Response<Task> | HttpErrorResponse> {\n    return this.http.post<Response<Task> | HttpErrorResponse>(`${environment.apiUrl}/tasks/${columnId}`, {task});\n  }\n\n  deleteTask(taskId: string): Observable<Response<any> | HttpErrorResponse> {\n    return this.http.delete<Response<any> | HttpErrorResponse>(`${environment.apiUrl}/tasks/${taskId}`);\n  }\n\n  updateTaskTitle(taskId: string, task: string): Observable<Response<Task> | HttpErrorResponse> {\n    return this.http.put<Response<Task> | HttpErrorResponse>(`${environment.apiUrl}/tasks/${taskId}`, { task });\n  }\n\n  updateTaskMarks(taskId: string, mark: string): Observable<Response<Task> | HttpErrorResponse> {\n    return this.http.patch<Response<Task> | HttpErrorResponse>(`${environment.apiUrl}/tasks/marks/${taskId}`, { mark });\n  }\n\n  changeTaskStatus(taskId: string, status: string): Observable<Response<Task> | HttpErrorResponse> {\n    return this.http.patch<Response<Task> | HttpErrorResponse>(`${environment.apiUrl}/tasks/status/${taskId}`, { status });\n  }\n\n  addUserOnTask(data: AddingUser, taskId: string): Observable<Response<Board> | HttpErrorResponse> {\n    return this.http.patch<Response<Board> | HttpErrorResponse>(`${environment.apiUrl}/tasks/${taskId}`, data);\n  }\n\n  dnd(data: DNDData) {\n    return this.http.patch(`${environment.apiUrl}/tasks`, { ...data });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoaderComponent } from './loader.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@NgModule({\n  declarations: [LoaderComponent],\n  imports: [\n    CommonModule,\n    MatProgressSpinnerModule\n  ],\n  exports: [LoaderComponent]\n})\nexport class LoaderModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}