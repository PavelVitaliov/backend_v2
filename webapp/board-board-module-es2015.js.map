{"version":3,"sources":["./src/app/root-store/board/selectors/task.selectors.ts","./src/app/pages/board/board-routing.module.ts","./src/app/root-store/board/selectors/board.selectors.ts","./src/app/pages/board/components/column/column.component.ts","./src/app/pages/board/components/column/column.component.html","./src/app/pages/board/board.component.ts","./src/app/pages/board/board.component.html","./src/app/components/subscibed-users/subscibed-users.component.ts","./src/app/components/subscibed-users/subscibed-users.component.html","./src/app/core/utils/permissions/permissions.ts","./src/app/root-store/permissions/selectors/permissions.selectors.ts","./src/app/pages/board/board.module.ts","./src/app/pages/board/components/column/services/column.service.ts","./src/app/pages/board/components/board-header/services/board-header.service.ts","./src/app/core/services/user.service.ts","./src/app/pages/board/components/board-header/board-header.component.ts","./src/app/pages/board/components/board-header/board-header.component.html","./src/app/components/task-editor-dialog/task-editor-dialog.component.ts","./src/app/components/task-editor-dialog/task-editor-dialog.component.html","./src/app/pages/board/components/add-board-dialog/add-board-dialog.component.ts","./src/app/pages/board/components/add-board-dialog/add-board-dialog.component.html","./src/app/pages/board/components/column/componens/task/task.component.ts","./src/app/pages/board/components/column/componens/task/task.component.html"],"names":[],"mappings":"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","file":"board-board-module-es2015.js","sourcesContent":["import { createSelector } from '@ngrx/store';\nimport { AppState } from '@root-store/state';\n\nimport { BoardState } from '@root-store/board/state';\nimport { Comment } from '@app/models/comment';\nimport { User } from '@app/models/user';\n\nconst selectBoards = (state: AppState) => state.board;\n\nexport const getTaskComments = (columnId: string, taskId: string) => {\n  return createSelector(\n    selectBoards,\n    ({ board }: BoardState): Comment[] => {\n      const { tasks } = board.columns.find((column) => {\n        if (column._id === columnId) {\n          return column\n        }\n      });\n\n      const { comments } = tasks.find((task) => {\n        if (task._id === taskId) {\n          return task;\n        }\n      });\n\n      return comments;\n    }\n  )\n};\n\nexport const getTaskLogs = (columnId: string, taskId: string) => {\n  return createSelector(\n    selectBoards,\n    ({ board }: BoardState): string[] => {\n      const { tasks } = board.columns.find((column) => {\n        if (column._id === columnId) {\n          return column\n        }\n      });\n\n      const { logs } = tasks.find((task) => {\n        if (task._id === taskId) {\n          return task;\n        }\n      });\n\n      return logs;\n    }\n  )\n};\n\nexport const getTaskUsers = (columnId: string, taskId: string) => {\n  return createSelector(\n    selectBoards,\n    ({ board }: BoardState): User[] => {\n      const { tasks } = board.columns.find((column) => {\n        if (column._id === columnId) {\n          return column\n        }\n      });\n\n      const { users } = tasks.find((task) => {\n        if (task._id === taskId) {\n          return task;\n        }\n      });\n\n      return users;\n    }\n  )\n};\n\n\nexport const getTaskField = (columnId: string, taskId: string, fieldName: string) => {\n  return createSelector(\n    selectBoards,\n    ({ board }: BoardState): any => {\n      const { tasks } = board.columns.find((column) => {\n        if (column._id === columnId) {\n          return column\n        }\n      });\n\n      const task = tasks.find((task) => {\n        if (task._id === taskId) {\n          return task;\n        }\n      });\n\n      return task[fieldName];\n    }\n  )\n};\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BoardComponent } from '@app/pages/board/board.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BoardComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BoardRoutingModule {\n}\n","import { createSelector } from '@ngrx/store';\nimport { AppState } from '@root-store/state';\n\nimport { Board } from '@app/models/board';\nimport { BoardState } from '@root-store/board/state';\nimport { Column } from '@app/models/column';\nimport { Comment } from '@app/models/comment';\n\nconst selectBoards = (state: AppState) => state.board;\n\nexport const getBoardState = createSelector(\n  selectBoards,\n  (boardState: BoardState): BoardState => {\n    return boardState;\n  }\n);\n\nexport const getBoardColumns = createSelector(\n  selectBoards,\n  ({ board }: BoardState): Column[] => {\n    return board?.columns || [];\n  }\n);\n\nexport const getBoard = createSelector(\n  selectBoards,\n  ({ board }: BoardState): Board => {\n    return board;\n  }\n);\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { FormBuilder, FormControl } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { CdkDragDrop } from '@angular/cdk/drag-drop';\n\nimport { ColumnService } from '@app/pages/board/components/column/services/column.service';\n\nimport * as BoardActions from '@root-store/board/actions/board.actions';\n\nimport { AppState } from '@root-store/state';\nimport { Column } from '@app/models/column';\nimport { Task } from '@app/models/task';\n\n@Component({\n  selector: 'app-column',\n  templateUrl: './column.component.html',\n  styleUrls: ['./column.component.scss'],\n  providers:  [ ColumnService ]\n})\nexport class ColumnComponent implements OnInit {\n  @Input()\n  set columnData(column: Column) {\n    this._column = {...column, tasks: [...column.tasks]};\n  }\n\n  @Input() boardId;\n\n  isOpenEditior$: Observable<boolean>;\n  isOpenCreator$: Observable<boolean>;\n\n  columnTitleControl: FormControl = this.fb.control('');\n  newTaskTitleControl: FormControl = this.fb.control('');\n\n  private _column;\n\n  get column(): Column {\n    return this._column;\n  }\n\n  constructor(\n    private store: Store<AppState>,\n    private fb: FormBuilder,\n    private columnService: ColumnService\n  ) { }\n\n  ngOnInit(): void {\n    this.isOpenEditior$ = this.columnService.getIsOpenEditor();\n    this.isOpenCreator$ = this.columnService.getIsOpenCreator();\n  }\n\n  public drop(event: CdkDragDrop<Task[]>): void {\n    const taskId = event.item.element.nativeElement.parentElement.getAttribute('aria-task-id');\n    const sourceCoumnId = event.previousContainer.element.nativeElement.getAttribute('column-id');\n    const destinationCoumnId = event.container.element.nativeElement.getAttribute('column-id');\n\n    if (event.previousIndex === event.currentIndex && sourceCoumnId === destinationCoumnId) {\n      return;\n    }\n\n    const payload = {\n      source: {\n        droppableId: sourceCoumnId,\n        index: event.previousIndex\n      },\n      destination: {\n        droppableId: destinationCoumnId,\n        index: event.currentIndex\n      },\n      boardId: this.boardId,\n      taskId\n    };\n\n    this.store.dispatch(BoardActions.dragAndDrop({payload}));\n  }\n\n  public openEditor(): void {\n    this.columnService.setIsOpenEditor(true);\n    this.columnTitleControl.patchValue(this.column.title);\n  }\n\n  public onEditTitle(): void {\n    if (this.columnTitleControl.value === this.column.title) {\n      this.closeEditor();\n      return;\n    }\n\n    if (!(this.columnTitleControl.value.trim && this.columnTitleControl.value.trim())) {\n      this.columnTitleControl.patchValue(this.column.title);\n      this.closeEditor();\n      return;\n    }\n\n    const payload = {\n      title: this.columnTitleControl.value,\n      columnId: this.column._id\n    };\n\n    this.store.dispatch(BoardActions.updateColumnTitle({ payload }));\n\n    this.closeEditor();\n  }\n\n  public keyEsc(): void {\n    this.columnTitleControl.patchValue(this.column.title);\n    this.closeEditor();\n  }\n\n  public openCreator(): void {\n    this.columnService.setIsOpenCreator(true);\n  }\n\n  public cancelCreate(): void {\n    this.newTaskTitleControl.patchValue('');\n    this.closeCreator();\n  }\n\n  public sendCreateTask(): void {\n    if (!this.newTaskTitleControl.value?.trim()) {\n      this.newTaskTitleControl.patchValue('');\n      this.closeCreator();\n      return;\n    }\n\n    const payload = {\n      columnId: this.column._id,\n      task: this.newTaskTitleControl.value,\n      boardId: this.boardId\n    };\n\n    this.newTaskTitleControl.patchValue('');\n    this.closeCreator();\n\n    this.store.dispatch(BoardActions.createTask({ payload }));\n  }\n\n  public deleteColumn(): void {\n    this.store.dispatch(BoardActions.deleteColumn({ payload: this.column._id }));\n  }\n\n  private closeEditor(): void {\n    this.columnService.setIsOpenEditor(false);\n  }\n\n  private closeCreator(): void {\n    this.columnService.setIsOpenCreator(false);\n  }\n\n  public trackById(index: number, element): number {\n    return element._id;\n  }\n}\n","<div class=\"column-wrap\">\n  <div class=\"column\">\n    <div class=\"column-header\">\n      <div class=\"column-header__title-wrap\">\n        <h5 class=\"column-header__title\" *ngIf=\"!(isOpenEditior$ | async)\" (click)=\"openEditor()\">{{column?.title}}</h5>\n\n        <app-editor\n          *ngIf=\"(isOpenEditior$ | async)\"\n          [formContromName]=\"columnTitleControl\"\n          (blurAction)=\"onEditTitle()\"\n          (enterAction)=\"onEditTitle()\"\n          (escAction)=\"keyEsc()\"\n        ></app-editor>\n\n        <app-delete-button (click)=\"deleteColumn()\" [classes]=\"'gray'\"></app-delete-button>\n\n      </div>\n    </div>\n\n    <div class=\"column-body\">\n      <div\n        cdkDropList\n        [cdkDropListData]=\"column.tasks\"\n        (cdkDropListDropped)=\"drop($event)\"\n        [attr.column-id]=\"column._id\"\n        class=\"tasks-wrap\"\n      >\n        <ng-container *ngFor=\"let task of column?.tasks; trackBy: trackById;\">\n          <app-task [attr.aria-task-id]=\"task._id\" [task]=\"task\" [columnId]=\"column._id\" [boardId]=\"boardId\"></app-task>\n        </ng-container>\n      </div>\n\n    </div>\n    <div class=\"column-footer\">\n      <div (click)=\"openCreator()\" *ngIf=\"!(isOpenCreator$ | async)\">Добавить ещё одну карточку</div>\n\n      <div class=\"column-footer-inner\" *ngIf=\"(isOpenCreator$ | async)\">\n        <app-editor\n          [formContromName]=\"newTaskTitleControl\"\n          (enterAction)=\"sendCreateTask()\"\n          (escAction)=\"cancelCreate()\"\n        ></app-editor>\n        <div class=\"column-footer-inner__btns\">\n          <button mat-raised-button color=\"primary\" (click)=\"sendCreateTask()\">Создать</button>\n          <app-delete-button (click)=\"cancelCreate()\" [classes]=\"'grey'\"></app-delete-button>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\n\nimport { AppState } from '@root-store/state';\nimport { BoardState } from '@root-store/board/state';\nimport { Column } from '@app/models/column';\nimport * as BoardActions from '@root-store/board/actions/board.actions';\nimport * as BoardSelectors from '@root-store/board/selectors/board.selectors';\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.scss']\n})\nexport class BoardComponent implements OnInit {\n  columnTitleControl: FormControl = this.fb.control('');\n\n  boardState$: Observable<BoardState>;\n  boardColumns$: Observable<Column[]>;\n\n  isOpenCreate = false;\n  boardId: string;\n\n  constructor(\n    private activateRoute: ActivatedRoute,\n    private store: Store<AppState>,\n    private fb: FormBuilder,\n  ) { }\n\n  ngOnInit(): void {\n    this.boardId = this.activateRoute.snapshot.params.id;\n\n    this.store.dispatch(BoardActions.loadBoard({payload: this.boardId}))\n\n    this.boardState$ = this.store.select(BoardSelectors.getBoardState);\n    this.boardColumns$ = this.store.select(BoardSelectors.getBoardColumns);\n  }\n\n  public trackById(index: number, element: Column): string {\n    return element._id;\n  }\n\n  public openCreator(): void {\n    this.isOpenCreate = true;\n  }\n\n  public closeCreator(): void {\n    this.columnTitleControl.patchValue('');\n    this.isOpenCreate = false;\n  }\n\n  public onCreateColumn(): void {\n    if (!this.columnTitleControl.value?.trim()) {\n      this.columnTitleControl.patchValue('');\n      this.closeCreator();\n      return;\n    }\n\n    const payload = {\n      boardId: this.boardId,\n      columnTitle: this.columnTitleControl.value,\n      templateColumnId: new Date().getTime().toString()\n    };\n\n    this.store.dispatch(BoardActions.createColumn({ payload }));\n\n    this.closeCreator();\n  }\n}\n","<div class=\"board-wrap\" cdkDropListGroup>\n  <app-board-header [boardId]=\"boardId\" *ngIf=\"!(boardState$ | async)?.isFetching\"></app-board-header>\n\n  <div class=\"board__columns\">\n\n    <ng-container *ngFor=\"let column of (boardColumns$ | async); trackBy: trackById;\">\n      <app-column\n        [columnData]=\"column\"\n        [boardId]=\"boardId\"\n      ></app-column>\n    </ng-container>\n\n\n    <div class=\"column-add-wrap\">\n      <div class=\"column-add\">\n        <div class=\"column-add__header\" (click)=\"openCreator()\" *ngIf=\"!isOpenCreate\">\n          Добавьте еще одну колонку\n        </div>\n        <div class=\"column-add__create\" *ngIf=\"isOpenCreate\">\n          <app-editor\n            [formContromName]=\"columnTitleControl\"\n            (blurAction)=\"onCreateColumn()\"\n            (escAction)=\"closeCreator()\"\n          ></app-editor>\n          <button mat-raised-button color=\"primary\">Создать</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n\n<app-loader *ngIf=\"(boardState$ | async)?.isFetching\"></app-loader>\n","import { Component, OnInit } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n@Component({\n  selector: 'app-subscibed-users',\n  templateUrl: './subscibed-users.component.html',\n  styleUrls: ['./subscibed-users.component.scss']\n})\nexport class SubscibedUsersComponent implements OnInit {\n  destroy: ReplaySubject<any> = new ReplaySubject<any>(1);\n\n  users: string[] = [];\n\n  constructor(\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  public trackById(index: number, element): number {\n    return element._id;\n  }\n}\n","<ul class=\"users-list list-unstyled\">\n  <li class=\"users-list__user\" *ngFor=\"let user of users; trackBy: trackById;\">{{user}}</li>\n</ul>\n","import { Board } from '@app/models/board';\nimport { Auth } from '@root-store/auth/state';\n\nexport const actions = {\n  MODIFY: 'MODIFY',\n  DELETE: 'DELETE',\n  ASSIGN: 'ASSIGN',\n  CREATE: 'CREATE'\n};\n\nexport const roles = {\n  ADMIN: 'ADMIN',\n  DEVELOPER: 'DEVELOPER',\n  VIEWER: 'VIEWER'\n};\n\nconst mappings = new Map();\n\nmappings.set(actions.DELETE, [roles.ADMIN]);\nmappings.set(actions.ASSIGN, [roles.ADMIN]);\nmappings.set(actions.CREATE, [roles.ADMIN, roles.DEVELOPER]);\nmappings.set(actions.MODIFY, [roles.ADMIN, roles.DEVELOPER]);\n\n\nconst hasPermission = (action: string, role: string): boolean => {\n  const upperAction = action.toUpperCase();\n\n  if (mappings.has(upperAction)) {\n    return mappings.get(upperAction).includes(role);\n  }\n\n  return false;\n};\n\nexport const isAllow = (auth: Auth, board: Board, actionType: string): boolean => {\n  const userId = auth.data?.user._id;\n\n  if (userId === board?.admin._id) {\n    return hasPermission(actionType, roles.ADMIN);\n  }\n\n  if (board?.developer.some((user) => user._id === userId)) {\n    return hasPermission(actionType, roles.DEVELOPER);\n  }\n\n  if (board?.viewer.some((user) => user._id === userId)) {\n    return hasPermission(actionType, roles.VIEWER);\n  }\n\n  return false;\n};\n","import { createSelector } from '@ngrx/store';\n\nimport { AppState } from '@root-store/state';\nimport { actions, isAllow } from '@app/core/utils/permissions/permissions';\n\nconst selectState = (state: AppState) => {\n  return state;\n};\n\nexport const isAllowDelete = createSelector(\n  selectState,\n  ({auth, board: {board}}: AppState): boolean => isAllow(auth, board, actions.DELETE)\n);\n\nexport const isAllowCreate = createSelector(\n  selectState,\n  ({auth, board: {board}}: AppState): boolean => isAllow(auth, board, actions.CREATE)\n);\n\nexport const isAllowModify = createSelector(\n  selectState,\n  ({auth, board: {board}}: AppState): boolean => isAllow(auth, board, actions.MODIFY)\n);\n\nexport const isAllowAssign = createSelector(\n  selectState,\n  ({auth, board: {board}}: AppState): boolean => isAllow(auth, board, actions.ASSIGN)\n);\n\nexport const isAllowByAction = (action: string) => createSelector(\n  selectState,\n  ({auth, board: { board }}: AppState): boolean => isAllow(auth, board, action)\n);\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BoardRoutingModule } from './board-routing.module';\nimport { SharedModule } from '@app/shared/shared.module';\n\nimport { EditorModule } from '@app/modules/editor/editor.module';\nimport { BoardComponent } from './board.component';\nimport { BoardHeaderComponent } from './components/board-header/board-header.component';\nimport { ColumnComponent } from './components/column/column.component';\nimport { SubscibedUsersComponent } from '@app/components/subscibed-users/subscibed-users.component';\nimport { TaskComponent } from './components/column/componens/task/task.component';\nimport { TaskEditorDialogComponent } from '@app/components/task-editor-dialog/task-editor-dialog.component';\nimport { AddBoardDialogComponent } from './components/add-board-dialog/add-board-dialog.component';\n\n\n@NgModule({\n  declarations: [\n    BoardComponent,\n    BoardHeaderComponent,\n    ColumnComponent,\n    SubscibedUsersComponent,\n    TaskComponent,\n    TaskEditorDialogComponent,\n    AddBoardDialogComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    EditorModule,\n    BoardRoutingModule,\n  ]\n})\nexport class BoardModule { }\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class ColumnService {\n  isOpenEditor = new BehaviorSubject<boolean>(false);\n\n  isOpenCreator = new BehaviorSubject<boolean>(false);\n\n  constructor() { }\n\n  public setIsOpenEditor(value: boolean) {\n    this.isOpenEditor.next(value);\n  }\n\n  public getIsOpenEditor(): Observable<boolean> {\n    return this.isOpenEditor.asObservable();\n  }\n\n  public setIsOpenCreator(value: boolean) {\n    this.isOpenCreator.next(value);\n  }\n\n  public getIsOpenCreator(): Observable<boolean> {\n    return this.isOpenCreator.asObservable();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class BoardHeaderService {\n  isOpenEditor = new BehaviorSubject<boolean>(false);\n\n  constructor(\n\n  ) { }\n\n  public setIsOpenEditor(value: boolean) {\n    this.isOpenEditor.next(value);\n  }\n\n  public getIsOpenEditor(): Observable<boolean> {\n    return this.isOpenEditor.asObservable();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@env/environment';\nimport { Response } from '@app/models/response';\nimport { User } from '@app/models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getUsers(name: string): Observable<Response<{users: User[]}>> {\n    return this.http.get<any>(`${environment.apiUrl}/users?name=${name}`)\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormControl } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '@root-store/state';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { AddBoardDialogComponent } from '@app/pages/board/components/add-board-dialog/add-board-dialog.component';\nimport { BoardHeaderService } from '@app/pages/board/components/board-header/services/board-header.service';\nimport { Board } from '@app/models/board';\nimport * as BoardSelectors from '@root-store/board/selectors/board.selectors';\nimport * as BoardActions from '@root-store/board/actions/board.actions';\nimport { isAllowAssign, isAllowDelete, isAllowModify } from '@root-store/permissions/selectors/permissions.selectors';\n\n@Component({\n  selector: 'app-board-header',\n  templateUrl: './board-header.component.html',\n  styleUrls: ['./board-header.component.scss'],\n  providers: [BoardHeaderService]\n})\nexport class BoardHeaderComponent implements OnInit, OnDestroy {\n  @Input() boardId: string;\n\n  destroy: ReplaySubject<any> = new ReplaySubject<any>(1);\n\n  board$;\n\n  isOpenEditior$;\n\n  boardTitleControl: FormControl = this.fb.control('');\n\n  boardTitle = '';\n\n  allowDelete$: Observable<boolean>;\n  allowModify$: Observable<boolean>;\n  allowAssign$: Observable<boolean>;\n\n  constructor(\n    private store: Store<AppState>,\n    private fb: FormBuilder,\n    private boardHeaderService: BoardHeaderService,\n    private activateRoute: ActivatedRoute,\n    private dialog: MatDialog,\n  ) { }\n\n  ngOnInit(): void {\n    this.board$ = this.store.select(BoardSelectors.getBoard);\n\n    this.isOpenEditior$ = this.boardHeaderService.getIsOpenEditor();\n\n    this.board$\n      .pipe(takeUntil(this.destroy))\n      .subscribe((board: Board) => {\n        if (board && board.title) {\n          this.boardTitle = board.title;\n        }\n      });\n\n    this.allowDelete$ = this.store.select(isAllowDelete);\n    this.allowModify$ = this.store.select(isAllowModify);\n    this.allowAssign$ = this.store.select(isAllowAssign);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy.next(null);\n    this.destroy.complete();\n  }\n\n  public addOnBoard(): void {\n    const dialogRef = this.dialog.open(AddBoardDialogComponent);\n\n    dialogRef.afterClosed()\n      .pipe(takeUntil(this.destroy))\n      .subscribe(result => {\n        const payload = { ...result, boardId: this.boardId };\n\n        this.store.dispatch(BoardActions.addUserOnBoard({payload}));\n      })\n  }\n\n  public openEditor(): void {\n    this.boardHeaderService.setIsOpenEditor(true);\n    this.boardTitleControl.patchValue(this.boardTitle);\n  }\n\n  public onEditTitle(): void {\n    if (this.boardTitleControl.value === this.boardTitle) {\n      this.closeEditor();\n      return;\n    }\n\n    if (!(this.boardTitleControl.value.trim && this.boardTitleControl.value.trim())) {\n      this.boardTitleControl.patchValue(this.boardTitle);\n      this.closeEditor();\n      return;\n    }\n\n    const payload = {\n      title: this.boardTitleControl.value,\n      boardId: this.activateRoute.snapshot.params.id\n    };\n\n    this.store.dispatch(BoardActions.updateBoardTitle({ payload }));\n\n    this.closeEditor();\n  }\n\n  public keyEsc(): void {\n    this.boardTitleControl.patchValue(this.boardTitle);\n    this.closeEditor();\n  }\n\n  public deleteBoard(): void {\n    const boardId = this.activateRoute.snapshot.params.id;\n\n    this.store.dispatch(BoardActions.deleteBoard({payload: boardId}));\n  }\n\n  private closeEditor(): void {\n    this.boardHeaderService.setIsOpenEditor(false);\n  }\n}\n","<div class=\"board-header\">\n  <div\n    class=\"board-header__title\"\n    [appAllowClick]=\"allowModify$ | async\"\n    (allowClick)=\"openEditor()\"\n    *ngIf=\"!(isOpenEditior$ | async)\"\n  >\n    {{(board$ | async)?.title}}\n  </div>\n\n  <app-editor\n    *ngIf=\"(isOpenEditior$ | async) && (allowModify$ | async)\"\n    [formContromName]=\"boardTitleControl\"\n    (blurAction)=\"onEditTitle()\"\n    (enterAction)=\"onEditTitle()\"\n    (escAction)=\"keyEsc()\"\n  ></app-editor>\n\n  <button *ngIf=\"allowAssign$ | async\" (click)=\"addOnBoard()\" mat-stroked-button color=\"primary\">Добавить на доску</button>\n\n  <app-subscibed-users></app-subscibed-users>\n\n  <div class=\"flex-spacer\"></div>\n  <app-delete-button *ngIf=\"allowDelete$ | async\" (click)=\"deleteBoard()\" [classes]=\"'white'\"></app-delete-button>\n</div>\n","import { Component, Inject, OnInit, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\nimport { FormBuilder, FormControl } from '@angular/forms';\nimport { map, take } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Task } from '@app/models/task';\nimport { User } from '@app/models/user';\nimport { AppState } from '@root-store/state';\nimport { Comment } from '@app/models/comment';\n\nimport * as BoardActions from '@root-store/board/actions/board.actions';\nimport * as AuthSelectors from '@root-store/auth/selectors/auth.selectors';\nimport { BoardState } from '@root-store/board/state';\nimport * as BoardSelectors from '@root-store/board/selectors/board.selectors';\nimport * as TaskSelectors from '@root-store/board/selectors/task.selectors';\n\n@Component({\n  selector: 'app-task-editor-dialog',\n  templateUrl: './task-editor-dialog.component.html',\n  styleUrls: ['./task-editor-dialog.component.scss']\n})\nexport class TaskEditorDialogComponent implements OnInit, OnDestroy {\n  destroy: ReplaySubject<any> = new ReplaySubject<any>(1);\n\n  users: User[];\n\n  task: Task = this.data.task;\n  taskName = this.task.task;\n  marks: string[] = [...this.task.marks] || [];\n\n  currantUser: User;\n\n  taskNameControl: FormControl = this.fb.control('');\n  taskCommentControl: FormControl = this.fb.control('');\n  statusControl: FormControl = this.fb.control('');\n\n  isOpenEditor$ = new BehaviorSubject<boolean>(false);\n  isOpenMarks$ = new BehaviorSubject<boolean>(false);\n  boardState$: Observable<BoardState>;\n  comments$: Observable<Comment[]>;\n  tasks$: Observable<string[]>;\n  users$: Observable<User[]>;\n\n  marksNames = ['blue', 'green', 'orange', 'purple', 'red', 'yellow'];\n  statuses = ['ready for develop', 'develop', 'on hold', 'review', 'test', 'done'];\n\n  constructor(\n    private fb: FormBuilder,\n    private store: Store<AppState>,\n    @Inject(MAT_DIALOG_DATA) public data: { task: Task, columnId: string, boardId: string },\n  ) {}\n\n  ngOnInit(): void {\n    this.store.select(AuthSelectors.getCurrentUser)\n      .pipe(take(1))\n      .subscribe((user) => {\n        this.currantUser = user;\n      });\n\n    this.comments$ = this.store.select(TaskSelectors.getTaskComments(this.data.columnId, this.task._id));\n    this.tasks$ = this.store.select(TaskSelectors.getTaskLogs(this.data.columnId, this.task._id));\n    this.users$ = this.store.select(TaskSelectors.getTaskField(this.data.columnId, this.task._id, 'users'))\n      .pipe(map((users: User[]) => users.slice(0, 3).reduce((result, user) => {\n        result.push(user.name[0]);\n        return result;\n      }, [])));\n\n    this.boardState$ = this.store.select(BoardSelectors.getBoardState);\n\n    this.statusControl.patchValue(this.task.status || '');\n  }\n\n  ngOnDestroy(): void {\n    this.closeEditor();\n    this.closeMarks();\n    this.destroy.next(null);\n    this.destroy.complete();\n  }\n\n  public trackById(index: number, element): number {\n    return element._id;\n  }\n\n  public trackByName(index: number, element: string): string {\n    return element;\n  }\n\n  public openEditor(): void {\n    this.setIsOpenEditor(true);\n    this.taskNameControl.patchValue(this.taskName);\n  }\n\n  public closeEditor(): void {\n    this.setIsOpenEditor(false);\n  }\n\n  public onEditTitle(): void {\n    if (this.taskNameControl.value === this.taskName) {\n      this.closeEditor();\n      return;\n    }\n\n    if (!this.taskNameControl.value?.trim()) {\n      this.taskNameControl.patchValue(this.taskName);\n      this.closeEditor();\n      return;\n    }\n\n    this.taskName = this.taskNameControl.value;\n\n    const payload = {\n      task: this.taskNameControl.value,\n      taskId: this.task._id,\n      boardId: this.data.boardId\n    };\n\n    this.store.dispatch(BoardActions.updateTaskTitle({payload}));\n\n    this.closeEditor();\n  }\n\n  public keyEsc(): void {\n    this.taskNameControl.patchValue(this.taskName);\n    this.closeEditor();\n  }\n\n  public onChangeStatus(): void {\n    const payload = {\n      taskId: this.task._id,\n      status: this.statusControl.value,\n      boardId: this.data.boardId\n    };\n\n    this.store.dispatch(BoardActions.changeTaskStatus({payload}))\n  }\n\n  public isCheckedMark(value: string): boolean {\n    return this.marks.some((mark) => mark === value);\n  }\n\n  public openMarks(): void {\n    this.setIsOpenMarks(true);\n  }\n\n  public closeMarks(): void {\n    this.setIsOpenMarks(false);\n  }\n\n  public selectMark(value: string): void {\n    const isCheckedMark = this.marks.some((checkMark) => checkMark === value);\n\n    if (isCheckedMark) {\n      this.marks = this.marks.filter((checkMark) => checkMark !== value);\n    }\n\n    if (!isCheckedMark) {\n      this.marks.push(value);\n    }\n\n    const payload = {\n      mark: value,\n      taskId: this.task._id,\n      columnId: this.data.columnId,\n      boardId: this.data.boardId\n    };\n\n    this.store.dispatch(BoardActions.updateTaskMarks({payload}));\n  }\n\n\n  public createComment(): void {\n    const comment = {\n      comment: this.taskCommentControl.value,\n      name: this.currantUser.name,\n      email: this.currantUser.email,\n    };\n\n    const payload = {\n      comment,\n      taskId: this.task._id,\n      boardId: this.data.boardId\n    };\n\n    this.store.dispatch(BoardActions.createTaskComment({payload}));\n  }\n\n  public deleteComment(commentId: string): void {\n    this.comments$ = this.store.select(TaskSelectors.getTaskComments(this.data.columnId, this.task._id)).pipe(\n      map((comments: Comment[]) => comments.filter((comment) => comment._id !== commentId))\n    );\n\n    const payload = {\n      commentId,\n      taskId: this.task._id,\n      boardId: this.data.boardId\n    };\n\n    this.store.dispatch(BoardActions.deleteTaskComment({payload}));\n  }\n\n  public isEmptyComment(): boolean {\n    const comment = this.taskCommentControl.value;\n\n    return Boolean(comment && comment.trim && comment.trim().length);\n  }\n\n  public addOnTask(): void {\n    const payload = {userId: this.currantUser._id, taskId: this.task._id, boardId: this.data.boardId};\n\n    this.store.dispatch(BoardActions.addUserOnTask({payload}));\n  }\n\n  private setIsOpenEditor(value: boolean): void {\n    this.isOpenEditor$.next(value);\n  }\n\n  private setIsOpenMarks(value: boolean): void {\n    this.isOpenMarks$.next(value);\n  }\n}\n","<div class=\"task-editor-modal\">\n  <div class=\"task-editor-modal__row task-editor-modal__title-wrap task-editor-modal__row--space-between\">\n    <div>\n      <mat-icon>note</mat-icon>\n      <div\n        class=\"task-editor-modal__title\"\n        (click)=\"openEditor()\"\n        *ngIf=\"!(isOpenEditor$ | async)\"\n      >\n        {{taskName}}\n      </div>\n      <app-editor\n        *ngIf=\"(isOpenEditor$ | async)\"\n        [formContromName]=\"taskNameControl\"\n        (blurAction)=\"onEditTitle()\"\n        (enterAction)=\"onEditTitle()\"\n        (escAction)=\"keyEsc()\"\n\n      ></app-editor>\n    </div>\n\n    <div>\n      <mat-form-field class=\"task-editor-modal__status\" appearance=\"outline\">\n        <mat-label>Status</mat-label>\n        <mat-select [formControl]=\"statusControl\" (selectionChange)=\"onChangeStatus()\">\n          <mat-option *ngFor=\"let status of statuses\" [value]=\"status\">\n            {{status}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </div>\n\n  <div class=\"task-editor-modal__row task-editor-modal__row--inline\">\n\n    <ul class=\"users-list list-unstyled\">\n      <li class=\"users-list__user\" *ngFor=\"let user of users$ | async; trackBy: trackById;\">{{user}}</li>\n    </ul>\n\n    <div class=\"task-editor-modal__subscribe-wrap\">\n      <button mat-raised-button color=\"primary\" (click)=\"addOnTask()\">Подписаться</button>\n    </div>\n\n    <div class=\"task-editor-modal__marks-wrap\">\n      <ul class=\"task-editor-modal__marks list-unstyled\">\n        <li\n          *ngFor=\"let mark of marks; trackBy: trackByName;\"\n          class=\"task-editor-modal__mark\"\n          [ngClass]=\"'task-editor-modal__mark--' + mark\"\n        ></li>\n        <li class=\"task-editor-modal__mark task-editor-modal__mark--main\" (click)=\"openMarks()\">\n          <mat-icon>add</mat-icon>\n        </li>\n\n        <div class=\"marks-modal-wrap\" *ngIf=\"isOpenMarks$ | async\">\n          <div class=\"marks-modal-overlay\" (click)=\"closeMarks()\"></div>\n          <div class=\"marks-modal\">\n            <div class=\"marks-modal__header\">\n              Метки\n              <app-delete-button (click)=\"closeMarks()\" classes=\"grey\"></app-delete-button>\n            </div>\n            <div class=\"marks-modal__list\">\n              <div\n                *ngFor=\"let mark of marksNames; trackBy: trackByName;\"\n                class=\"marks-modal__item\"\n                [ngClass]=\"'marks-modal__item--' + mark\"\n                (click)=\"selectMark(mark)\"\n              >\n                <mat-icon *ngIf=\"isCheckedMark(mark)\">check</mat-icon>\n              </div>\n\n            </div>\n          </div>\n        </div>\n      </ul>\n    </div>\n  </div>\n\n  <div class=\"task-editor-modal__row task-editor-modal__comment\">\n    <mat-icon>comment</mat-icon>\n    <app-editor\n      [placeholder]=\"'Напишите комментарий...'\"\n      [formContromName]=\"taskCommentControl\"\n    ></app-editor>\n\n    <div class=\"task-editor-modal__comment__btn\">\n      <button\n        mat-raised-button\n        color=\"primary\"\n        [disabled]=\"!isEmptyComment()\"\n        (click)=\"createComment()\"\n      >Сохранить</button>\n    </div>\n  </div>\n\n  <div class=\"task-editor-modal__row\">\n    <div class=\"task-editor-modal__logs logs\">\n      <mat-accordion>\n        <mat-expansion-panel class=\"task-editor-modal__commetns\" hideToggle>\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              Comments\n            </mat-panel-title>\n            <mat-panel-description>\n              <mat-icon>comment</mat-icon>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n\n          <ul *ngIf=\"(comments$ | async).length\" class=\"comments list-unstyled\">\n            <li class=\"comments__item\" *ngFor=\"let comment of comments$ | async; trackBy: trackById;\">\n              <div class=\"comments__commentator\">{{comment.name}}</div>\n              <div class=\"comments__comment\">{{comment.comment}}</div>\n              <div class=\"comments__delete\" (click)=\"deleteComment(comment._id)\">Удалить</div>\n            </li>\n          </ul>\n\n          <div *ngIf=\"!(comments$ | async).length\">Нет комментариев</div>\n        </mat-expansion-panel>\n\n        <mat-expansion-panel hideToggle>\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              Task logs\n            </mat-panel-title>\n            <mat-panel-description>\n              <mat-icon>article</mat-icon>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n\n          <ul *ngIf=\"(tasks$ | async).length\" class=\"logs__list\">\n            <li class=\"logs__item\" *ngFor=\"let log of tasks$ | async\">\n              <div>{{log.date | date : 'short'}}</div>\n              <div>{{log.action}}</div>\n            </li>\n          </ul>\n\n          <div *ngIf=\"!(tasks$ | async).length\">Нет логов</div>\n\n        </mat-expansion-panel>\n      </mat-accordion>\n    </div>\n  </div>\n</div>\n<app-loader *ngIf=\"(boardState$ | async)?.isFetching\"></app-loader>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { debounceTime, distinctUntilChanged, map, startWith, switchMap } from 'rxjs/operators';\n\nimport { Response } from '@app/models/response';\nimport { User } from '@app/models/user';\nimport { UserService } from '@app/core/services/user.service';\n\n@Component({\n  selector: 'app-add-board-dialog',\n  templateUrl: './add-board-dialog.component.html',\n  styleUrls: ['./add-board-dialog.component.scss']\n})\nexport class AddBoardDialogComponent implements OnInit {\n  addBoardForm: FormGroup;\n  filteredOptions$: Observable<User[]>;\n\n  constructor(\n    public dialogRef: MatDialogRef<AddBoardDialogComponent>,\n    private fb: FormBuilder,\n    private userService: UserService,\n  ) { }\n\n  ngOnInit(): void {\n    this.addBoardForm = this.fb.group({\n      name: this.fb.control('', Validators.required),\n      role: this.fb.control('', Validators.required),\n      userId: this.fb.control('')\n    });\n\n    this.filteredOptions$ = this.addBoardForm.controls.name.valueChanges\n      .pipe(\n        startWith(''),\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap(val => {\n          if (typeof val === 'string') {\n            return this.userService.getUsers(val)\n          }\n\n          return this.userService.getUsers(val.name)\n        }),\n        map((response: Response<{users: User[]}>) => response.data.users)\n      )\n  }\n\n  public displayProperty(value: User): string {\n    if (value) {\n      return value.name;\n    }\n  }\n\n  public onSelect(event: MatAutocompleteSelectedEvent): void {\n    this.addBoardForm.controls.userId.patchValue(event.option.value._id)\n  }\n\n  public close(result?: {userId: string, role: string}): void {\n    this.dialogRef.close(result);\n  }\n\n  public done(): void {\n    const payload = {\n      userId: this.addBoardForm.value.userId,\n      role: this.addBoardForm.value.role\n    };\n\n    this.close(payload);\n  }\n}\n","<form [formGroup]=\"addBoardForm\">\n  <div>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>User name</mat-label>\n      <input matInput formControlName=\"name\" [matAutocomplete]=\"auto\">\n      <mat-autocomplete formControlName=\"userId\" #auto=\"matAutocomplete\" (optionSelected)=\"onSelect($event)\" [displayWith]=\"displayProperty\">\n        <mat-option *ngFor=\"let option of filteredOptions$ | async\" [value]=\"option\">\n          {{option.name}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Choose role</mat-label>\n      <mat-select formControlName=\"role\">\n        <mat-option value=\"developer\">Developer</mat-option>\n        <mat-option value=\"viewer\">Viewer</mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n\n  <div>\n    <button mat-raised-button (click)=\"close()\">Закрыть</button>\n    <button mat-raised-button color=\"accent\" [disabled]=\"addBoardForm.invalid\" (click)=\"done()\">Добавить</button>\n  </div>\n</form>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Task } from '@app/models/task';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { TaskEditorDialogComponent } from '@app/components/task-editor-dialog/task-editor-dialog.component';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '@root-store/state';\n\nimport * as BoardActions from '@root-store/board/actions/board.actions';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.scss'],\n})\nexport class TaskComponent implements OnInit {\n  @Input() task: Task;\n\n  @Input() columnId: string;\n  @Input() boardId: string;\n\n  constructor(\n    public dialog: MatDialog,\n    private store: Store<AppState>\n  ) {}\n\n  ngOnInit(): void {\n\n  }\n\n  public openDialog(): void {\n    this.dialog.open(TaskEditorDialogComponent, {\n      data: {\n        task: this.task,\n        columnId: this.columnId,\n        boardId: this.boardId\n      },\n    });\n  }\n\n  public deleteTask(event): void {\n    event.stopPropagation();\n\n    const payload = {\n      taskId: this.task._id,\n      boardId: this.boardId\n    };\n\n    this.store.dispatch(BoardActions.deleteTask({ payload }));\n  }\n\n  public trackById(index: number, element): number {\n    return element._id;\n  }\n}\n","<div class=\"task\" (click)=\"openDialog()\" cdkDrag>\n\n  <app-delete-button (click)=\"deleteTask($event)\" [classes]=\"'gray'\"></app-delete-button>\n\n  <div class=\"marks-wrap\">\n    <div class=\"mark\" *ngFor=\"let mark of task?.marks; trackBy: trackById;\" [ngClass]=\"'mark--' + mark\"></div>\n  </div>\n\n  <div class=\"task__title\">{{task.task}}</div>\n\n  <div class=\"task__icons-wrap\">\n    <div>\n      <div class=\"task__icons\" *ngIf=\"task?.users?.length\">\n        <mat-icon>remove_red_eye</mat-icon>\n        {{task?.users.length}}\n      </div>\n      <div class=\"task__icons\" *ngIf=\"task?.comments?.length\">\n        <mat-icon>mode_comment</mat-icon>\n        {{task?.comments?.length}}\n      </div>\n    </div>\n    <div *ngIf=\"task?.status\">Status: {{task?.status}}</div>\n  </div>\n\n</div>\n"],"sourceRoot":"webpack:///"}