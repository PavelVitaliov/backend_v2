{"version":3,"sources":["./src/app/pages/pages.component.ts","./src/app/pages/pages.component.html","./src/app/core/guards/auth.guard.ts","./src/app/pages/pages.module.ts","./src/app/root-store/auth/selectors/auth.selectors.ts","./src/app/pages/pages-routing.module.ts"],"names":[],"mappings":"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","file":"pages-pages-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pages',\n  templateUrl: './pages.component.html',\n  styleUrls: ['./pages.component.scss']\n})\nexport class PagesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { map, mergeMap, take } from 'rxjs/operators';\n\nimport * as AuthSelectors from '@root-store/auth/selectors/auth.selectors';\n\nimport { AppState } from '@root-store/state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private store: Store<AppState>,\n    private router: Router,\n  ) {}\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean {\n    return this.checkStoreAuthentication().pipe(\n      mergeMap((storeAuth) => {\n        if (storeAuth) {\n          return of(true);\n        }\n\n        return localStorage.getItem('sessionToken') ? of(true) : of(false);\n      }),\n      map(storeOrApiAuth => {\n        if (!storeOrApiAuth) {\n          this.router.navigate(['/sign-in']);\n          return false;\n        }\n\n        return true;\n      })\n    );\n\n    return true;\n  }\n\n  checkStoreAuthentication() {\n    return this.store.select(AuthSelectors.getIsAuthenticated).pipe(take(1));\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PagesRoutingModule } from './pages-routing.module';\nimport { PagesComponent } from './pages.component';\n\n\n@NgModule({\n  declarations: [PagesComponent],\n  imports: [\n    CommonModule,\n    PagesRoutingModule,\n  ]\n})\nexport class PagesModule {\n}\n","import { createSelector } from '@ngrx/store';\nimport { AppState } from '@root-store/state';\nimport { Auth } from '@root-store/auth/state';\nimport { User } from '@app/models/user';\n\nconst selectAuth = (state: AppState) => {\n  return state;\n};\n\nexport const getAuth = createSelector(\n  selectAuth,\n  (state: AppState): Auth => {\n    return state.auth;\n  }\n);\n\nexport const getIsAuthenticated = createSelector(\n  selectAuth,\n  (state: AppState): boolean => {\n    return state.auth.isAuthenticated;\n  }\n);\n\nexport const getCurrentUser = createSelector(\n  selectAuth,\n  (state: AppState): User => {\n    if (state.auth && state.auth.data && state.auth.data.user) {\n      return state.auth.data.user;\n    }\n  }\n);\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PagesComponent } from '@app/pages/pages.component';\n\nimport { AuthGuard } from '@app/core/guards/auth.guard';\n\n\nconst routes: Routes = [\n  { path: '',   redirectTo: 'boards', pathMatch: 'full' },\n  {\n    path: '',\n    component: PagesComponent,\n    children: [\n      {\n        path: 'sign-in',\n        loadChildren: () => import('./sign-in/sign-in.module').then(m => m.SignInModule),\n      },\n      {\n        path: 'sign-up',\n        loadChildren: () => import('./sign-up/sign-Up.module').then(m => m.SignUpModule),\n      },\n      {\n        path: 'boards',\n        loadChildren: () => import('./boards/boards.module').then(m => m.BoardsModule),\n        canActivate: [AuthGuard],\n      },\n      {\n        path: 'board/:id',\n        loadChildren: () => import('./board/board.module').then(m => m.BoardModule),\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PagesRoutingModule { }\n"],"sourceRoot":"webpack:///"}