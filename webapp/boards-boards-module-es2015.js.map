{"version":3,"sources":["./src/app/pages/boards/boards.component.ts","./src/app/pages/boards/boards.component.html","./src/app/pages/boards/boards.module.ts","./src/app/pages/boards/boards-routing.module.ts"],"names":[],"mappings":"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","file":"boards-boards-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { map } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\n\nimport { AppState } from '@root-store/state';\nimport { BoardsState } from '@root-store/boards/state';\nimport { Board } from '@app/models/board';\nimport * as BoardsSelectors from '@root-store/boards/selectors/boards.selectors';\nimport * as BoardsActions from '@root-store/boards/actions/boards.actions';\n\n@Component({\n  selector: 'app-boards',\n  templateUrl: './boards.component.html',\n  styleUrls: ['./boards.component.scss']\n})\nexport class BoardsComponent implements OnInit {\n  newBoardTitleControl = this.fb.control('');\n\n  boardsState$;\n  boards$;\n  boards: Board[];\n\n  constructor(\n    private fb: FormBuilder,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n    this.store.dispatch(BoardsActions.checkBoards());\n    this.boardsState$ = this.store.select(BoardsSelectors.getBoardsState);\n    this.boards$ = this.boardsState$.pipe(map((boardsState: BoardsState) => boardsState.boards));\n  }\n\n  public openCreator(): void {\n    this.store.dispatch(BoardsActions.openBoardCreator());\n  }\n\n  public closeCreator(): void {\n    this.newBoardTitleControl.patchValue('');\n    this.store.dispatch(BoardsActions.closeBoardCreator());\n  }\n\n  public sendCreateBoard(): void {\n    if (!this.newBoardTitleControl.value?.trim()) {\n      this.newBoardTitleControl.patchValue('');\n      this.closeCreator();\n      return;\n    }\n\n    this.store.dispatch(BoardsActions.createBoard({payload: this.newBoardTitleControl.value}));\n    this.closeCreator();\n  }\n\n  public cancelCreate(): void {\n    this.closeCreator();\n  }\n\n  public trackById(index: number, element: Board): string {\n    return element._id;\n  }\n\n}\n","<div class=\"boards-wrap container-wrap\">\n  <h2 *ngIf=\"(boards$ | async)?.admin.length\">Admin`s Boards</h2>\n  <ul class=\"boards-list list-unstyled\">\n    <li\n      class=\"boards-list__item\"\n      *ngFor=\"let board of (boards$ | async)?.admin; trackBy: trackById;\"\n    >\n      <a [routerLink]=\"['/board', board._id]\" class=\"boards-list__link\">\n        <span class=\"boards-list__title\">{{board.title}}</span>\n      </a>\n    </li>\n\n    <li *ngIf=\"!(boardsState$ | async)?.isFetching\" class=\"boards-list__item\">\n      <div class=\"boards-list__btn-wrap\">\n        <div class=\"boards-list__btn\" *ngIf=\"!(boardsState$ | async)?.isOpenBoardCreator\" (click)=\"openCreator()\">Создать доску</div>\n\n        <div class=\"boards-list__creator\" *ngIf=\"(boardsState$ | async)?.isOpenBoardCreator\">\n          <app-editor\n            [formContromName]=\"newBoardTitleControl\"\n            (enterAction)=\"sendCreateBoard()\"\n            (escAction)=\"cancelCreate()\"\n          ></app-editor>\n          <div class=\"boards-list__creator__btns\">\n            <button mat-raised-button color=\"primary\" (click)=\"sendCreateBoard()\">Создать</button>\n            <app-delete-button (click)=\"closeCreator()\" [classes]=\"'white'\"></app-delete-button>\n          </div>\n\n        </div>\n      </div>\n\n    </li>\n\n  </ul>\n\n  <h2 *ngIf=\"(boards$ | async)?.developer.length\">Developer`s Boards</h2>\n  <ul class=\"boards-list list-unstyled\">\n    <li\n      class=\"boards-list__item\"\n      *ngFor=\"let board of (boards$ | async)?.developer; trackBy: trackById;\"\n    >\n      <a [routerLink]=\"['/board', board._id]\" class=\"boards-list__link\">\n        <span class=\"boards-list__title\">{{board.title}}</span>\n      </a>\n    </li>\n  </ul>\n\n\n  <h2 *ngIf=\"(boards$ | async)?.viewer.length\">Viewer`s Boards</h2>\n  <ul class=\"boards-list list-unstyled\">\n    <li\n      class=\"boards-list__item\"\n      *ngFor=\"let board of (boards$ | async)?.viewer; trackBy: trackById;\"\n    >\n      <a [routerLink]=\"['/board', board._id]\" class=\"boards-list__link\">\n        <span class=\"boards-list__title\">{{board.title}}</span>\n      </a>\n    </li>\n  </ul>\n\n  <app-loader *ngIf=\"(boardsState$ | async)?.isFetching\"></app-loader>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BoardsRoutingModule } from './boards-routing.module';\nimport { BoardsComponent } from './boards.component';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { EditorModule } from '@app/modules/editor/editor.module';\n\n@NgModule({\n  declarations: [BoardsComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    EditorModule,\n    BoardsRoutingModule\n  ]\n})\nexport class BoardsModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BoardsComponent } from '@app/pages/boards/boards.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BoardsComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BoardsRoutingModule { }\n"],"sourceRoot":"webpack:///"}