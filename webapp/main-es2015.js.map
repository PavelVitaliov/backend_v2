{"version":3,"sources":["./src/app/modules/header/header.component.ts","./src/app/modules/header/header.component.html","./src/app/root-store/board/board.module.ts","./src/app/root-store/board/effects/task.effects.ts","./src/app/shared/components/loader/loader.component.ts","./src/app/shared/components/loader/loader.component.html","./src/app/root-store/board/state/index.ts","./src/app/core/services/boards.service.ts","./src/app/core/services/auth.service.ts","./src/app/modules/header/header.module.ts","./src/app/root-store/auth/effects/auth.effects.ts","./src/environments/environment.ts","./src/app/root-store/boards/effects/boards.effects.ts","./src/app/root-store/boards/selectors/boards.selectors.ts","./src/app/root-store/permissions/permissions.module.ts","./src/app/root-store/boards/state/index.ts","./src/app/shared/directives/allow-click.directive.ts","./src/app/shared/directives/autofocus.directive.ts","./src/app/core/services/board.service.ts","./src/app/root-store/boards/boards.module.ts","./src/app/shared/shared.module.ts","./src/app/core/services/comment.service.ts","./src/app/root-store/boards/reducers/boards.reducer.ts","./src/app/shared/components/delete-button/delete-button.module.ts","./src/app/root-store/board/reducers/board.reducer.ts","./src/app/root-store/auth/auth.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/fontawesome/fontawesome.module.ts","./src/app/app.module.ts","./src/app/root-store/state/index.ts","./src/app/root-store/board/effects/comment.effects.ts","./src/app/root-store/board/effects/column.effects.ts","./src/app/shared/directives/email-validate.directive.ts","./src/app/root-store/auth/actions/auth.actions.ts","./src/app/core/interceptors/auth.interceptor.ts","./src/app/shared/material/material.module.ts","./src/app/root-store/auth/reducers/auth.reducer.ts","./src/app/root-store/boards/actions/boards.actions.ts","./src/app/root-store/root-store.module.ts","./src/app/root-store/board/actions/board.actions.ts","./src/app/root-store/auth/state/index.ts","./src/app/root-store/board/effects/board.effects.ts","./src/app/app-routing.module.ts","./src/app/shared/components/delete-button/delete-button.component.ts","./src/app/shared/components/delete-button/delete-button.component.html","./src/app/core/services/column.service.ts","./src/app/core/services/task.service.ts","./src/app/shared/components/loader/loader.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport { AppState } from '@root-store/state';\n\nimport * as AuthActions from '@root-store/auth/actions/auth.actions';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  public logOut(): void {\n    this.store.dispatch(AuthActions.logOut());\n  }\n\n}\n","<mat-toolbar class=\"header\" color=\"primary\">\n  <mat-toolbar-row>\n    <mat-icon routerLink=\"/boards\" class=\"header__icon\" aria-hidden=\"false\">home</mat-icon>\n    <span class=\"header-spacer\"></span>\n    <button mat-button [matMenuTriggerFor]=\"headerMenu\"><mat-icon>more_vert</mat-icon></button>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<mat-menu class=\"header-menu\" #headerMenu=\"matMenu\">\n  <a class=\"header-menu__item\" routerLink=\"/boards\">Boards</a>\n  <a class=\"header-menu__item\" routerLink=\"/sign-in\">SignIn</a>\n  <a class=\"header-menu__item\" routerLink=\"/sign-up\">SignUp</a>\n  <a class=\"header-menu__item\" (click)=\"logOut()\">Log out</a>\n\n\n</mat-menu>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { BoardEffects } from './effects/board.effects';\nimport { reducer } from '@root-store/board/reducers/board.reducer';\nimport { ColumnEffects } from './effects/column.effects';\nimport { TaskEffects } from './effects/task.effects';\nimport { CommentEffects } from './effects/comment.effects';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    StoreModule.forFeature('board', reducer),\n    EffectsModule.forFeature([BoardEffects, ColumnEffects, TaskEffects, CommentEffects])\n  ]\n})\nexport class BoardModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap, take, catchError } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { Actions, ofType, Effect } from '@ngrx/effects';\n\nimport { AppState } from '@root-store/state';\n\nimport { TaskService } from '@app/core/services/task.service';\nimport { CustomActionType } from '@app/models/action';\nimport { Board } from '@app/models/board';\nimport { Task } from '@app/models/task';\n\nimport * as BoardActions from '@root-store/board/actions/board.actions';\n\nimport { getBoard } from '@root-store/board/selectors/board.selectors';\n\n@Injectable()\nexport class TaskEffects {\n\n  constructor(\n    private actions$: Actions,\n    private store: Store<AppState>,\n    private taskService: TaskService\n  ) {\n  }\n\n  @Effect()\n  createTask$ = this.actions$.pipe(\n    ofType(BoardActions.createTask),\n    switchMap(({payload}: CustomActionType<{columnId: string, task: string, boardId: string}>) => {\n      const { columnId, task, boardId } = payload;\n\n      return this.taskService.createTask(columnId, task)\n        .pipe(\n          map(() => {\n            return BoardActions.loadBoard({ payload: boardId });\n          }),\n          catchError((error: HttpErrorResponse) => {\n            console.error(error);\n            return of(BoardActions.createTaskFailure({ payload: error }));\n          })\n        )\n    })\n  );\n\n  @Effect()\n  deleteTask$ = this.actions$.pipe(\n    ofType(BoardActions.deleteTask),\n    switchMap(({payload}: CustomActionType<{taskId: string, boardId: string}>) => {\n      const { taskId, boardId } = payload;\n\n      return this.taskService.deleteTask(taskId)\n        .pipe(\n          map(() => {\n            return BoardActions.loadBoard({ payload: boardId });\n          }),\n          catchError((error: HttpErrorResponse) => {\n            console.error(error);\n            return of(BoardActions.deleteTaskFailure({ payload: error }));\n          })\n        )\n    })\n  );\n\n  @Effect()\n  updateTaskTitle$ = this.actions$.pipe(\n    ofType(BoardActions.updateTaskTitle),\n    switchMap(({payload}: CustomActionType<{task: string, taskId: string, boardId: string}>) => {\n      const { task, taskId, boardId } = payload;\n\n      return this.taskService.updateTaskTitle(taskId, task)\n        .pipe(\n          map(() => {\n            return BoardActions.loadBoard({ payload: boardId });\n          }),\n          catchError((error: HttpErrorResponse) => {\n            console.error(error);\n            return of(BoardActions.updateTaskTitleFailure({ payload: error }));\n          })\n        )\n    })\n  );\n\n  @Effect()\n  updateTaskMarks$ = this.actions$.pipe(\n    ofType(BoardActions.updateTaskMarks),\n    switchMap(({payload}) => {\n      const { mark, taskId, boardId } = payload;\n\n      return this.taskService.updateTaskMarks(taskId, mark)\n        .pipe(\n          map(() => {\n            return BoardActions.loadBoard({ payload: boardId });\n          }),\n          catchError((error: HttpErrorResponse) => {\n            console.error(error);\n            return of(BoardActions.updateTaskMarksFailure({ payload: error }));\n          })\n        )\n    })\n  );\n\n  @Effect()\n  changeTaskStatus$ = this.actions$.pipe(\n    ofType(BoardActions.changeTaskStatus),\n    switchMap(({payload}) => {\n      const { taskId, status, boardId } = payload;\n\n      return this.taskService.changeTaskStatus(taskId, status)\n        .pipe(\n          map(() => {\n            return BoardActions.loadBoard({ payload: boardId });\n          }),\n          catchError((error: HttpErrorResponse) => {\n            console.error(error);\n            return of(BoardActions.changeTaskStatusFailure({ payload: error }));\n          })\n        )\n    })\n  );\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"loader-wrap\">\n  <mat-spinner color=\"primary\"></mat-spinner>\n</div>\n","import { Board } from '@app/models/board';\n\nexport interface BoardState {\n  errorMessage: any;\n  isFetching: boolean;\n  success?: boolean;\n  board: Board;\n  type?: string;\n}\n\nexport const initialState: BoardState = {\n  errorMessage: null,\n  isFetching: false,\n  success: false,\n  board: null,\n};\n","import { Injectable } from '@angular/core';\n\nimport { environment } from '@env/environment';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Response } from '@app/models/response';\nimport { Boards } from '@app/models/boards';\nimport { Board } from '@app/models/board';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BoardsService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getBoards(): Observable<Response<Boards> | HttpErrorResponse> {\n    return this.http.get<Response<Boards> | HttpErrorResponse>(`${environment.apiUrl}/boards`);\n  }\n\n  createBoard(title: string): Observable<Response<Board> | HttpErrorResponse> {\n    return this.http.post<Response<Board> | HttpErrorResponse>(`${environment.apiUrl}/boards`, {title});\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@env/environment';\n\nimport { Response } from '@app/models/response';\nimport { AuthDataRequest, AuthResponse, SignUpDataRequest } from '@app/models/auth';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  logIn(data: AuthDataRequest): Observable<Response<AuthResponse> | HttpErrorResponse> {\n    return this.http.post<Response<AuthResponse> | HttpErrorResponse>\n    (`${environment.apiUrl}/auth/signin`, data);\n  }\n\n  signUp(data: SignUpDataRequest): Observable<Response<AuthResponse> | HttpErrorResponse> {\n    return this.http.post<Response<AuthResponse> | HttpErrorResponse>\n    (`${environment.apiUrl}/auth/signup`, data);\n  }\n\n  checkLogin(): Observable<Response<AuthResponse> | HttpErrorResponse> {\n    return this.http.get<Response<AuthResponse> | HttpErrorResponse>(`${environment.apiUrl}/users/current`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header.component';\n\nimport { SharedModule } from '@app/shared/shared.module';\n\n@NgModule({\n  declarations: [HeaderComponent],\n  imports: [\n    CommonModule,\n    SharedModule\n  ],\n  exports: [HeaderComponent]\n})\nexport class HeaderModule { }\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { catchError, map, switchMap, tap } from 'rxjs/operators';\n\nimport { AuthService } from '@app/core/services/auth.service';\nimport { CustomActionType } from '@app/models/action';\nimport { AuthDataRequest, AuthResponse, SignUpDataRequest } from '@app/models/auth';\nimport { Response } from '@app/models/response';\n\nimport * as AuthActions from '@root-store/auth/actions/auth.actions';\nimport * as BoardsActions from '@root-store/boards/actions/boards.actions';\n\n@Injectable()\nexport class AuthEffects {\n\n  constructor(\n    private actions$: Actions,\n    private router: Router,\n    private authService: AuthService\n  ) { }\n\n  @Effect()\n  logIn$ = this.actions$.pipe(\n    ofType(AuthActions.auth),\n    switchMap(({payload}: CustomActionType<AuthDataRequest>) => {\n      return this.authService.logIn(payload)\n        .pipe(\n          map((response: Response<AuthResponse>) => {\n            localStorage.setItem('sessionToken', response.data.token);\n            return AuthActions.authSuccess({payload: response.data});\n          }),\n          catchError((error: HttpErrorResponse) => {\n            return of(AuthActions.authFailure({payload: error}));\n          })\n        );\n    })\n  );\n\n  @Effect()\n  signUp$ = this.actions$.pipe(\n    ofType(AuthActions.signUp),\n    switchMap(({ payload }: CustomActionType<SignUpDataRequest>) => {\n      return this.authService.signUp(payload)\n        .pipe(\n          map((response: Response<AuthResponse>) => {\n            return AuthActions.signUpSuccess({ payload: response.data});\n          }),\n          catchError((error) => {\n            console.error(error);\n            return of(AuthActions.signUpFailure({ payload: error }));\n          })\n        );\n    })\n  );\n\n  @Effect({ dispatch: false })\n  logInSuccess$ = this.actions$.pipe(\n    ofType(AuthActions.authSuccess, AuthActions.signUpSuccess),\n    tap(() => this.router.navigate(['/']))\n  );\n\n  @Effect()\n  checkAuthByToken$ = this.actions$.pipe(\n    ofType(AuthActions.chechAuthByToken),\n    switchMap(() => {\n      return this.authService.checkLogin().pipe(\n        map((response: Response<AuthResponse>) => {\n          return AuthActions.chechAuthByTokenSuccess({ payload: response.data});\n        }),\n        catchError((error) => {\n          console.error(error);\n          return of(AuthActions.chechAuthByTokenFailure({ payload: error }));\n        })\n      );\n    })\n  );\n\n  @Effect()\n  chechAuthByTokenSuccess$ = this.actions$.pipe(\n    ofType(AuthActions.chechAuthByTokenSuccess),\n    map(() => BoardsActions.loadBoards())\n  );\n\n  @Effect({ dispatch: false })\n  logOut$ = this.actions$.pipe(\n    ofType(AuthActions.logOut),\n    tap(() => {\n      localStorage.removeItem('sessionToken');\n      return this.router.navigate(['/sign-in']);\n    })\n  );\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap, take } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { Actions, ofType, Effect } from '@ngrx/effects';\n\nimport { BoardsService } from '@app/core/services/boards.service';\n\nimport { CustomActionType } from '@app/models/action';\nimport { AppState } from '@root-store/state';\nimport { Response } from '@app/models/response';\nimport { Boards } from '@app/models/boards';\n\nimport * as BoardsActions from '@root-store/boards/actions/boards.actions';\n\nimport { getBoards } from '@root-store/boards/selectors/boards.selectors';\nimport { Board } from '@app/models/board';\n\n@Injectable()\nexport class BoardsEffects {\n\n  constructor(\n    private actions$: Actions,\n    private boardsService: BoardsService,\n    private store: Store<AppState>\n  ) { }\n\n  @Effect()\n  createBoard$ = this.actions$.pipe(\n    ofType(BoardsActions.createBoard),\n    switchMap((actionData: CustomActionType<string>) =>\n      this.boardsService.createBoard(actionData.payload).pipe(\n        map(({ data }: Response<Board>) => {\n          return BoardsActions.createBoardSuccess({ payload: data} );\n        })\n      )\n    )\n  );\n\n  @Effect()\n  checkBoards$ = this.actions$.pipe(\n    ofType(BoardsActions.checkBoards),\n    switchMap(() => {\n      return this.checkStoreBoards().pipe(\n        map((boards: Boards | null) => {\n          if (boards) {\n            return BoardsActions.checkBoardsSuccess();\n          } else {\n            return BoardsActions.loadBoards();\n          }\n        })\n      );\n    })\n  );\n\n  @Effect()\n  loadBoards$ = this.actions$.pipe(\n    ofType(BoardsActions.loadBoards),\n    switchMap(() => {\n      return this.boardsService.getBoards().pipe(\n        map(({ data }: Response<Boards>) => {\n          return BoardsActions.loadBoardsSuccess({payload: data});\n        }),\n        catchError((error: HttpErrorResponse) => {\n          console.log(error);\n          return of(BoardsActions.loadBoardsFailure({payload: error}));\n        })\n      );\n    })\n  );\n\n  checkStoreBoards(): Observable<Boards> {\n    return this.store.select(getBoards).pipe(take(1));\n  }\n\n}\n","import { createSelector } from '@ngrx/store';\n\nimport { AppState } from '@root-store/state';\nimport { BoardsState } from '@root-store/boards/state';\nimport { Boards } from '@app/models/boards';\n\nconst selectBoards = (state: AppState) => state.boards;\n\nexport const getBoardsState = createSelector(\n  selectBoards,\n  (boardsState: BoardsState): BoardsState => {\n    return boardsState;\n  }\n);\n\nexport const getBoards = createSelector(\n  selectBoards,\n  ({ boards }: BoardsState): Boards => {\n    return boards;\n  }\n);\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ]\n})\nexport class PermissionsModule { }\n","import { Boards } from '@app/models/boards';\n\nexport interface BoardsState {\n  errorMessage: any;\n  isFetching: boolean;\n  success?: boolean;\n  boards: Boards;\n  isOpenBoardCreator: boolean;\n}\n\nexport const initialState: BoardsState = {\n  errorMessage: null,\n  isFetching: false,\n  success: false,\n  boards: null,\n  isOpenBoardCreator: false\n};\n","import { Directive, Output, EventEmitter, Input, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appAllowClick]'\n})\nexport class AllowClickDirective {\n  @Output() allowClick = new EventEmitter();\n  @Input() appAllowClick: boolean;\n  constructor() { }\n\n  @HostListener('click', ['$event'])\n  clickEvent() {\n    if (this.appAllowClick) {\n      this.allowClick.emit();\n    }\n  }\n\n}\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[appAutofocus]'\n})\nexport class AutofocusDirective implements OnInit {\n  @Input('appAutofocus') set appAutofocus(condition: boolean) {\n    this._autofocus = condition !== false;\n  }\n\n  private _autofocus: boolean;\n\n  constructor(private el: ElementRef) {\n  }\n\n  ngOnInit(): void {\n    if (this._autofocus || typeof this._autofocus === 'undefined') {\n      this.el.nativeElement.focus();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@env/environment';\n\nimport { DeleteBoardResponse, Response } from '@app/models/response';\nimport { AddingUser, Board, DNDData } from '@app/models/board';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BoardService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getBoard(boardId: string): Observable<Response<Board> | HttpErrorResponse> {\n    return this.http.get<Response<Board> | HttpErrorResponse>(`${environment.apiUrl}/boards/${boardId}`);\n  }\n\n  addUserOnBoard(data: AddingUser, boardId: string): Observable<Response<Board> | HttpErrorResponse> {\n    return this.http.patch<Response<Board> | HttpErrorResponse>(`${environment.apiUrl}/boards/${boardId}`, data);\n  }\n\n  updateBoardTitle(boardId: string, title: string): Observable<Response<Board> | HttpErrorResponse> {\n    return this.http.put<Response<Board> | HttpErrorResponse>(`${environment.apiUrl}/boards/${boardId}`, { title });\n  }\n\n  deleteBoard(boardId: string): Observable<DeleteBoardResponse | HttpErrorResponse> {\n    return this.http.delete<DeleteBoardResponse | HttpErrorResponse>(`${environment.apiUrl}/boards/${boardId}`);\n  }\n\n  dnd(data: DNDData) {\n    return this.http.patch(`${environment.apiUrl}/tasks`, { ...data });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { BoardsEffects } from './effects/boards.effects';\nimport { reducer } from '@root-store/boards/reducers/boards.reducer';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    StoreModule.forFeature('boards', reducer),\n    EffectsModule.forFeature([BoardsEffects])\n  ]\n})\nexport class BoardsModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { EmailValidateDirective } from '@app/shared/directives/email-validate.directive';\n\nimport { FontawesomeModule } from '@app/shared/fontawesome/fontawesome.module';\nimport { MaterialModule } from '@app/shared/material/material.module';\nimport { LoaderModule } from './components/loader/loader.module';\nimport { DeleteButtonModule } from '@app/shared/components/delete-button/delete-button.module';\nimport { AutofocusDirective } from './directives/autofocus.directive';\nimport { AllowClickDirective } from '@app/shared/directives/allow-click.directive';\n\n@NgModule({\n  declarations: [\n    EmailValidateDirective,\n    AutofocusDirective,\n    AllowClickDirective,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    MaterialModule,\n    FontawesomeModule,\n    LoaderModule,\n    DeleteButtonModule,\n  ],\n  exports: [\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    MaterialModule,\n    FontawesomeModule,\n    LoaderModule,\n    DeleteButtonModule,\n    AutofocusDirective,\n    AllowClickDirective,\n  ]\n})\nexport class SharedModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@env/environment';\n\nimport { Response } from '@app/models/response';\nimport { Comment } from '@app/models/comment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  createTaskComment(taskId: string, comment: Comment): Observable<Response<Comment> | HttpErrorResponse> {\n    return this.http.post<Response<Comment> | HttpErrorResponse>(`${environment.apiUrl}/comments/${taskId}`, { ...comment });\n  }\n\n  deleteTaskComment(taskId: string, commentId: string): Observable<Response<any> | HttpErrorResponse> {\n    return this.http.request<Response<any> | HttpErrorResponse>\n    ('delete', `${environment.apiUrl}/comments/${commentId}`, {body: {taskId}});\n  }\n}\n","import { Action, createReducer, on } from '@ngrx/store';\nimport update from 'immutability-helper';\n\nimport * as BoardsActionTypes from '@root-store/boards/actions/boards.actions';\nimport { initialState, BoardsState } from '@root-store/boards/state';\n\nconst boardsReducer = createReducer(\n  initialState,\n\n  on(BoardsActionTypes.loadBoards, (state) =>\n    update(state, {\n      boards: { $set: null },\n      isFetching: { $set: true },\n      errorMessage: { $set: null }\n    })\n  ),\n\n  on(BoardsActionTypes.loadBoardsSuccess, (state, { payload }) =>\n    update(state, {\n      boards: { $set: payload },\n      isFetching: { $set: false },\n      errorMessage: { $set: null }\n    })\n  ),\n\n  on(BoardsActionTypes.loadBoardsFailure, (state, { payload: { error } }) =>\n    update(state, {\n      isFetching: { $set: false },\n      errorMessage: { $set: error.message }\n    })\n  ),\n\n  on(BoardsActionTypes.openBoardCreator, (state) =>\n    update(state, {\n      isOpenBoardCreator: { $set: true }\n    })\n  ),\n\n  on(BoardsActionTypes.closeBoardCreator, (state) =>\n    update(state, {\n      isOpenBoardCreator: { $set: false }\n    })\n  ),\n\n  on(BoardsActionTypes.createBoard, (state) =>\n    update(state, {\n      isFetching: { $set: true }\n    })\n  ),\n\n  on(BoardsActionTypes.createBoardSuccess, (state, data) =>\n    update(state, {\n      boards: boards => update(boards, {\n        admin: { $push: [data.payload]}\n      }),\n      isFetching: { $set: false }\n    })\n  ),\n\n  on(BoardsActionTypes.createBoardFailure, (state, { payload: { error } }) =>\n    update(state, {\n      isFetching: { $set: false },\n      errorMessage: { $set: error.message },\n    })\n  ),\n);\n\nexport function reducer(state: BoardsState | undefined, action: Action) {\n  return boardsReducer(state, action);\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {MatIconModule} from '@angular/material/icon';\n\nimport { DeleteButtonComponent } from './delete-button.component';\n\n@NgModule({\n  declarations: [DeleteButtonComponent],\n  imports: [\n    CommonModule,\n    MatIconModule\n  ],\n  exports: [DeleteButtonComponent]\n})\nexport class DeleteButtonModule { }\n","import { Action, createReducer, on } from '@ngrx/store';\nimport { moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport update from 'immutability-helper';\n\nimport { BoardState, initialState } from '@root-store/board/state';\nimport * as BoardActions from '@root-store/board/actions/board.actions';\nimport { Board } from '@app/models/board';\nimport { Column } from '@app/models/column';\nimport { Task } from '@app/models/task';\n\nconst boardReducer = createReducer(\n  initialState,\n\n  on(\n    BoardActions.loadBoard,\n    BoardActions.updateBoardTitle,\n    BoardActions.createColumn,\n    BoardActions.deleteColumn,\n    BoardActions.deleteBoard,\n    BoardActions.updateColumnTitle,\n    BoardActions.createTask,\n    BoardActions.deleteTask,\n    BoardActions.updateTaskTitle,\n    BoardActions.updateTaskMarks,\n\n    (state) =>\n      update(state, {\n        errorMessage: { $set: null },\n        isFetching: { $set: true },\n      })\n  ),\n\n  on(\n    BoardActions.createTaskComment,\n    BoardActions.deleteTaskComment,\n    BoardActions.changeTaskStatus,\n\n    (state) =>\n      update(state, {\n        errorMessage: { $set: null },\n        isFetching: { $set: true },\n      })\n  ),\n\n  on(BoardActions.loadBoardSuccess, (state, { payload }) =>\n    update(state, {\n      board: { $set: payload },\n      errorMessage: { $set: null },\n      isFetching: { $set: false }\n    })\n  ),\n\n  on(\n    BoardActions.loadBoardFailure,\n    BoardActions.updateBoardTitleFailure,\n    BoardActions.createColumnFailure,\n    BoardActions.deleteColumnFailure,\n    BoardActions.deleteBoardFailure,\n    BoardActions.updateColumnTitleFailure,\n    BoardActions.createTaskFailure,\n    BoardActions.deleteTaskFailure,\n    BoardActions.updateTaskTitleFailure,\n    BoardActions.updateTaskMarksFailure,\n\n    (state, { payload: { error } }) =>\n      update(state, {\n        errorMessage: { $set: error.message },\n        isFetching: { $set: false }\n      })\n  ),\n\n  on(\n    BoardActions.createTaskCommentFailure,\n    BoardActions.deleteTaskCommentFailure,\n    BoardActions.changeTaskStatusFailure,\n\n    (state, { payload: { error } }) =>\n      update(state, {\n        errorMessage: { $set: error.message },\n        isFetching: { $set: false }\n      })\n  ),\n\n  on(BoardActions.updateBoardTitleSuccess, (state, { payload }) =>\n    update(state, {\n      board: (board: Board) => update(board, {\n        title: { $set: payload }\n      }),\n      isFetching: { $set: false },\n      errorMessage: { $set: null },\n    })\n  ),\n\n\n  on(BoardActions.updateBoardState, (state, { payload }) =>\n    update(state, {\n      board: { $set: payload },\n      errorMessage: { $set: null },\n      isFetching: { $set: false }\n    })\n  ),\n\n  on(BoardActions.deleteBoardSuccess, (state) =>\n    update(state, {\n      errorMessage: { $set: null },\n      isFetching: { $set: false }\n    })\n  ),\n\n  on(BoardActions.deleteColumnSuccess, (state, { payload }) =>\n    update(state, {\n      board: (board: Board) => update(board, {\n        columns: columns => columns.reduce((previousValue, currentValue) => {\n          if (currentValue._id !== payload) {\n            previousValue.push(currentValue)\n          }\n\n          return previousValue;\n        }, [])\n      }),\n      errorMessage: { $set: null },\n      isFetching: { $set: false }\n    })\n  ),\n\n  on(BoardActions.updateColumnTitleSuccess, (state, { payload }) =>\n    update(state, {\n      board: (board: Board) => update(board, {\n        columns: columns => columns.map(column => {\n          if (column._id === payload.columnId) {\n            return { ...column, title: payload.title }\n          }\n\n          return column;\n        })\n      }),\n      errorMessage: { $set: null },\n      isFetching: { $set: false }\n    })\n  ),\n\n  on(BoardActions.updateTaskMarks, (state, { payload }) => {\n    const { columnId, taskId, mark } = payload;\n\n    return update(state, {\n      board: (board: Board) => update(board, {\n        columns: (columns: Column[]) => columns.map(column => {\n          if (columnId === column._id) {\n            return update(column, {\n              tasks: (tasks: Task[]) => tasks.map(task => {\n                if (taskId === task._id) {\n                  return update(task, {\n                    marks: (marks: string[]) => {\n                      const isCheckedMark = marks.some((checkMark) => checkMark === mark);\n\n                      if (isCheckedMark) {\n                        return marks.filter((checkMark) => checkMark !== mark);\n                      }\n\n                      return [...marks, mark];\n                    }\n                  })\n                }\n                return task\n              })\n            })\n          }\n          return column;\n        })\n      }),\n      errorMessage: { $set: null },\n      isFetching: { $set: false }\n    });\n  }),\n\n  on(BoardActions.dragAndDrop, (state, {payload}) =>\n    update(state, {\n      board: (board: Board) => update(board, {\n        columns: (columns: Column[]) => {\n          const columnSource = columns.find((column => column._id === payload.source.droppableId));\n          const columnDestination = columns.find((column => column._id === payload.destination.droppableId));\n          const tasksSource = [...columnSource.tasks];\n          const tasksDestination = [...columnDestination.tasks];\n\n          if (payload.source.droppableId === payload.destination.droppableId) {\n            moveItemInArray<Task>(tasksDestination, payload.source.index, payload.destination.index);\n          } else {\n            transferArrayItem<Task>(tasksSource, tasksDestination, payload.source.index, payload.destination.index);\n          }\n\n          return columns.map((column) => {\n            if (column._id === payload.destination.droppableId) {\n              return update(column, {\n                tasks: { $set: tasksDestination }\n              })\n            }\n\n            if (column._id === payload.source.droppableId) {\n              return update(column, {\n                tasks: { $set: tasksSource }\n              })\n            }\n\n            return column;\n          });\n        }\n      }),\n      errorMessage: { $set: null },\n      isFetching: { $set: true }\n    })\n  )\n);\n\nexport function reducer(state: BoardState | undefined, action: Action) {\n  return boardReducer(state, action);\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { AuthEffects } from './effects/auth.effects';\nimport { reducer as authReducer } from '@root-store/auth/reducers/auth.reducer';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    StoreModule.forFeature('auth', authReducer),\n    EffectsModule.forFeature([AuthEffects])\n  ]\n})\nexport class AuthModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '@root-store/state';\n\nimport * as AuthActions from '@root-store/auth/actions/auth.actions';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n    this.store.dispatch(AuthActions.chechAuthByToken());\n  }\n}\n","<!--<div>123</div>-->\n\n<app-header></app-header>\n\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule, FaIconLibrary } from '@fortawesome/angular-fontawesome';\n\nimport { faSearch, faPlus, faBell, faInfo, faCoffee, faClipboard, faHome } from '@fortawesome/free-solid-svg-icons';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    FontAwesomeModule\n  ],\n  exports: [FontAwesomeModule]\n})\nexport class FontawesomeModule {\n  constructor(private library: FaIconLibrary) {\n    library.addIcons(faClipboard, faSearch, faPlus, faBell, faInfo, faCoffee, faHome);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport { AuthInterceptor } from '@app/core/interceptors/auth.interceptor';\n\nimport { AppComponent } from './app.component';\n\nimport { RootStoreModule } from '@app/root-store/root-store.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { HeaderModule } from '@app/modules/header/header.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RootStoreModule,\n    SharedModule,\n    HeaderModule,\n\n    AppRoutingModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { RouterReducerState } from '@ngrx/router-store';\n\nimport * as auth from '@root-store/auth/state';\nimport * as boardsState from '@root-store/boards/state';\nimport * as boardState  from '@root-store/board/state';\n\nexport interface AppState {\n  readonly router?: RouterReducerState;\n  readonly auth: auth.Auth;\n  readonly boards: boardsState.BoardsState;\n  readonly board: boardState.BoardState;\n}\n\nexport const initialAppState: AppState = {\n  auth: auth.initialAuthState,\n  boards: boardsState.initialState,\n  board: boardState.initialState,\n};\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { map, switchMap, catchError } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { Actions, ofType, Effect } from '@ngrx/effects';\n\nimport { AppState } from '@root-store/state';\nimport { CommentService } from '@app/core/services/comment.service';\nimport { CustomActionType } from '@app/models/action';\nimport { Comment } from '@app/models/comment';\nimport * as BoardActions from '@root-store/board/actions/board.actions';\n\n@Injectable()\nexport class CommentEffects {\n\n  constructor(\n    private actions$: Actions,\n    private store: Store<AppState>,\n    private commentService: CommentService\n  ) {\n  }\n\n  @Effect()\n  createTaskComment$ = this.actions$.pipe(\n    ofType(BoardActions.createTaskComment),\n    switchMap(({payload}: CustomActionType<{comment: Comment, taskId: string, boardId: string}>) => {\n      const { taskId, comment, boardId } = payload;\n\n      return this.commentService.createTaskComment(taskId, comment)\n        .pipe(\n          map(() => {\n            return BoardActions.loadBoard({ payload: boardId });\n          }),\n          catchError((error: HttpErrorResponse) => {\n            console.error(error);\n            return of(BoardActions.createTaskCommentFailure({ payload: error }));\n          })\n        );\n    })\n  );\n\n  @Effect()\n  deleteTaskComment$ = this.actions$.pipe(\n    ofType(BoardActions.deleteTaskComment),\n    switchMap(({payload}: CustomActionType<{commentId: string, taskId: string, boardId: string}>) => {\n      const { taskId, commentId, boardId } = payload;\n\n      return this.commentService.deleteTaskComment(taskId, commentId)\n        .pipe(\n          map(() => {\n            return BoardActions.loadBoard({ payload: boardId });\n          }),\n          catchError((error: HttpErrorResponse) => {\n            console.error(error);\n            return of(BoardActions.deleteTaskCommentFailure({ payload: error }));\n          })\n        );\n    })\n  );\n}\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Actions, ofType, Effect } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { AppState } from '@root-store/state';\nimport { ColumnService } from '@app/core/services/column.service';\nimport { CustomActionType } from '@app/models/action';\nimport * as BoardActions from '@root-store/board/actions/board.actions';\n\n@Injectable()\nexport class ColumnEffects {\n\n  constructor(\n    private actions$: Actions,\n    private store: Store<AppState>,\n    private columnService: ColumnService\n  ) { }\n\n  @Effect()\n  createColumn$ = this.actions$.pipe(\n    ofType(BoardActions.createColumn),\n    switchMap(({ payload }: CustomActionType<{boardId: string, columnTitle: string, templateColumnId: string}>) => {\n      const { boardId, columnTitle } = payload;\n\n      return this.columnService.createColumn(boardId, columnTitle)\n        .pipe(\n          map(() => {\n            return BoardActions.loadBoard({ payload: boardId });\n          }),\n          catchError((error: HttpErrorResponse) => {\n            console.error(error);\n            return of(BoardActions.createColumnFailure({ payload: error }));\n          })\n        )\n    })\n  );\n\n  @Effect()\n  deleteColumn$ = this.actions$.pipe(\n    ofType(BoardActions.deleteColumn),\n    switchMap(({ payload }: CustomActionType<string>) => {\n      return this.columnService.deleteColumn(payload).pipe(\n        map(() => {\n          return BoardActions.deleteColumnSuccess({ payload });\n        }),\n        catchError((error: HttpErrorResponse) => {\n          console.error(error);\n          return of(BoardActions.deleteColumnFailure({ payload: error }));\n        })\n      );\n    })\n  );\n\n  @Effect()\n  updateColumnTitle$ = this.actions$.pipe(\n    ofType(BoardActions.updateColumnTitle),\n    switchMap(({ payload }: CustomActionType<{ title: string, columnId: string }>) => {\n      const { title, columnId } = payload;\n      return this.columnService.updateColumnTitle(columnId, title).pipe(\n        map(() => {\n          return BoardActions.updateColumnTitleSuccess({ payload: { title, columnId } });\n        }),\n        catchError((error: HttpErrorResponse) => {\n          console.error(error);\n          return of(BoardActions.updateColumnTitleFailure({ payload: error }));\n        })\n      );\n    })\n  );\n}\n","import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, AbstractControl, ValidationErrors, ValidatorFn, } from '@angular/forms';\n\nexport function emailValidation(): ValidatorFn {\n  return (control: AbstractControl) => {\n    const reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n\n    const isValidEmail = reg.test(control.value);\n\n    return isValidEmail ? null : { emailInvalid: true };\n  };\n}\n\nexport function isEmptyValidation(): ValidatorFn {\n  return (control: AbstractControl) => {\n    let value;\n    if (control.value && control.value.trim) {\n      value = control.value.trim();\n    }\n    return value ? null : { required: true };\n  };\n}\n\n\n\n@Directive({\n  selector: '[appEmailValidate]',\n  providers: [{provide: NG_VALIDATORS, useExisting: EmailValidateDirective, multi: true}]\n})\nexport class EmailValidateDirective {\n  constructor() { }\n\n  validate(control: AbstractControl): ValidationErrors | null {\n    return emailValidation()(control);\n  }\n}\n","import { createAction, props } from '@ngrx/store';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { AuthDataRequest, AuthResponse, SignUpDataRequest } from '@app/models/auth';\nimport { Payload } from '@app/models/payload';\n\nexport const authActionTypes = {\n  Auth: '[Auth] Login',\n  AuthSuccess: '[Auth] Login Success',\n  AuthFailure: '[Auth] Login Failure',\n\n  SignUp: '[SignUp] Login',\n  SignUpSuccess: '[SignUp] Login Success',\n  SignUpFailure: '[SignUp] Login Failure',\n\n  ChechAuthByToken: '[Auth] ChechAuthByToken',\n  ChechAuthByTokenSuccess: '[Auth] ChechAuthByToken Success',\n  ChechAuthByTokenFailure: '[Auth] ChechAuthByToken Failure',\n\n  LogOut: '[Auth] LogOut',\n};\n\nexport const auth = createAction(\n  authActionTypes.Auth,\n  props<Payload<AuthDataRequest>>()\n);\n\nexport const authSuccess = createAction(\n  authActionTypes.AuthSuccess,\n  props<Payload<AuthResponse>>()\n);\n\nexport const authFailure = createAction(\n  authActionTypes.AuthFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const signUp = createAction(\n  authActionTypes.SignUp,\n  props<Payload<SignUpDataRequest>>()\n);\n\nexport const signUpSuccess = createAction(\n  authActionTypes.SignUpSuccess,\n  props<Payload<AuthResponse>>()\n);\n\nexport const signUpFailure = createAction(\n  authActionTypes.SignUpFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const chechAuthByToken = createAction(\n  authActionTypes.ChechAuthByToken\n);\n\nexport const chechAuthByTokenSuccess = createAction(\n  authActionTypes.ChechAuthByTokenSuccess,\n  props<Payload<AuthResponse>>()\n);\n\nexport const chechAuthByTokenFailure = createAction(\n  authActionTypes.ChechAuthByTokenFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const logOut = createAction(\n  authActionTypes.LogOut,\n);\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(\n    private router: Router\n  ) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    let sessionToken = localStorage.getItem('sessionToken');\n\n    if (!sessionToken) {\n      sessionToken = '';\n      this.router.navigate(['/']);\n    }\n\n    const authReq = request.clone({\n      headers: request.headers.set('authorization', `${sessionToken}`)\n    });\n\n\n    return next.handle(authReq).pipe(\n      tap(\n        () => {},\n        (err: HttpErrorResponse) => {\n          console.error(err);\n          if (err.status === 401) {\n            this.router.navigate(['/sign-in']);\n          }\n\n          if (err.status === 404 && err.statusText === 'Not Found') {\n            this.router.navigate(['/']);\n          }\n        })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatExpansionModule } from '@angular/material/expansion';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatMenuModule,\n    MatProgressSpinnerModule,\n    DragDropModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    MatExpansionModule,\n  ],\n  exports: [\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatMenuModule,\n    MatProgressSpinnerModule,\n    DragDropModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    MatExpansionModule,\n  ]\n})\nexport class MaterialModule { }\n","import { Action, createReducer, on } from '@ngrx/store';\nimport update from 'immutability-helper';\n\nimport { initialAuthState, Auth } from '@root-store/auth/state';\n\nimport * as AuthActions from '@root-store/auth/actions/auth.actions';\n\nconst authReducer = createReducer(\n  initialAuthState,\n\n  on(\n    AuthActions.auth,\n    AuthActions.signUp,\n    AuthActions.chechAuthByToken,\n\n    (state) =>\n      update(state, {\n        isAuthenticated: { $set: false },\n        isFetching: { $set: true },\n        errorMessage: { $set: null },\n      })\n  ),\n\n  on(\n    AuthActions.authSuccess,\n    AuthActions.signUpSuccess,\n    AuthActions.chechAuthByTokenSuccess,\n\n    (state, { payload }) =>\n      update(state, {\n        data: { $set: payload },\n        isAuthenticated: { $set: true },\n        isFetching: { $set: false },\n        errorMessage: { $set: null }\n      })\n  ),\n\n  on(\n    AuthActions.authFailure,\n    AuthActions.signUpFailure,\n    AuthActions.chechAuthByTokenFailure,\n\n    (state, { payload: { error } }) =>\n      update(state, {\n        isAuthenticated: { $set: false },\n        isFetching: { $set: false },\n        errorMessage: { $set: error.message }\n      })\n  ),\n\n  on(AuthActions.logOut, (() => initialAuthState))\n);\n\nexport function reducer(state: Auth, action: Action) {\n  return authReducer(state, action);\n}\n","import { createAction, props } from '@ngrx/store';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { Boards } from '@app/models/boards';\nimport { Board } from '@app/models/board';\nimport { Payload } from '@app/models/payload';\n\nexport const boardsActionTypes = {\n  LoadBoards: '[Boards] Load Boards',\n  LoadBoardsSuccess: '[Boards] Load Boards Success',\n  LoadBoardsFailure: '[Boards] Load Boards Failure',\n\n  OpenBoardCreator: '[Boards] Open Board Creator',\n  CloseBoardCreator: '[Boards] Close Board Creator',\n  CreateBoard: '[Boards] Create Board ',\n  CreateBoardSuccess: '[Boards] Create Board Success',\n  CreateBoardFailure: '[Boards] Create Board Failure',\n\n  CheckBoards: '[Boards] Check Boards',\n  CheckBoardsSuccess: '[Boards] Check Boards Success',\n};\n\nexport const loadBoards = createAction(\n  boardsActionTypes.LoadBoards\n);\n\nexport const loadBoardsSuccess = createAction(\n  boardsActionTypes.LoadBoardsSuccess,\n  props<Payload<Boards>>()\n);\n\nexport const loadBoardsFailure = createAction(\n  boardsActionTypes.LoadBoardsFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const openBoardCreator = createAction(\n  boardsActionTypes.OpenBoardCreator\n);\n\nexport const closeBoardCreator = createAction(\n  boardsActionTypes.CloseBoardCreator\n);\n\nexport const createBoard = createAction(\n  boardsActionTypes.CreateBoard,\n  props<Payload<string>>()\n);\n\nexport const createBoardSuccess = createAction(\n  boardsActionTypes.CreateBoardSuccess,\n  props<Payload<Board>>()\n);\n\nexport const createBoardFailure = createAction(\n  boardsActionTypes.CreateBoardFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const checkBoards = createAction(\n  boardsActionTypes.CheckBoards\n);\n\nexport const checkBoardsSuccess = createAction(\n  boardsActionTypes.CheckBoardsSuccess\n);\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ActionReducer, MetaReducer, StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { routerReducer, RouterState, StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nimport { environment } from '@env/environment';\n\nimport { AppState, initialAppState } from '@root-store/state';\nimport { logOut } from '@root-store/auth/actions/auth.actions';\nimport { AuthModule } from '@root-store/auth/auth.module';\nimport { BoardsModule } from '@root-store/boards/boards.module';\nimport { BoardModule } from '@root-store/board/board.module';\nimport { PermissionsModule } from '@root-store/permissions/permissions.module';\n\nexport function logOutClear(reducer: ActionReducer<AppState>): ActionReducer<AppState> {\n  return (state, action) => {\n    if (logOut().type === action.type) {\n      return reducer({ ...initialAppState, router: state.router}, action)\n    }\n\n    return reducer(state, action);\n  };\n}\n\nexport const metaReducers: MetaReducer<any>[] = [logOutClear];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    AuthModule,\n    BoardsModule,\n    BoardModule,\n    PermissionsModule,\n\n    StoreModule.forRoot({router: routerReducer}, {\n      runtimeChecks: {\n        strictStateImmutability: true,\n      },\n      metaReducers\n    }),\n    EffectsModule.forRoot([]),\n    StoreRouterConnectingModule.forRoot({ stateKey: 'router', routerState: RouterState.Minimal }),\n    !environment.production ? StoreDevtoolsModule.instrument() : []\n  ]\n})\nexport class RootStoreModule { }\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { createAction, props } from '@ngrx/store';\n\nimport { Board, DNDData } from '@app/models/board';\nimport { Payload } from '@app/models/payload';\nimport { Comment } from '@app/models/comment';\n\nexport const boardActionTypes = {\n  LoadBoard: '[Board] Load Board',\n  LoadBoardSuccess: '[Board] Load Board Success',\n  LoadBoardFailure: '[Board] Load Board Failure',\n\n  UpdateBoardState: '[Board] Update Board State',\n\n  UpdateBoardTitle: '[Board] Update Board Title',\n  UpdateBoardTitleSuccess: '[Board] Update Board Title Success',\n  UpdateBoardTitleFailure: '[Board] Update Board Title Failure',\n\n  DeleteBoard: '[Board] Delete Board',\n  DeleteBoardSuccess: '[Board] Delete Board Success',\n  DeleteBoardFailure: '[Board] Delete Board Failure',\n\n  DragAndDrop: '[Board] DragAndDrop',\n\n  CreateColumn: '[Board] Create Column',\n  CreateColumnFailure: '[Board] Create Column Failure',\n\n  DeleteColumn: '[Board] Delete Column',\n  DeleteColumnSuccess: '[Board] Delete Column Success',\n  DeleteColumnFailure: '[Board] Delete Column Failure',\n\n  UpdateColumnTitle: '[Board] Update Column Title',\n  UpdateColumnTitleSuccess: '[Board] Update Column Title Success',\n  UpdateColumnTitleFailure: '[Board] Update Column Title Failure',\n\n  CreateTask: '[Board] Create Task',\n  CreateTaskFailure: '[Board] Create Task Failure',\n\n  DeleteTask: '[Board] Delete Task',\n  DeleteTaskFailure: '[Board] Delete Task Failure',\n\n  UpdateTaskTitle: '[Board] Update Task Title',\n  UpdateTaskTitleFailure: '[Board] Update Task Title Failure',\n\n  UpdateTaskMarks: '[Board] Update Task Marks',\n  UpdateTaskMarksFailure: '[Board] Update Task Marks Failure',\n  AddUserOnTask: '[Board] Add User On Task',\n  ChangeTaskStatus: '[Board] Change Task Status',\n  ChangeTaskStatusFailure: '[Board] Change Task Status Failure',\n\n  CreateTaskComment: '[Board] Create Task Comment',\n  CreateTaskCommentFailure: '[Board] Create Task Comment Failure',\n  DeleteTaskComment: '[Board] Delete Task Comment',\n  DeleteTaskCommentFailure: '[Board] Delete Task Comment Failure',\n\n  AddUserOnBoard: '[Board] Add User On Board',\n};\n\nexport const loadBoard = createAction(\n  boardActionTypes.LoadBoard,\n  props<Payload<string>>()\n);\n\nexport const loadBoardSuccess = createAction(\n  boardActionTypes.LoadBoardSuccess,\n  props<Payload<Board>>()\n);\n\nexport const loadBoardFailure = createAction(\n  boardActionTypes.LoadBoardFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const updateBoardState = createAction(\n  boardActionTypes.UpdateBoardState,\n  props<Payload<Board>>()\n);\n\nexport const updateBoardTitle = createAction(\n  boardActionTypes.UpdateBoardTitle,\n  props<Payload<{ title: string, boardId: string }>>()\n);\n\nexport const updateBoardTitleSuccess = createAction(\n  boardActionTypes.UpdateBoardTitleSuccess,\n  props<Payload<string>>()\n);\n\nexport const updateBoardTitleFailure = createAction(\n  boardActionTypes.UpdateBoardTitleFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const deleteBoard = createAction(\n  boardActionTypes.DeleteBoard,\n  props<Payload<string>>()\n);\n\nexport const deleteBoardSuccess = createAction(\n  boardActionTypes.DeleteBoardSuccess\n);\n\nexport const deleteBoardFailure = createAction(\n  boardActionTypes.DeleteBoardFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const dragAndDrop = createAction(\n  boardActionTypes.DragAndDrop,\n  props<Payload<DNDData>>()\n);\n\nexport const createColumn = createAction(\n  boardActionTypes.CreateColumn,\n  props<Payload<{boardId: string, columnTitle: string, templateColumnId: string}>>()\n);\n\nexport const createColumnFailure = createAction(\n  boardActionTypes.CreateColumnFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const deleteColumn = createAction(\n  boardActionTypes.DeleteColumn,\n  props<Payload<string>>()\n);\n\nexport const deleteColumnSuccess = createAction(\n  boardActionTypes.DeleteColumnSuccess,\n  props<Payload<string>>()\n);\n\nexport const deleteColumnFailure = createAction(\n  boardActionTypes.DeleteColumnFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const updateColumnTitle = createAction(\n  boardActionTypes.UpdateColumnTitle,\n  props<Payload<{ title: string, columnId: string }>>()\n);\n\nexport const updateColumnTitleSuccess = createAction(\n  boardActionTypes.UpdateColumnTitleSuccess,\n  props<Payload<{ title: string, columnId: string }>>()\n);\n\nexport const updateColumnTitleFailure = createAction(\n  boardActionTypes.UpdateColumnTitleFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const createTask = createAction(\n  boardActionTypes.CreateTask,\n  props<Payload<{columnId: string, task: string, boardId: string}>>()\n);\n\nexport const createTaskFailure = createAction(\n  boardActionTypes.CreateTaskFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const deleteTask = createAction(\n  boardActionTypes.DeleteTask,\n  props<Payload<{taskId: string, boardId: string}>>()\n);\n\nexport const deleteTaskFailure = createAction(\n  boardActionTypes.DeleteTaskFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const updateTaskTitle = createAction(\n  boardActionTypes.UpdateTaskTitle,\n  props<Payload<{task: string, taskId: string, boardId: string}>>()\n);\n\nexport const updateTaskTitleFailure = createAction(\n  boardActionTypes.UpdateTaskTitleFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const updateTaskMarks = createAction(\n  boardActionTypes.UpdateTaskMarks,\n  props<Payload<{mark: string, taskId: string, columnId: string, boardId: string}>>()\n);\n\nexport const updateTaskMarksFailure = createAction(\n  boardActionTypes.UpdateTaskMarksFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const changeTaskStatus = createAction(\n  boardActionTypes.ChangeTaskStatus,\n  props<Payload<{taskId: string, status: string, boardId: string}>>()\n);\n\nexport const changeTaskStatusFailure = createAction(\n  boardActionTypes.ChangeTaskStatusFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const addUserOnTask = createAction(\n  boardActionTypes.AddUserOnTask,\n  props<Payload<{userId: string, taskId: string, boardId: string}>>()\n);\n\nexport const createTaskComment = createAction(\n  boardActionTypes.CreateTaskComment,\n  props<Payload<{comment: Comment, taskId: string, boardId: string}>>()\n);\n\nexport const createTaskCommentFailure = createAction(\n  boardActionTypes.CreateTaskCommentFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const deleteTaskComment = createAction(\n  boardActionTypes.DeleteTaskComment,\n  props<Payload<{commentId: string, taskId: string, boardId: string}>>()\n);\n\nexport const deleteTaskCommentFailure = createAction(\n  boardActionTypes.DeleteTaskCommentFailure,\n  props<Payload<HttpErrorResponse>>()\n);\n\nexport const addUserOnBoard = createAction(\n  boardActionTypes.AddUserOnBoard,\n  props<Payload<{userId: string, role: string, boardId: string}>>()\n);\n\n\n","import { AuthResponse } from '@app/models/auth';\n\nexport interface Auth {\n  isAuthenticated: boolean;\n  errorMessage: any;\n  isFetching: boolean;\n  success?: boolean;\n  data: AuthResponse;\n}\n\nexport const initialAuthState: Auth = {\n  isAuthenticated: false,\n  errorMessage: null,\n  isFetching: false,\n  success: false,\n  data: null,\n};\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { of } from 'rxjs';\nimport { catchError, map, mergeMap, switchMap } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { Actions, ofType, Effect } from '@ngrx/effects';\n\nimport { AppState } from '@root-store/state';\nimport { AuthService } from '@app/core/services/auth.service';\nimport { BoardService } from '@app/core/services/board.service';\nimport { CustomActionType } from '@app/models/action';\nimport { Response } from '@app/models/response';\nimport { Board, DNDData } from '@app/models/board';\nimport * as BoardActions from '@root-store/board/actions/board.actions';\nimport * as BoardsActions from '@root-store/boards/actions/boards.actions';\nimport { TaskService } from '@app/core/services/task.service';\n\n@Injectable()\nexport class BoardEffects {\n\n  constructor(\n    private actions$: Actions,\n    private store: Store<AppState>,\n    private router: Router,\n    private as: AuthService,\n    private boardService: BoardService,\n    private taskService: TaskService,\n  ) {\n  }\n\n  @Effect()\n  loadBoard$ = this.actions$.pipe(\n    ofType(BoardActions.loadBoard),\n    switchMap(({ payload }: CustomActionType<string>) => {\n      return this.boardService.getBoard(payload).pipe(\n        map(({ data }: Response<Board>) => {\n          return BoardActions.loadBoardSuccess({ payload: data });\n        }),\n        catchError((error: HttpErrorResponse) => {\n          console.log(error);\n          return of(BoardActions.loadBoardFailure({payload: error}));\n        })\n      );\n    })\n  );\n\n  @Effect()\n  updateBoardTitle$ = this.actions$.pipe(\n    ofType(BoardActions.updateBoardTitle),\n    switchMap(({ payload }: CustomActionType<{ title: string, boardId: string }>) => {\n      const { title, boardId } = payload;\n\n      return this.boardService.updateBoardTitle(boardId, title).pipe(\n        mergeMap(() => [\n          BoardActions.updateBoardTitleSuccess({ payload: title }),\n          BoardsActions.loadBoards()\n        ]),\n        catchError((error: HttpErrorResponse) => {\n          console.log(error);\n          return of(BoardActions.loadBoardFailure({ payload: error }));\n        })\n      );\n    })\n  );\n\n  @Effect()\n  deleteBoard$ = this.actions$.pipe(\n    ofType(BoardActions.deleteBoard),\n    switchMap(({ payload }: CustomActionType<string>) => {\n      return this.boardService.deleteBoard(payload).pipe(\n        map(() => {\n          this.router.navigate(['/']);\n          return BoardsActions.loadBoards();\n        }),\n        catchError((error: HttpErrorResponse) => {\n          console.error(error);\n          return of(BoardActions.deleteBoardFailure({ payload: error }));\n        })\n      );\n    })\n  );\n\n  @Effect()\n  dnd$ = this.actions$.pipe(\n    ofType(BoardActions.dragAndDrop),\n    switchMap(({ payload }: CustomActionType<DNDData>) => {\n      return this.taskService.dnd(payload).pipe(\n        map(({data}: Response<Board>) => {\n          return BoardActions.updateBoardState({ payload: data });\n        }),\n        catchError((error: HttpErrorResponse) => {\n          console.log(error);\n          return of(BoardActions.loadBoard({payload: payload.boardId}));\n        })\n      );\n    })\n  );\n\n  @Effect()\n  addUserOnTask$ = this.actions$.pipe(\n    ofType(BoardActions.addUserOnTask),\n    switchMap(({ payload }: CustomActionType<{userId: string, taskId: string, boardId: string}>) => {\n      const {userId, taskId, boardId} = payload;\n\n      return this.taskService.addUserOnTask({ userId }, taskId)\n        .pipe(\n          map(() => {\n            return BoardActions.loadBoard({ payload: boardId });\n          }),\n          catchError((error: HttpErrorResponse) => {\n            console.log(error);\n            return of(BoardActions.loadBoardFailure({payload: error}));\n          })\n        );\n    })\n  );\n\n  @Effect()\n  addUserOnBoard$ = this.actions$.pipe(\n    ofType(BoardActions.addUserOnBoard),\n    switchMap(({ payload }: CustomActionType<{userId: string, role: string, boardId: string}>) => {\n      const {userId, role, boardId} = payload;\n\n      return this.boardService.addUserOnBoard({ userId, role }, boardId)\n        .pipe(\n          map(({data}: Response<Board>) => {\n            return BoardActions.updateBoardState({ payload: data });\n          }),\n          catchError((error: HttpErrorResponse) => {\n            console.log(error);\n            return of(BoardActions.loadBoardFailure({payload: error}));\n          })\n        );\n    })\n  );\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () => import('./pages/pages.module').then(m => m.PagesModule),\n  },\n];\n\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forRoot(routes, { enableTracing: false })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-delete-button',\n  templateUrl: './delete-button.component.html',\n  styleUrls: ['./delete-button.component.scss']\n})\nexport class DeleteButtonComponent implements OnInit {\n  @Input() classes: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"delete-button-wrap\">\n  <mat-icon\n    class=\"delete-button\"\n    [ngClass]=\"'delete-button--' + classes\"\n  >\n    close\n  </mat-icon>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@env/environment';\n\nimport { Response } from '@app/models/response';\nimport { Column } from '@app/models/column';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ColumnService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  createColumn(boardId: string, title: string): Observable<Response<Column> | HttpErrorResponse> {\n    return this.http.post<Response<Column> | HttpErrorResponse>(`${environment.apiUrl}/columns/${boardId}`, {title});\n  }\n\n  deleteColumn(columnId: string): Observable<Response<any> | HttpErrorResponse> {\n    return this.http.delete<Response<any> | HttpErrorResponse>(`${environment.apiUrl}/columns/${columnId}`);\n  }\n\n  updateColumnTitle(columnId: string, title: string): Observable<Response<Column> | HttpErrorResponse> {\n    return this.http.put<Response<Column> | HttpErrorResponse>(`${environment.apiUrl}/columns/${columnId}`, { title });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@env/environment';\n\nimport { Response } from '@app/models/response';\nimport {\n  AddingUser,\n  Board,\n  DNDData\n} from '@app/models/board';\nimport { Task } from '@app/models/task';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  createTask(columnId: string, task: string): Observable<Response<Task> | HttpErrorResponse> {\n    return this.http.post<Response<Task> | HttpErrorResponse>(`${environment.apiUrl}/tasks/${columnId}`, {task});\n  }\n\n  deleteTask(taskId: string): Observable<Response<any> | HttpErrorResponse> {\n    return this.http.delete<Response<any> | HttpErrorResponse>(`${environment.apiUrl}/tasks/${taskId}`);\n  }\n\n  updateTaskTitle(taskId: string, task: string): Observable<Response<Task> | HttpErrorResponse> {\n    return this.http.put<Response<Task> | HttpErrorResponse>(`${environment.apiUrl}/tasks/${taskId}`, { task });\n  }\n\n  updateTaskMarks(taskId: string, mark: string): Observable<Response<Task> | HttpErrorResponse> {\n    return this.http.patch<Response<Task> | HttpErrorResponse>(`${environment.apiUrl}/tasks/marks/${taskId}`, { mark });\n  }\n\n  changeTaskStatus(taskId: string, status: string): Observable<Response<Task> | HttpErrorResponse> {\n    return this.http.patch<Response<Task> | HttpErrorResponse>(`${environment.apiUrl}/tasks/status/${taskId}`, { status });\n  }\n\n  addUserOnTask(data: AddingUser, taskId: string): Observable<Response<Board> | HttpErrorResponse> {\n    return this.http.patch<Response<Board> | HttpErrorResponse>(`${environment.apiUrl}/tasks/${taskId}`, data);\n  }\n\n  dnd(data: DNDData) {\n    return this.http.patch(`${environment.apiUrl}/tasks`, { ...data });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoaderComponent } from './loader.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@NgModule({\n  declarations: [LoaderComponent],\n  imports: [\n    CommonModule,\n    MatProgressSpinnerModule\n  ],\n  exports: [LoaderComponent]\n})\nexport class LoaderModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}