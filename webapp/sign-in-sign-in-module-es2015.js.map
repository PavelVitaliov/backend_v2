{"version":3,"sources":["./src/app/pages/sign-in/services/sign-in.service.ts","./src/app/pages/sign-in/sign-in.component.ts","./src/app/pages/sign-in/sign-in.component.html","./src/app/pages/sign-in/sign-in.module.ts","./src/app/pages/sign-in/sign-in-routing.module.ts"],"names":[],"mappings":"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","file":"sign-in-sign-in-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Injectable()\nexport class SignInService {\n\n  constructor(\n    private fb: FormBuilder,\n  ) { }\n\n  public createForm(): FormGroup {\n    return this.fb.group({\n      email: ['admin@admin.admin', Validators.required],\n      password: ['admin', Validators.required],\n    });\n  }\n\n  public getErrorMessage(control: FormGroup): string {\n    if (!control) {\n      return;\n    }\n\n    return control.hasError('required') ? 'Field is required' : '';\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { Store } from '@ngrx/store';\n\nimport { SignInService as LocalSignInService } from '@app/pages/sign-in/services/sign-in.service';\nimport { AppState } from '@root-store/state';\n\nimport { Auth } from '@root-store/auth/state';\nimport * as AuthSelectors from '@root-store/auth/selectors/auth.selectors';\nimport * as AuthActions from '@root-store/auth/actions/auth.actions';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.scss']\n})\nexport class SignInComponent implements OnInit {\n  destroy: ReplaySubject<any> = new ReplaySubject<any>(1);\n\n  signInForm: FormGroup;\n\n  getState$: Observable<Auth>;\n\n  get email(): FormGroup {\n    return this.signInForm.get('email') as FormGroup;\n  }\n\n  get password(): FormGroup {\n    return this.signInForm.get('password') as FormGroup;\n  }\n\n  constructor(\n    private localSignInService: LocalSignInService,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit(): void {\n    this.signInForm = this.localSignInService.createForm();\n    this.getState$ = this.store.select(AuthSelectors.getAuth);\n  }\n\n  public getErrorMessage(control: FormGroup): string {\n    return this.localSignInService.getErrorMessage(control);\n  }\n\n  public onSignIn(): void {\n    this.store.dispatch(AuthActions.auth({payload: this.signInForm.value}));\n  }\n\n}\n","<div class=\"signin-wrap\">\n  <form class=\"signin-form\" [formGroup]=\"signInForm\" (submit)=\"onSignIn()\">\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Email</mat-label>\n      <input autofocus matInput placeholder=\"Enter your email\" formControlName=\"email\">\n      <mat-error *ngIf=\"email?.invalid\">{{getErrorMessage(email)}}</mat-error>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Password</mat-label>\n      <input matInput placeholder=\"Enter your password\" formControlName=\"password\" type=\"password\">\n      <mat-error *ngIf=\"password?.invalid\">{{getErrorMessage(password)}}</mat-error>\n    </mat-form-field>\n\n    <button class=\"signin-form__btn\" type=\"submit\" mat-raised-button color=\"primary\">\n      <ng-container *ngIf=\"!(getState$ | async)?.isFetching\">\n        SignIn\n      </ng-container>\n      <ng-container *ngIf=\"(getState$ | async)?.isFetching\">\n        <mat-spinner diameter=\"25\" color=\"#ffffff\"></mat-spinner>\n      </ng-container>\n\n    </button>\n\n  </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '@app/shared/shared.module';\nimport { SignInRoutingModule } from './sign-in-routing.module';\n\nimport { SignInService } from '@app/pages/sign-in/services/sign-in.service';\n\nimport { SignInComponent } from './sign-in.component';\n\n@NgModule({\n  declarations: [SignInComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    SignInRoutingModule\n  ],\n  providers: [SignInService]\n})\nexport class SignInModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SignInComponent } from '@app/pages/sign-in/sign-in.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: SignInComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SignInRoutingModule { }\n"],"sourceRoot":"webpack:///"}