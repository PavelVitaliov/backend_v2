{"version":3,"sources":["webpack:///src/app/pages/pages.component.ts","webpack:///src/app/pages/pages.component.html","webpack:///src/app/core/guards/auth.guard.ts","webpack:///src/app/pages/pages.module.ts","webpack:///src/app/root-store/auth/selectors/auth.selectors.ts","webpack:///src/app/pages/pages-routing.module.ts"],"names":["PagesComponent","AuthGuard","store","router","next","state","checkStoreAuthentication","pipe","storeAuth","localStorage","getItem","storeOrApiAuth","navigate","select","PagesModule","selectAuth","getAuth","auth","getIsAuthenticated","isAuthenticated","getCurrentUser","data","user","routes","path","redirectTo","pathMatch","component","children","loadChildren","then","m","SignInModule","SignUpModule","BoardsModule","canActivate","BoardModule","PagesRoutingModule","forChild"],"mappings":"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","file":"pages-pages-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pages',\n  templateUrl: './pages.component.html',\n  styleUrls: ['./pages.component.scss']\n})\nexport class PagesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { map, mergeMap, take } from 'rxjs/operators';\n\nimport * as AuthSelectors from '@root-store/auth/selectors/auth.selectors';\n\nimport { AppState } from '@root-store/state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private store: Store<AppState>,\n    private router: Router,\n  ) {}\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean {\n    return this.checkStoreAuthentication().pipe(\n      mergeMap((storeAuth) => {\n        if (storeAuth) {\n          return of(true);\n        }\n\n        return localStorage.getItem('sessionToken') ? of(true) : of(false);\n      }),\n      map(storeOrApiAuth => {\n        if (!storeOrApiAuth) {\n          this.router.navigate(['/sign-in']);\n          return false;\n        }\n\n        return true;\n      })\n    );\n\n    return true;\n  }\n\n  checkStoreAuthentication() {\n    return this.store.select(AuthSelectors.getIsAuthenticated).pipe(take(1));\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PagesRoutingModule } from './pages-routing.module';\nimport { PagesComponent } from './pages.component';\n\n\n@NgModule({\n  declarations: [PagesComponent],\n  imports: [\n    CommonModule,\n    PagesRoutingModule,\n  ]\n})\nexport class PagesModule {\n}\n","import { createSelector } from '@ngrx/store';\nimport { AppState } from '@root-store/state';\nimport { Auth } from '@root-store/auth/state';\nimport { User } from '@app/models/user';\n\nconst selectAuth = (state: AppState) => {\n  return state;\n};\n\nexport const getAuth = createSelector(\n  selectAuth,\n  (state: AppState): Auth => {\n    return state.auth;\n  }\n);\n\nexport const getIsAuthenticated = createSelector(\n  selectAuth,\n  (state: AppState): boolean => {\n    return state.auth.isAuthenticated;\n  }\n);\n\nexport const getCurrentUser = createSelector(\n  selectAuth,\n  (state: AppState): User => {\n    if (state.auth && state.auth.data && state.auth.data.user) {\n      return state.auth.data.user;\n    }\n  }\n);\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PagesComponent } from '@app/pages/pages.component';\n\nimport { AuthGuard } from '@app/core/guards/auth.guard';\n\n\nconst routes: Routes = [\n  { path: '',   redirectTo: 'boards', pathMatch: 'full' },\n  {\n    path: '',\n    component: PagesComponent,\n    children: [\n      {\n        path: 'sign-in',\n        loadChildren: () => import('./sign-in/sign-in.module').then(m => m.SignInModule),\n      },\n      {\n        path: 'sign-up',\n        loadChildren: () => import('./sign-up/sign-Up.module').then(m => m.SignUpModule),\n      },\n      {\n        path: 'boards',\n        loadChildren: () => import('./boards/boards.module').then(m => m.BoardsModule),\n        canActivate: [AuthGuard],\n      },\n      {\n        path: 'board/:id',\n        loadChildren: () => import('./board/board.module').then(m => m.BoardModule),\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PagesRoutingModule { }\n"]}